2023-05-04 00:29:14.8666|INFO|Nite.API.Program|Initializing application...
2023-05-04 00:29:26.9508|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (107ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
2023-05-04 00:29:30.3620|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (3,160ms) [Parameters=[], CommandType='Text', CommandTimeout='60']
IF SERVERPROPERTY('EngineEdition') <> 5
BEGIN
    ALTER DATABASE [NiteDb] SET SINGLE_USER WITH ROLLBACK IMMEDIATE;
END;
2023-05-04 00:29:31.8943|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (1,530ms) [Parameters=[], CommandType='Text', CommandTimeout='60']
DROP DATABASE [NiteDb];
2023-05-04 00:29:33.3007|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (1,246ms) [Parameters=[], CommandType='Text', CommandTimeout='60']
CREATE DATABASE [NiteDb];
2023-05-04 00:29:33.8697|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (567ms) [Parameters=[], CommandType='Text', CommandTimeout='60']
IF SERVERPROPERTY('EngineEdition') <> 5
BEGIN
    ALTER DATABASE [NiteDb] SET READ_COMMITTED_SNAPSHOT ON;
END;
2023-05-04 00:29:33.9040|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (3ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
2023-05-04 00:29:34.1144|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (25ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
CREATE TABLE [__EFMigrationsHistory] (
    [MigrationId] nvarchar(150) NOT NULL,
    [ProductVersion] nvarchar(32) NOT NULL,
    CONSTRAINT [PK___EFMigrationsHistory] PRIMARY KEY ([MigrationId])
);
2023-05-04 00:29:34.1213|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (3ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
2023-05-04 00:29:34.1867|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (51ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT OBJECT_ID(N'[__EFMigrationsHistory]');
2023-05-04 00:29:34.2122|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (15ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [MigrationId], [ProductVersion]
FROM [__EFMigrationsHistory]
ORDER BY [MigrationId];
2023-05-04 00:29:34.2667|INFO|Microsoft.EntityFrameworkCore.Migrations|Applying migration '20230328164011_Initial Migration'.
2023-05-04 00:29:34.3979|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (12ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
CREATE TABLE [TVShows] (
    [Id] int NOT NULL IDENTITY,
    [Name] nvarchar(max) NOT NULL,
    [Year] int NOT NULL,
    [Audience] nvarchar(max) NOT NULL,
    [Seasons] int NOT NULL,
    [Genre] nvarchar(max) NOT NULL,
    [Status] nvarchar(max) NOT NULL,
    [Description] nvarchar(max) NOT NULL,
    CONSTRAINT [PK_TVShows] PRIMARY KEY ([Id])
);
2023-05-04 00:29:34.4063|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (5ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
CREATE TABLE [Users] (
    [Id] int NOT NULL IDENTITY,
    [Username] nvarchar(max) NOT NULL,
    [Email] nvarchar(max) NOT NULL,
    [Password] nvarchar(max) NOT NULL,
    [IsAdmin] bit NOT NULL,
    CONSTRAINT [PK_Users] PRIMARY KEY ([Id])
);
2023-05-04 00:29:34.5483|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (140ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
IF EXISTS (SELECT * FROM [sys].[identity_columns] WHERE [name] IN (N'Id', N'Audience', N'Description', N'Genre', N'Name', N'Seasons', N'Status', N'Year') AND [object_id] = OBJECT_ID(N'[TVShows]'))
    SET IDENTITY_INSERT [TVShows] ON;
INSERT INTO [TVShows] ([Id], [Audience], [Description], [Genre], [Name], [Seasons], [Status], [Year])
VALUES (1, N'18+', N'Nine noble families fight for control over the lands of Westeros, while an ancient enemy returns after being dormant for millennia.', N'Drama', N'Game of Thrones', 8, N'Ended', 2011),
(2, N'18+', N'Each season has its own self-contained storyline and characters and it has been posed that each season will introduce a new location as well as new characters and storylines.', N'Horror', N'American Horror Story', 10, N'On going', 2011),
(3, N'18+', N'Dexter is a serial killer with a "code" which directs his compulsions to kill only the guilty. As a blood spatter analyst for the Miami police, he has access to crime scenes, picking up clues and checking DNA to confirm a target''s guilt before he kills them.', N'Mystery', N'Dexter', 8, N'Ended', 2006),
(4, N'16+', N'The series follows a dangerously charming, intensely obsessive young man who goes to extreme measures to insert himself into the lives of those he is transfixed by.', N'Psychological thriller', N'You', 4, N'On going', 2018);
IF EXISTS (SELECT * FROM [sys].[identity_columns] WHERE [name] IN (N'Id', N'Audience', N'Description', N'Genre', N'Name', N'Seasons', N'Status', N'Year') AND [object_id] = OBJECT_ID(N'[TVShows]'))
    SET IDENTITY_INSERT [TVShows] OFF;
2023-05-04 00:29:34.5690|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (18ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
IF EXISTS (SELECT * FROM [sys].[identity_columns] WHERE [name] IN (N'Id', N'Email', N'IsAdmin', N'Password', N'Username') AND [object_id] = OBJECT_ID(N'[Users]'))
    SET IDENTITY_INSERT [Users] ON;
INSERT INTO [Users] ([Id], [Email], [IsAdmin], [Password], [Username])
VALUES (1, N'deeagabor@gmail.com', CAST(1 AS bit), N'ef797c8118f02dfb649607dd5d3f8c7623048c9c063d532cc95c5ed7a898a64f', N'deeagabor'),
(2, N'wolflorena@gmail.com', CAST(1 AS bit), N'ef797c8118f02dfb649607dd5d3f8c7623048c9c063d532cc95c5ed7a898a64f', N'wolflorena'),
(3, N'testunu@gmail.com', CAST(0 AS bit), N'ef797c8118f02dfb649607dd5d3f8c7623048c9c063d532cc95c5ed7a898a64f', N'test1'),
(4, N'testdoi@gmail.com', CAST(0 AS bit), N'ef797c8118f02dfb649607dd5d3f8c7623048c9c063d532cc95c5ed7a898a64f', N'test2');
IF EXISTS (SELECT * FROM [sys].[identity_columns] WHERE [name] IN (N'Id', N'Email', N'IsAdmin', N'Password', N'Username') AND [object_id] = OBJECT_ID(N'[Users]'))
    SET IDENTITY_INSERT [Users] OFF;
2023-05-04 00:29:34.5766|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (6ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
INSERT INTO [__EFMigrationsHistory] ([MigrationId], [ProductVersion])
VALUES (N'20230328164011_Initial Migration', N'7.0.4');
2023-05-04 00:29:34.6062|INFO|Microsoft.EntityFrameworkCore.Migrations|Applying migration '20230425163840_Poster'.
2023-05-04 00:29:34.6499|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (13ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
ALTER TABLE [TVShows] ADD [Poster] nvarchar(max) NULL;
2023-05-04 00:29:34.6624|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (10ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
UPDATE [TVShows] SET [Poster] = NULL
WHERE [Id] = 1;
SELECT @@ROWCOUNT;
2023-05-04 00:29:34.6685|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (4ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
UPDATE [TVShows] SET [Poster] = NULL
WHERE [Id] = 2;
SELECT @@ROWCOUNT;
2023-05-04 00:29:34.6685|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (3ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
UPDATE [TVShows] SET [Poster] = NULL
WHERE [Id] = 3;
SELECT @@ROWCOUNT;
2023-05-04 00:29:34.6685|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (4ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
UPDATE [TVShows] SET [Poster] = NULL
WHERE [Id] = 4;
SELECT @@ROWCOUNT;
2023-05-04 00:29:34.6859|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (3ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
INSERT INTO [__EFMigrationsHistory] ([MigrationId], [ProductVersion])
VALUES (N'20230425163840_Poster', N'7.0.4');
2023-05-04 00:29:34.6859|INFO|Microsoft.EntityFrameworkCore.Migrations|Applying migration '20230426194744_Poster - PUT'.
2023-05-04 00:29:34.7063|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (3ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
INSERT INTO [__EFMigrationsHistory] ([MigrationId], [ProductVersion])
VALUES (N'20230426194744_Poster - PUT', N'7.0.4');
2023-05-04 00:29:34.7146|INFO|Microsoft.EntityFrameworkCore.Migrations|Applying migration '20230426202154_Poster - NotMapped'.
2023-05-04 00:29:34.7146|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (3ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
INSERT INTO [__EFMigrationsHistory] ([MigrationId], [ProductVersion])
VALUES (N'20230426202154_Poster - NotMapped', N'7.0.4');
2023-05-04 00:29:34.7342|INFO|Microsoft.EntityFrameworkCore.Migrations|Applying migration '20230426204947_New properties'.
2023-05-04 00:29:34.7507|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (3ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
ALTER TABLE [TVShows] ADD [Banner] nvarchar(max) NULL;
2023-05-04 00:29:34.7657|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (13ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
ALTER TABLE [TVShows] ADD [Likes] int NOT NULL DEFAULT 0;
2023-05-04 00:29:34.7657|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (4ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
ALTER TABLE [TVShows] ADD [Logo] nvarchar(max) NULL;
2023-05-04 00:29:34.7799|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (5ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
ALTER TABLE [TVShows] ADD [NewSeason] nvarchar(max) NULL;
2023-05-04 00:29:34.7799|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (8ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
ALTER TABLE [TVShows] ADD [Streaming] nvarchar(max) NOT NULL DEFAULT N'';
2023-05-04 00:29:34.7984|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (6ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
UPDATE [TVShows] SET [Banner] = NULL, [Likes] = 1024, [Logo] = NULL, [NewSeason] = NULL, [Streaming] = N'Netflix'
WHERE [Id] = 1;
SELECT @@ROWCOUNT;
2023-05-04 00:29:34.7984|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (6ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
UPDATE [TVShows] SET [Banner] = NULL, [Likes] = 2200, [Logo] = NULL, [NewSeason] = N'11/12/2023', [Streaming] = N'HBO'
WHERE [Id] = 2;
SELECT @@ROWCOUNT;
2023-05-04 00:29:34.8125|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (3ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
UPDATE [TVShows] SET [Banner] = NULL, [Likes] = 870, [Logo] = NULL, [NewSeason] = NULL, [Streaming] = N'Disney+'
WHERE [Id] = 3;
SELECT @@ROWCOUNT;
2023-05-04 00:29:34.8125|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (3ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
UPDATE [TVShows] SET [Banner] = NULL, [Likes] = 2560, [Logo] = NULL, [NewSeason] = N'12/10/2023', [Streaming] = N'Amazon Prime'
WHERE [Id] = 4;
SELECT @@ROWCOUNT;
2023-05-04 00:29:34.8231|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (3ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
INSERT INTO [__EFMigrationsHistory] ([MigrationId], [ProductVersion])
VALUES (N'20230426204947_New properties', N'7.0.4');
2023-05-04 00:29:35.3751|INFO|Microsoft.AspNetCore.DataProtection.KeyManagement.XmlKeyManager|User profile is available. Using 'C:\Users\Andreea\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2023-05-04 00:29:39.0427|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7053/ - -
2023-05-04 00:29:39.2890|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7053/ - - - 404 0 - 260.9414ms
2023-05-04 00:33:59.6372|INFO|Nite.API.Program|Initializing application...
2023-05-04 00:34:06.4470|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (66ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
2023-05-04 00:34:06.5591|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (59ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
2023-05-04 00:34:06.5591|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (5ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
2023-05-04 00:34:09.7370|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (3,033ms) [Parameters=[], CommandType='Text', CommandTimeout='60']
IF SERVERPROPERTY('EngineEdition') <> 5
BEGIN
    ALTER DATABASE [NiteDb] SET SINGLE_USER WITH ROLLBACK IMMEDIATE;
END;
2023-05-04 00:34:10.0438|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (305ms) [Parameters=[], CommandType='Text', CommandTimeout='60']
DROP DATABASE [NiteDb];
2023-05-04 00:34:11.1226|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (968ms) [Parameters=[], CommandType='Text', CommandTimeout='60']
CREATE DATABASE [NiteDb];
2023-05-04 00:34:11.5924|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (468ms) [Parameters=[], CommandType='Text', CommandTimeout='60']
IF SERVERPROPERTY('EngineEdition') <> 5
BEGIN
    ALTER DATABASE [NiteDb] SET READ_COMMITTED_SNAPSHOT ON;
END;
2023-05-04 00:34:11.6205|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (3ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
2023-05-04 00:34:11.8218|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (15ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
CREATE TABLE [__EFMigrationsHistory] (
    [MigrationId] nvarchar(150) NOT NULL,
    [ProductVersion] nvarchar(32) NOT NULL,
    CONSTRAINT [PK___EFMigrationsHistory] PRIMARY KEY ([MigrationId])
);
2023-05-04 00:34:11.8280|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (3ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
2023-05-04 00:34:11.8408|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (3ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT OBJECT_ID(N'[__EFMigrationsHistory]');
2023-05-04 00:34:11.8573|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (8ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [MigrationId], [ProductVersion]
FROM [__EFMigrationsHistory]
ORDER BY [MigrationId];
2023-05-04 00:34:11.9054|INFO|Microsoft.EntityFrameworkCore.Migrations|Applying migration '20230328164011_Initial Migration'.
2023-05-04 00:34:12.0325|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (7ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
CREATE TABLE [TVShows] (
    [Id] int NOT NULL IDENTITY,
    [Name] nvarchar(max) NOT NULL,
    [Year] int NOT NULL,
    [Audience] nvarchar(max) NOT NULL,
    [Seasons] int NOT NULL,
    [Genre] nvarchar(max) NOT NULL,
    [Status] nvarchar(max) NOT NULL,
    [Description] nvarchar(max) NOT NULL,
    CONSTRAINT [PK_TVShows] PRIMARY KEY ([Id])
);
2023-05-04 00:34:12.0325|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (5ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
CREATE TABLE [Users] (
    [Id] int NOT NULL IDENTITY,
    [Username] nvarchar(max) NOT NULL,
    [Email] nvarchar(max) NOT NULL,
    [Password] nvarchar(max) NOT NULL,
    [IsAdmin] bit NOT NULL,
    CONSTRAINT [PK_Users] PRIMARY KEY ([Id])
);
2023-05-04 00:34:12.1147|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (72ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
IF EXISTS (SELECT * FROM [sys].[identity_columns] WHERE [name] IN (N'Id', N'Audience', N'Description', N'Genre', N'Name', N'Seasons', N'Status', N'Year') AND [object_id] = OBJECT_ID(N'[TVShows]'))
    SET IDENTITY_INSERT [TVShows] ON;
INSERT INTO [TVShows] ([Id], [Audience], [Description], [Genre], [Name], [Seasons], [Status], [Year])
VALUES (1, N'18+', N'Nine noble families fight for control over the lands of Westeros, while an ancient enemy returns after being dormant for millennia.', N'Drama', N'Game of Thrones', 8, N'Ended', 2011),
(2, N'18+', N'Each season has its own self-contained storyline and characters and it has been posed that each season will introduce a new location as well as new characters and storylines.', N'Horror', N'American Horror Story', 10, N'On going', 2011),
(3, N'18+', N'Dexter is a serial killer with a "code" which directs his compulsions to kill only the guilty. As a blood spatter analyst for the Miami police, he has access to crime scenes, picking up clues and checking DNA to confirm a target''s guilt before he kills them.', N'Mystery', N'Dexter', 8, N'Ended', 2006),
(4, N'16+', N'The series follows a dangerously charming, intensely obsessive young man who goes to extreme measures to insert himself into the lives of those he is transfixed by.', N'Psychological thriller', N'You', 4, N'On going', 2018);
IF EXISTS (SELECT * FROM [sys].[identity_columns] WHERE [name] IN (N'Id', N'Audience', N'Description', N'Genre', N'Name', N'Seasons', N'Status', N'Year') AND [object_id] = OBJECT_ID(N'[TVShows]'))
    SET IDENTITY_INSERT [TVShows] OFF;
2023-05-04 00:34:12.1368|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (20ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
IF EXISTS (SELECT * FROM [sys].[identity_columns] WHERE [name] IN (N'Id', N'Email', N'IsAdmin', N'Password', N'Username') AND [object_id] = OBJECT_ID(N'[Users]'))
    SET IDENTITY_INSERT [Users] ON;
INSERT INTO [Users] ([Id], [Email], [IsAdmin], [Password], [Username])
VALUES (1, N'deeagabor@gmail.com', CAST(1 AS bit), N'ef797c8118f02dfb649607dd5d3f8c7623048c9c063d532cc95c5ed7a898a64f', N'deeagabor'),
(2, N'wolflorena@gmail.com', CAST(1 AS bit), N'ef797c8118f02dfb649607dd5d3f8c7623048c9c063d532cc95c5ed7a898a64f', N'wolflorena'),
(3, N'testunu@gmail.com', CAST(0 AS bit), N'ef797c8118f02dfb649607dd5d3f8c7623048c9c063d532cc95c5ed7a898a64f', N'test1'),
(4, N'testdoi@gmail.com', CAST(0 AS bit), N'ef797c8118f02dfb649607dd5d3f8c7623048c9c063d532cc95c5ed7a898a64f', N'test2');
IF EXISTS (SELECT * FROM [sys].[identity_columns] WHERE [name] IN (N'Id', N'Email', N'IsAdmin', N'Password', N'Username') AND [object_id] = OBJECT_ID(N'[Users]'))
    SET IDENTITY_INSERT [Users] OFF;
2023-05-04 00:34:12.1368|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (4ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
INSERT INTO [__EFMigrationsHistory] ([MigrationId], [ProductVersion])
VALUES (N'20230328164011_Initial Migration', N'7.0.4');
2023-05-04 00:34:12.1723|INFO|Microsoft.EntityFrameworkCore.Migrations|Applying migration '20230425163840_Poster'.
2023-05-04 00:34:12.2076|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (4ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
ALTER TABLE [TVShows] ADD [Poster] nvarchar(max) NULL;
2023-05-04 00:34:12.2137|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (4ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
UPDATE [TVShows] SET [Poster] = NULL
WHERE [Id] = 1;
SELECT @@ROWCOUNT;
2023-05-04 00:34:12.2137|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (3ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
UPDATE [TVShows] SET [Poster] = NULL
WHERE [Id] = 2;
SELECT @@ROWCOUNT;
2023-05-04 00:34:12.2137|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (2ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
UPDATE [TVShows] SET [Poster] = NULL
WHERE [Id] = 3;
SELECT @@ROWCOUNT;
2023-05-04 00:34:12.2137|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (2ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
UPDATE [TVShows] SET [Poster] = NULL
WHERE [Id] = 4;
SELECT @@ROWCOUNT;
2023-05-04 00:34:12.2323|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (3ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
INSERT INTO [__EFMigrationsHistory] ([MigrationId], [ProductVersion])
VALUES (N'20230425163840_Poster', N'7.0.4');
2023-05-04 00:34:12.2323|INFO|Microsoft.EntityFrameworkCore.Migrations|Applying migration '20230426194744_Poster - PUT'.
2023-05-04 00:34:12.2493|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (2ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
INSERT INTO [__EFMigrationsHistory] ([MigrationId], [ProductVersion])
VALUES (N'20230426194744_Poster - PUT', N'7.0.4');
2023-05-04 00:34:12.2493|INFO|Microsoft.EntityFrameworkCore.Migrations|Applying migration '20230426202154_Poster - NotMapped'.
2023-05-04 00:34:12.2664|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (2ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
INSERT INTO [__EFMigrationsHistory] ([MigrationId], [ProductVersion])
VALUES (N'20230426202154_Poster - NotMapped', N'7.0.4');
2023-05-04 00:34:12.2664|INFO|Microsoft.EntityFrameworkCore.Migrations|Applying migration '20230426204947_New properties'.
2023-05-04 00:34:12.2891|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (3ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
ALTER TABLE [TVShows] ADD [Banner] nvarchar(max) NULL;
2023-05-04 00:34:12.2960|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (5ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
ALTER TABLE [TVShows] ADD [Likes] int NOT NULL DEFAULT 0;
2023-05-04 00:34:12.2960|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (3ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
ALTER TABLE [TVShows] ADD [Logo] nvarchar(max) NULL;
2023-05-04 00:34:12.3072|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (4ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
ALTER TABLE [TVShows] ADD [NewSeason] nvarchar(max) NULL;
2023-05-04 00:34:12.3072|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (5ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
ALTER TABLE [TVShows] ADD [Streaming] nvarchar(max) NOT NULL DEFAULT N'';
2023-05-04 00:34:12.3072|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (5ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
UPDATE [TVShows] SET [Banner] = NULL, [Likes] = 1024, [Logo] = NULL, [NewSeason] = NULL, [Streaming] = N'Netflix'
WHERE [Id] = 1;
SELECT @@ROWCOUNT;
2023-05-04 00:34:12.3280|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (5ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
UPDATE [TVShows] SET [Banner] = NULL, [Likes] = 2200, [Logo] = NULL, [NewSeason] = N'11/12/2023', [Streaming] = N'HBO'
WHERE [Id] = 2;
SELECT @@ROWCOUNT;
2023-05-04 00:34:12.3280|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (3ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
UPDATE [TVShows] SET [Banner] = NULL, [Likes] = 870, [Logo] = NULL, [NewSeason] = NULL, [Streaming] = N'Disney+'
WHERE [Id] = 3;
SELECT @@ROWCOUNT;
2023-05-04 00:34:12.3391|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (3ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
UPDATE [TVShows] SET [Banner] = NULL, [Likes] = 2560, [Logo] = NULL, [NewSeason] = N'12/10/2023', [Streaming] = N'Amazon Prime'
WHERE [Id] = 4;
SELECT @@ROWCOUNT;
2023-05-04 00:34:12.3391|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (3ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
INSERT INTO [__EFMigrationsHistory] ([MigrationId], [ProductVersion])
VALUES (N'20230426204947_New properties', N'7.0.4');
2023-05-04 00:34:12.3391|INFO|Microsoft.EntityFrameworkCore.Migrations|Applying migration '20230503212914_TVShowSeasons DB'.
2023-05-04 00:34:12.4062|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (8ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
CREATE TABLE [TVShowSeasons] (
    [Id] int NOT NULL IDENTITY,
    [TVShowId] int NOT NULL,
    [Name] nvarchar(max) NOT NULL,
    [NumberOfEpisodes] int NOT NULL,
    [DurationEpisode] int NOT NULL,
    CONSTRAINT [PK_TVShowSeasons] PRIMARY KEY ([Id]),
    CONSTRAINT [FK_TVShowSeasons_TVShows_TVShowId] FOREIGN KEY ([TVShowId]) REFERENCES [TVShows] ([Id]) ON DELETE CASCADE
);
2023-05-04 00:34:12.4268|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (18ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
IF EXISTS (SELECT * FROM [sys].[identity_columns] WHERE [name] IN (N'Id', N'DurationEpisode', N'Name', N'NumberOfEpisodes', N'TVShowId') AND [object_id] = OBJECT_ID(N'[TVShowSeasons]'))
    SET IDENTITY_INSERT [TVShowSeasons] ON;
INSERT INTO [TVShowSeasons] ([Id], [DurationEpisode], [Name], [NumberOfEpisodes], [TVShowId])
VALUES (1, 42, N'Season 1', 10, 1);
IF EXISTS (SELECT * FROM [sys].[identity_columns] WHERE [name] IN (N'Id', N'DurationEpisode', N'Name', N'NumberOfEpisodes', N'TVShowId') AND [object_id] = OBJECT_ID(N'[TVShowSeasons]'))
    SET IDENTITY_INSERT [TVShowSeasons] OFF;
2023-05-04 00:34:12.4667|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (37ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
CREATE INDEX [IX_TVShowSeasons_TVShowId] ON [TVShowSeasons] ([TVShowId]);
2023-05-04 00:34:12.4667|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (3ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
INSERT INTO [__EFMigrationsHistory] ([MigrationId], [ProductVersion])
VALUES (N'20230503212914_TVShowSeasons DB', N'7.0.4');
2023-05-04 00:34:12.8333|INFO|Microsoft.AspNetCore.DataProtection.KeyManagement.XmlKeyManager|User profile is available. Using 'C:\Users\Andreea\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2023-05-04 00:34:14.0667|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7053/ - -
2023-05-04 00:34:14.2977|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7053/ - - - 404 0 - 237.0478ms
2023-05-04 00:42:46.9360|INFO|Nite.API.Program|Initializing application...
2023-05-04 00:42:53.5226|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (82ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
2023-05-04 00:42:53.7339|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (163ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
2023-05-04 00:42:53.7339|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (5ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
2023-05-04 00:42:57.0458|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (3,163ms) [Parameters=[], CommandType='Text', CommandTimeout='60']
IF SERVERPROPERTY('EngineEdition') <> 5
BEGIN
    ALTER DATABASE [NiteDb] SET SINGLE_USER WITH ROLLBACK IMMEDIATE;
END;
2023-05-04 00:42:57.7699|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (721ms) [Parameters=[], CommandType='Text', CommandTimeout='60']
DROP DATABASE [NiteDb];
2023-05-04 00:42:59.0892|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (1,185ms) [Parameters=[], CommandType='Text', CommandTimeout='60']
CREATE DATABASE [NiteDb];
2023-05-04 00:42:59.5415|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (450ms) [Parameters=[], CommandType='Text', CommandTimeout='60']
IF SERVERPROPERTY('EngineEdition') <> 5
BEGIN
    ALTER DATABASE [NiteDb] SET READ_COMMITTED_SNAPSHOT ON;
END;
2023-05-04 00:42:59.5759|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (6ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
2023-05-04 00:42:59.7748|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (21ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
CREATE TABLE [__EFMigrationsHistory] (
    [MigrationId] nvarchar(150) NOT NULL,
    [ProductVersion] nvarchar(32) NOT NULL,
    CONSTRAINT [PK___EFMigrationsHistory] PRIMARY KEY ([MigrationId])
);
2023-05-04 00:42:59.7808|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (3ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
2023-05-04 00:42:59.7929|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (3ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT OBJECT_ID(N'[__EFMigrationsHistory]');
2023-05-04 00:42:59.8100|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (9ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [MigrationId], [ProductVersion]
FROM [__EFMigrationsHistory]
ORDER BY [MigrationId];
2023-05-04 00:42:59.8593|INFO|Microsoft.EntityFrameworkCore.Migrations|Applying migration '20230328164011_Initial Migration'.
2023-05-04 00:42:59.9863|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (9ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
CREATE TABLE [TVShows] (
    [Id] int NOT NULL IDENTITY,
    [Name] nvarchar(max) NOT NULL,
    [Year] int NOT NULL,
    [Audience] nvarchar(max) NOT NULL,
    [Seasons] int NOT NULL,
    [Genre] nvarchar(max) NOT NULL,
    [Status] nvarchar(max) NOT NULL,
    [Description] nvarchar(max) NOT NULL,
    CONSTRAINT [PK_TVShows] PRIMARY KEY ([Id])
);
2023-05-04 00:42:59.9863|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (4ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
CREATE TABLE [Users] (
    [Id] int NOT NULL IDENTITY,
    [Username] nvarchar(max) NOT NULL,
    [Email] nvarchar(max) NOT NULL,
    [Password] nvarchar(max) NOT NULL,
    [IsAdmin] bit NOT NULL,
    CONSTRAINT [PK_Users] PRIMARY KEY ([Id])
);
2023-05-04 00:43:00.0983|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (102ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
IF EXISTS (SELECT * FROM [sys].[identity_columns] WHERE [name] IN (N'Id', N'Audience', N'Description', N'Genre', N'Name', N'Seasons', N'Status', N'Year') AND [object_id] = OBJECT_ID(N'[TVShows]'))
    SET IDENTITY_INSERT [TVShows] ON;
INSERT INTO [TVShows] ([Id], [Audience], [Description], [Genre], [Name], [Seasons], [Status], [Year])
VALUES (1, N'18+', N'Nine noble families fight for control over the lands of Westeros, while an ancient enemy returns after being dormant for millennia.', N'Drama', N'Game of Thrones', 8, N'Ended', 2011),
(2, N'18+', N'Each season has its own self-contained storyline and characters and it has been posed that each season will introduce a new location as well as new characters and storylines.', N'Horror', N'American Horror Story', 10, N'On going', 2011),
(3, N'18+', N'Dexter is a serial killer with a "code" which directs his compulsions to kill only the guilty. As a blood spatter analyst for the Miami police, he has access to crime scenes, picking up clues and checking DNA to confirm a target''s guilt before he kills them.', N'Mystery', N'Dexter', 8, N'Ended', 2006),
(4, N'16+', N'The series follows a dangerously charming, intensely obsessive young man who goes to extreme measures to insert himself into the lives of those he is transfixed by.', N'Psychological thriller', N'You', 4, N'On going', 2018);
IF EXISTS (SELECT * FROM [sys].[identity_columns] WHERE [name] IN (N'Id', N'Audience', N'Description', N'Genre', N'Name', N'Seasons', N'Status', N'Year') AND [object_id] = OBJECT_ID(N'[TVShows]'))
    SET IDENTITY_INSERT [TVShows] OFF;
2023-05-04 00:43:00.1294|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (28ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
IF EXISTS (SELECT * FROM [sys].[identity_columns] WHERE [name] IN (N'Id', N'Email', N'IsAdmin', N'Password', N'Username') AND [object_id] = OBJECT_ID(N'[Users]'))
    SET IDENTITY_INSERT [Users] ON;
INSERT INTO [Users] ([Id], [Email], [IsAdmin], [Password], [Username])
VALUES (1, N'deeagabor@gmail.com', CAST(1 AS bit), N'ef797c8118f02dfb649607dd5d3f8c7623048c9c063d532cc95c5ed7a898a64f', N'deeagabor'),
(2, N'wolflorena@gmail.com', CAST(1 AS bit), N'ef797c8118f02dfb649607dd5d3f8c7623048c9c063d532cc95c5ed7a898a64f', N'wolflorena'),
(3, N'testunu@gmail.com', CAST(0 AS bit), N'ef797c8118f02dfb649607dd5d3f8c7623048c9c063d532cc95c5ed7a898a64f', N'test1'),
(4, N'testdoi@gmail.com', CAST(0 AS bit), N'ef797c8118f02dfb649607dd5d3f8c7623048c9c063d532cc95c5ed7a898a64f', N'test2');
IF EXISTS (SELECT * FROM [sys].[identity_columns] WHERE [name] IN (N'Id', N'Email', N'IsAdmin', N'Password', N'Username') AND [object_id] = OBJECT_ID(N'[Users]'))
    SET IDENTITY_INSERT [Users] OFF;
2023-05-04 00:43:00.1365|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (5ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
INSERT INTO [__EFMigrationsHistory] ([MigrationId], [ProductVersion])
VALUES (N'20230328164011_Initial Migration', N'7.0.4');
2023-05-04 00:43:00.1653|INFO|Microsoft.EntityFrameworkCore.Migrations|Applying migration '20230425163840_Poster'.
2023-05-04 00:43:00.2091|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (10ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
ALTER TABLE [TVShows] ADD [Poster] nvarchar(max) NULL;
2023-05-04 00:43:00.2188|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (7ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
UPDATE [TVShows] SET [Poster] = NULL
WHERE [Id] = 1;
SELECT @@ROWCOUNT;
2023-05-04 00:43:00.2188|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (4ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
UPDATE [TVShows] SET [Poster] = NULL
WHERE [Id] = 2;
SELECT @@ROWCOUNT;
2023-05-04 00:43:00.2297|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (3ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
UPDATE [TVShows] SET [Poster] = NULL
WHERE [Id] = 3;
SELECT @@ROWCOUNT;
2023-05-04 00:43:00.2297|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (2ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
UPDATE [TVShows] SET [Poster] = NULL
WHERE [Id] = 4;
SELECT @@ROWCOUNT;
2023-05-04 00:43:00.2297|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (3ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
INSERT INTO [__EFMigrationsHistory] ([MigrationId], [ProductVersion])
VALUES (N'20230425163840_Poster', N'7.0.4');
2023-05-04 00:43:00.2463|INFO|Microsoft.EntityFrameworkCore.Migrations|Applying migration '20230426194744_Poster - PUT'.
2023-05-04 00:43:00.2463|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (3ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
INSERT INTO [__EFMigrationsHistory] ([MigrationId], [ProductVersion])
VALUES (N'20230426194744_Poster - PUT', N'7.0.4');
2023-05-04 00:43:00.2635|INFO|Microsoft.EntityFrameworkCore.Migrations|Applying migration '20230426202154_Poster - NotMapped'.
2023-05-04 00:43:00.2635|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (2ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
INSERT INTO [__EFMigrationsHistory] ([MigrationId], [ProductVersion])
VALUES (N'20230426202154_Poster - NotMapped', N'7.0.4');
2023-05-04 00:43:00.2800|INFO|Microsoft.EntityFrameworkCore.Migrations|Applying migration '20230426204947_New properties'.
2023-05-04 00:43:00.2969|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (3ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
ALTER TABLE [TVShows] ADD [Banner] nvarchar(max) NULL;
2023-05-04 00:43:00.3076|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (8ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
ALTER TABLE [TVShows] ADD [Likes] int NOT NULL DEFAULT 0;
2023-05-04 00:43:00.3076|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (3ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
ALTER TABLE [TVShows] ADD [Logo] nvarchar(max) NULL;
2023-05-04 00:43:00.3076|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (3ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
ALTER TABLE [TVShows] ADD [NewSeason] nvarchar(max) NULL;
2023-05-04 00:43:00.3296|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (8ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
ALTER TABLE [TVShows] ADD [Streaming] nvarchar(max) NOT NULL DEFAULT N'';
2023-05-04 00:43:00.3296|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (5ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
UPDATE [TVShows] SET [Banner] = NULL, [Likes] = 1024, [Logo] = NULL, [NewSeason] = NULL, [Streaming] = N'Netflix'
WHERE [Id] = 1;
SELECT @@ROWCOUNT;
2023-05-04 00:43:00.3459|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (6ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
UPDATE [TVShows] SET [Banner] = NULL, [Likes] = 2200, [Logo] = NULL, [NewSeason] = N'11/12/2023', [Streaming] = N'HBO'
WHERE [Id] = 2;
SELECT @@ROWCOUNT;
2023-05-04 00:43:00.3459|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (3ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
UPDATE [TVShows] SET [Banner] = NULL, [Likes] = 870, [Logo] = NULL, [NewSeason] = NULL, [Streaming] = N'Disney+'
WHERE [Id] = 3;
SELECT @@ROWCOUNT;
2023-05-04 00:43:00.3568|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (3ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
UPDATE [TVShows] SET [Banner] = NULL, [Likes] = 2560, [Logo] = NULL, [NewSeason] = N'12/10/2023', [Streaming] = N'Amazon Prime'
WHERE [Id] = 4;
SELECT @@ROWCOUNT;
2023-05-04 00:43:00.3568|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (4ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
INSERT INTO [__EFMigrationsHistory] ([MigrationId], [ProductVersion])
VALUES (N'20230426204947_New properties', N'7.0.4');
2023-05-04 00:43:00.3702|INFO|Microsoft.EntityFrameworkCore.Migrations|Applying migration '20230503212914_TVShowSeasons DB'.
2023-05-04 00:43:00.4216|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (7ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
CREATE TABLE [TVShowSeasons] (
    [Id] int NOT NULL IDENTITY,
    [TVShowId] int NOT NULL,
    [Name] nvarchar(max) NOT NULL,
    [NumberOfEpisodes] int NOT NULL,
    [DurationEpisode] int NOT NULL,
    CONSTRAINT [PK_TVShowSeasons] PRIMARY KEY ([Id]),
    CONSTRAINT [FK_TVShowSeasons_TVShows_TVShowId] FOREIGN KEY ([TVShowId]) REFERENCES [TVShows] ([Id]) ON DELETE CASCADE
);
2023-05-04 00:43:00.4421|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (18ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
IF EXISTS (SELECT * FROM [sys].[identity_columns] WHERE [name] IN (N'Id', N'DurationEpisode', N'Name', N'NumberOfEpisodes', N'TVShowId') AND [object_id] = OBJECT_ID(N'[TVShowSeasons]'))
    SET IDENTITY_INSERT [TVShowSeasons] ON;
INSERT INTO [TVShowSeasons] ([Id], [DurationEpisode], [Name], [NumberOfEpisodes], [TVShowId])
VALUES (1, 42, N'Season 1', 10, 1);
IF EXISTS (SELECT * FROM [sys].[identity_columns] WHERE [name] IN (N'Id', N'DurationEpisode', N'Name', N'NumberOfEpisodes', N'TVShowId') AND [object_id] = OBJECT_ID(N'[TVShowSeasons]'))
    SET IDENTITY_INSERT [TVShowSeasons] OFF;
2023-05-04 00:43:00.4716|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (27ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
CREATE INDEX [IX_TVShowSeasons_TVShowId] ON [TVShowSeasons] ([TVShowId]);
2023-05-04 00:43:00.4716|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (3ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
INSERT INTO [__EFMigrationsHistory] ([MigrationId], [ProductVersion])
VALUES (N'20230503212914_TVShowSeasons DB', N'7.0.4');
2023-05-04 00:43:00.7948|INFO|Microsoft.AspNetCore.DataProtection.KeyManagement.XmlKeyManager|User profile is available. Using 'C:\Users\Andreea\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2023-05-04 00:43:01.9021|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7053/ - -
2023-05-04 00:43:02.1107|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7053/ - - - 404 0 - 214.3120ms
2023-05-04 00:45:42.0495|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (30ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
2023-05-04 00:45:42.1402|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (40ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
2023-05-04 00:47:00.9277|INFO|Nite.API.Program|Initializing application...
2023-05-04 00:47:05.1094|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (42ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
2023-05-04 00:47:05.1839|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (36ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
2023-05-04 00:47:05.1839|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (3ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
2023-05-04 00:47:08.3123|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (3,033ms) [Parameters=[], CommandType='Text', CommandTimeout='60']
IF SERVERPROPERTY('EngineEdition') <> 5
BEGIN
    ALTER DATABASE [NiteDb] SET SINGLE_USER WITH ROLLBACK IMMEDIATE;
END;
2023-05-04 00:47:08.4989|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (185ms) [Parameters=[], CommandType='Text', CommandTimeout='60']
DROP DATABASE [NiteDb];
2023-05-04 00:47:09.5339|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (922ms) [Parameters=[], CommandType='Text', CommandTimeout='60']
CREATE DATABASE [NiteDb];
2023-05-04 00:47:09.9947|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (426ms) [Parameters=[], CommandType='Text', CommandTimeout='60']
IF SERVERPROPERTY('EngineEdition') <> 5
BEGIN
    ALTER DATABASE [NiteDb] SET READ_COMMITTED_SNAPSHOT ON;
END;
2023-05-04 00:47:10.0233|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (3ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
2023-05-04 00:47:10.2196|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (19ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
CREATE TABLE [__EFMigrationsHistory] (
    [MigrationId] nvarchar(150) NOT NULL,
    [ProductVersion] nvarchar(32) NOT NULL,
    CONSTRAINT [PK___EFMigrationsHistory] PRIMARY KEY ([MigrationId])
);
2023-05-04 00:47:10.2196|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (3ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
2023-05-04 00:47:10.2395|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (3ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT OBJECT_ID(N'[__EFMigrationsHistory]');
2023-05-04 00:47:10.2558|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (7ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [MigrationId], [ProductVersion]
FROM [__EFMigrationsHistory]
ORDER BY [MigrationId];
2023-05-04 00:47:10.3010|INFO|Microsoft.EntityFrameworkCore.Migrations|Applying migration '20230328164011_Initial Migration'.
2023-05-04 00:47:10.4366|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (8ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
CREATE TABLE [TVShows] (
    [Id] int NOT NULL IDENTITY,
    [Name] nvarchar(max) NOT NULL,
    [Year] int NOT NULL,
    [Audience] nvarchar(max) NOT NULL,
    [Seasons] int NOT NULL,
    [Genre] nvarchar(max) NOT NULL,
    [Status] nvarchar(max) NOT NULL,
    [Description] nvarchar(max) NOT NULL,
    CONSTRAINT [PK_TVShows] PRIMARY KEY ([Id])
);
2023-05-04 00:47:10.4366|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (5ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
CREATE TABLE [Users] (
    [Id] int NOT NULL IDENTITY,
    [Username] nvarchar(max) NOT NULL,
    [Email] nvarchar(max) NOT NULL,
    [Password] nvarchar(max) NOT NULL,
    [IsAdmin] bit NOT NULL,
    CONSTRAINT [PK_Users] PRIMARY KEY ([Id])
);
2023-05-04 00:47:10.5159|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (69ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
IF EXISTS (SELECT * FROM [sys].[identity_columns] WHERE [name] IN (N'Id', N'Audience', N'Description', N'Genre', N'Name', N'Seasons', N'Status', N'Year') AND [object_id] = OBJECT_ID(N'[TVShows]'))
    SET IDENTITY_INSERT [TVShows] ON;
INSERT INTO [TVShows] ([Id], [Audience], [Description], [Genre], [Name], [Seasons], [Status], [Year])
VALUES (1, N'18+', N'Nine noble families fight for control over the lands of Westeros, while an ancient enemy returns after being dormant for millennia.', N'Drama', N'Game of Thrones', 8, N'Ended', 2011),
(2, N'18+', N'Each season has its own self-contained storyline and characters and it has been posed that each season will introduce a new location as well as new characters and storylines.', N'Horror', N'American Horror Story', 10, N'On going', 2011),
(3, N'18+', N'Dexter is a serial killer with a "code" which directs his compulsions to kill only the guilty. As a blood spatter analyst for the Miami police, he has access to crime scenes, picking up clues and checking DNA to confirm a target''s guilt before he kills them.', N'Mystery', N'Dexter', 8, N'Ended', 2006),
(4, N'16+', N'The series follows a dangerously charming, intensely obsessive young man who goes to extreme measures to insert himself into the lives of those he is transfixed by.', N'Psychological thriller', N'You', 4, N'On going', 2018);
IF EXISTS (SELECT * FROM [sys].[identity_columns] WHERE [name] IN (N'Id', N'Audience', N'Description', N'Genre', N'Name', N'Seasons', N'Status', N'Year') AND [object_id] = OBJECT_ID(N'[TVShows]'))
    SET IDENTITY_INSERT [TVShows] OFF;
2023-05-04 00:47:10.5330|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (15ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
IF EXISTS (SELECT * FROM [sys].[identity_columns] WHERE [name] IN (N'Id', N'Email', N'IsAdmin', N'Password', N'Username') AND [object_id] = OBJECT_ID(N'[Users]'))
    SET IDENTITY_INSERT [Users] ON;
INSERT INTO [Users] ([Id], [Email], [IsAdmin], [Password], [Username])
VALUES (1, N'deeagabor@gmail.com', CAST(1 AS bit), N'ef797c8118f02dfb649607dd5d3f8c7623048c9c063d532cc95c5ed7a898a64f', N'deeagabor'),
(2, N'wolflorena@gmail.com', CAST(1 AS bit), N'ef797c8118f02dfb649607dd5d3f8c7623048c9c063d532cc95c5ed7a898a64f', N'wolflorena'),
(3, N'testunu@gmail.com', CAST(0 AS bit), N'ef797c8118f02dfb649607dd5d3f8c7623048c9c063d532cc95c5ed7a898a64f', N'test1'),
(4, N'testdoi@gmail.com', CAST(0 AS bit), N'ef797c8118f02dfb649607dd5d3f8c7623048c9c063d532cc95c5ed7a898a64f', N'test2');
IF EXISTS (SELECT * FROM [sys].[identity_columns] WHERE [name] IN (N'Id', N'Email', N'IsAdmin', N'Password', N'Username') AND [object_id] = OBJECT_ID(N'[Users]'))
    SET IDENTITY_INSERT [Users] OFF;
2023-05-04 00:47:10.5330|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (4ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
INSERT INTO [__EFMigrationsHistory] ([MigrationId], [ProductVersion])
VALUES (N'20230328164011_Initial Migration', N'7.0.4');
2023-05-04 00:47:10.5675|INFO|Microsoft.EntityFrameworkCore.Migrations|Applying migration '20230425163840_Poster'.
2023-05-04 00:47:10.5998|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (3ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
ALTER TABLE [TVShows] ADD [Poster] nvarchar(max) NULL;
2023-05-04 00:47:10.6057|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (4ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
UPDATE [TVShows] SET [Poster] = NULL
WHERE [Id] = 1;
SELECT @@ROWCOUNT;
2023-05-04 00:47:10.6057|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (2ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
UPDATE [TVShows] SET [Poster] = NULL
WHERE [Id] = 2;
SELECT @@ROWCOUNT;
2023-05-04 00:47:10.6057|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (2ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
UPDATE [TVShows] SET [Poster] = NULL
WHERE [Id] = 3;
SELECT @@ROWCOUNT;
2023-05-04 00:47:10.6057|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (3ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
UPDATE [TVShows] SET [Poster] = NULL
WHERE [Id] = 4;
SELECT @@ROWCOUNT;
2023-05-04 00:47:10.6226|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (2ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
INSERT INTO [__EFMigrationsHistory] ([MigrationId], [ProductVersion])
VALUES (N'20230425163840_Poster', N'7.0.4');
2023-05-04 00:47:10.6226|INFO|Microsoft.EntityFrameworkCore.Migrations|Applying migration '20230426194744_Poster - PUT'.
2023-05-04 00:47:10.6401|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (3ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
INSERT INTO [__EFMigrationsHistory] ([MigrationId], [ProductVersion])
VALUES (N'20230426194744_Poster - PUT', N'7.0.4');
2023-05-04 00:47:10.6401|INFO|Microsoft.EntityFrameworkCore.Migrations|Applying migration '20230426202154_Poster - NotMapped'.
2023-05-04 00:47:10.6587|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (3ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
INSERT INTO [__EFMigrationsHistory] ([MigrationId], [ProductVersion])
VALUES (N'20230426202154_Poster - NotMapped', N'7.0.4');
2023-05-04 00:47:10.6587|INFO|Microsoft.EntityFrameworkCore.Migrations|Applying migration '20230426204947_New properties'.
2023-05-04 00:47:10.6807|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (3ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
ALTER TABLE [TVShows] ADD [Banner] nvarchar(max) NULL;
2023-05-04 00:47:10.6871|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (4ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
ALTER TABLE [TVShows] ADD [Likes] int NOT NULL DEFAULT 0;
2023-05-04 00:47:10.6871|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (3ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
ALTER TABLE [TVShows] ADD [Logo] nvarchar(max) NULL;
2023-05-04 00:47:10.6871|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (3ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
ALTER TABLE [TVShows] ADD [NewSeason] nvarchar(max) NULL;
2023-05-04 00:47:10.7034|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (4ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
ALTER TABLE [TVShows] ADD [Streaming] nvarchar(max) NOT NULL DEFAULT N'';
2023-05-04 00:47:10.7034|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (5ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
UPDATE [TVShows] SET [Banner] = NULL, [Likes] = 1024, [Logo] = NULL, [NewSeason] = NULL, [Streaming] = N'Netflix'
WHERE [Id] = 1;
SELECT @@ROWCOUNT;
2023-05-04 00:47:10.7163|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (4ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
UPDATE [TVShows] SET [Banner] = NULL, [Likes] = 2200, [Logo] = NULL, [NewSeason] = N'11/12/2023', [Streaming] = N'HBO'
WHERE [Id] = 2;
SELECT @@ROWCOUNT;
2023-05-04 00:47:10.7163|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (3ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
UPDATE [TVShows] SET [Banner] = NULL, [Likes] = 870, [Logo] = NULL, [NewSeason] = NULL, [Streaming] = N'Disney+'
WHERE [Id] = 3;
SELECT @@ROWCOUNT;
2023-05-04 00:47:10.7163|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (3ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
UPDATE [TVShows] SET [Banner] = NULL, [Likes] = 2560, [Logo] = NULL, [NewSeason] = N'12/10/2023', [Streaming] = N'Amazon Prime'
WHERE [Id] = 4;
SELECT @@ROWCOUNT;
2023-05-04 00:47:10.7304|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (3ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
INSERT INTO [__EFMigrationsHistory] ([MigrationId], [ProductVersion])
VALUES (N'20230426204947_New properties', N'7.0.4');
2023-05-04 00:47:10.7304|INFO|Microsoft.EntityFrameworkCore.Migrations|Applying migration '20230503212914_TVShowSeasons DB'.
2023-05-04 00:47:10.7840|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (4ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
CREATE TABLE [TVShowSeasons] (
    [Id] int NOT NULL IDENTITY,
    [TVShowId] int NOT NULL,
    [Name] nvarchar(max) NOT NULL,
    [NumberOfEpisodes] int NOT NULL,
    [DurationEpisode] int NOT NULL,
    CONSTRAINT [PK_TVShowSeasons] PRIMARY KEY ([Id]),
    CONSTRAINT [FK_TVShowSeasons_TVShows_TVShowId] FOREIGN KEY ([TVShowId]) REFERENCES [TVShows] ([Id]) ON DELETE CASCADE
);
2023-05-04 00:47:10.8018|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (15ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
IF EXISTS (SELECT * FROM [sys].[identity_columns] WHERE [name] IN (N'Id', N'DurationEpisode', N'Name', N'NumberOfEpisodes', N'TVShowId') AND [object_id] = OBJECT_ID(N'[TVShowSeasons]'))
    SET IDENTITY_INSERT [TVShowSeasons] ON;
INSERT INTO [TVShowSeasons] ([Id], [DurationEpisode], [Name], [NumberOfEpisodes], [TVShowId])
VALUES (1, 42, N'Season 1', 10, 1);
IF EXISTS (SELECT * FROM [sys].[identity_columns] WHERE [name] IN (N'Id', N'DurationEpisode', N'Name', N'NumberOfEpisodes', N'TVShowId') AND [object_id] = OBJECT_ID(N'[TVShowSeasons]'))
    SET IDENTITY_INSERT [TVShowSeasons] OFF;
2023-05-04 00:47:10.8151|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (11ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
CREATE INDEX [IX_TVShowSeasons_TVShowId] ON [TVShowSeasons] ([TVShowId]);
2023-05-04 00:47:10.8151|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (3ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
INSERT INTO [__EFMigrationsHistory] ([MigrationId], [ProductVersion])
VALUES (N'20230503212914_TVShowSeasons DB', N'7.0.4');
2023-05-04 00:47:10.8266|INFO|Microsoft.EntityFrameworkCore.Migrations|Applying migration '20230503214542_TVShowSeasons DB Add data'.
2023-05-04 00:47:10.8571|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (20ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
IF EXISTS (SELECT * FROM [sys].[identity_columns] WHERE [name] IN (N'Id', N'DurationEpisode', N'Name', N'NumberOfEpisodes', N'TVShowId') AND [object_id] = OBJECT_ID(N'[TVShowSeasons]'))
    SET IDENTITY_INSERT [TVShowSeasons] ON;
INSERT INTO [TVShowSeasons] ([Id], [DurationEpisode], [Name], [NumberOfEpisodes], [TVShowId])
VALUES (2, 45, N'Season 2', 12, 1);
IF EXISTS (SELECT * FROM [sys].[identity_columns] WHERE [name] IN (N'Id', N'DurationEpisode', N'Name', N'NumberOfEpisodes', N'TVShowId') AND [object_id] = OBJECT_ID(N'[TVShowSeasons]'))
    SET IDENTITY_INSERT [TVShowSeasons] OFF;
2023-05-04 00:47:10.8571|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (3ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
INSERT INTO [__EFMigrationsHistory] ([MigrationId], [ProductVersion])
VALUES (N'20230503214542_TVShowSeasons DB Add data', N'7.0.4');
2023-05-04 00:47:11.1093|INFO|Microsoft.AspNetCore.DataProtection.KeyManagement.XmlKeyManager|User profile is available. Using 'C:\Users\Andreea\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2023-05-04 00:47:12.0727|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7053/ - -
2023-05-04 00:47:12.2191|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7053/ - - - 404 0 - 151.2424ms
2023-05-04 02:07:03.0372|INFO|Nite.API.Program|Initializing application...
2023-05-04 02:07:10.7526|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (85ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
2023-05-04 02:07:11.0410|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (238ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
2023-05-04 02:07:11.0504|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (6ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
2023-05-04 02:07:14.4145|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (3,210ms) [Parameters=[], CommandType='Text', CommandTimeout='60']
IF SERVERPROPERTY('EngineEdition') <> 5
BEGIN
    ALTER DATABASE [NiteDb] SET SINGLE_USER WITH ROLLBACK IMMEDIATE;
END;
2023-05-04 02:07:15.4609|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (1,040ms) [Parameters=[], CommandType='Text', CommandTimeout='60']
DROP DATABASE [NiteDb];
2023-05-04 02:07:16.8169|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (1,221ms) [Parameters=[], CommandType='Text', CommandTimeout='60']
CREATE DATABASE [NiteDb];
2023-05-04 02:07:17.3386|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (519ms) [Parameters=[], CommandType='Text', CommandTimeout='60']
IF SERVERPROPERTY('EngineEdition') <> 5
BEGIN
    ALTER DATABASE [NiteDb] SET READ_COMMITTED_SNAPSHOT ON;
END;
2023-05-04 02:07:17.3733|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (3ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
2023-05-04 02:07:17.5914|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (25ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
CREATE TABLE [__EFMigrationsHistory] (
    [MigrationId] nvarchar(150) NOT NULL,
    [ProductVersion] nvarchar(32) NOT NULL,
    CONSTRAINT [PK___EFMigrationsHistory] PRIMARY KEY ([MigrationId])
);
2023-05-04 02:07:17.5914|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (3ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
2023-05-04 02:07:17.6125|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (4ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT OBJECT_ID(N'[__EFMigrationsHistory]');
2023-05-04 02:07:17.6323|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (11ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [MigrationId], [ProductVersion]
FROM [__EFMigrationsHistory]
ORDER BY [MigrationId];
2023-05-04 02:07:17.6832|INFO|Microsoft.EntityFrameworkCore.Migrations|Applying migration '20230328164011_Initial Migration'.
2023-05-04 02:07:17.8266|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (12ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
CREATE TABLE [TVShows] (
    [Id] int NOT NULL IDENTITY,
    [Name] nvarchar(max) NOT NULL,
    [Year] int NOT NULL,
    [Audience] nvarchar(max) NOT NULL,
    [Seasons] int NOT NULL,
    [Genre] nvarchar(max) NOT NULL,
    [Status] nvarchar(max) NOT NULL,
    [Description] nvarchar(max) NOT NULL,
    CONSTRAINT [PK_TVShows] PRIMARY KEY ([Id])
);
2023-05-04 02:07:17.8266|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (6ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
CREATE TABLE [Users] (
    [Id] int NOT NULL IDENTITY,
    [Username] nvarchar(max) NOT NULL,
    [Email] nvarchar(max) NOT NULL,
    [Password] nvarchar(max) NOT NULL,
    [IsAdmin] bit NOT NULL,
    CONSTRAINT [PK_Users] PRIMARY KEY ([Id])
);
2023-05-04 02:07:17.9401|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (102ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
IF EXISTS (SELECT * FROM [sys].[identity_columns] WHERE [name] IN (N'Id', N'Audience', N'Description', N'Genre', N'Name', N'Seasons', N'Status', N'Year') AND [object_id] = OBJECT_ID(N'[TVShows]'))
    SET IDENTITY_INSERT [TVShows] ON;
INSERT INTO [TVShows] ([Id], [Audience], [Description], [Genre], [Name], [Seasons], [Status], [Year])
VALUES (1, N'18+', N'Nine noble families fight for control over the lands of Westeros, while an ancient enemy returns after being dormant for millennia.', N'Drama', N'Game of Thrones', 8, N'Ended', 2011),
(2, N'18+', N'Each season has its own self-contained storyline and characters and it has been posed that each season will introduce a new location as well as new characters and storylines.', N'Horror', N'American Horror Story', 10, N'On going', 2011),
(3, N'18+', N'Dexter is a serial killer with a "code" which directs his compulsions to kill only the guilty. As a blood spatter analyst for the Miami police, he has access to crime scenes, picking up clues and checking DNA to confirm a target''s guilt before he kills them.', N'Mystery', N'Dexter', 8, N'Ended', 2006),
(4, N'16+', N'The series follows a dangerously charming, intensely obsessive young man who goes to extreme measures to insert himself into the lives of those he is transfixed by.', N'Psychological thriller', N'You', 4, N'On going', 2018);
IF EXISTS (SELECT * FROM [sys].[identity_columns] WHERE [name] IN (N'Id', N'Audience', N'Description', N'Genre', N'Name', N'Seasons', N'Status', N'Year') AND [object_id] = OBJECT_ID(N'[TVShows]'))
    SET IDENTITY_INSERT [TVShows] OFF;
2023-05-04 02:07:17.9594|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (17ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
IF EXISTS (SELECT * FROM [sys].[identity_columns] WHERE [name] IN (N'Id', N'Email', N'IsAdmin', N'Password', N'Username') AND [object_id] = OBJECT_ID(N'[Users]'))
    SET IDENTITY_INSERT [Users] ON;
INSERT INTO [Users] ([Id], [Email], [IsAdmin], [Password], [Username])
VALUES (1, N'deeagabor@gmail.com', CAST(1 AS bit), N'ef797c8118f02dfb649607dd5d3f8c7623048c9c063d532cc95c5ed7a898a64f', N'deeagabor'),
(2, N'wolflorena@gmail.com', CAST(1 AS bit), N'ef797c8118f02dfb649607dd5d3f8c7623048c9c063d532cc95c5ed7a898a64f', N'wolflorena'),
(3, N'testunu@gmail.com', CAST(0 AS bit), N'ef797c8118f02dfb649607dd5d3f8c7623048c9c063d532cc95c5ed7a898a64f', N'test1'),
(4, N'testdoi@gmail.com', CAST(0 AS bit), N'ef797c8118f02dfb649607dd5d3f8c7623048c9c063d532cc95c5ed7a898a64f', N'test2');
IF EXISTS (SELECT * FROM [sys].[identity_columns] WHERE [name] IN (N'Id', N'Email', N'IsAdmin', N'Password', N'Username') AND [object_id] = OBJECT_ID(N'[Users]'))
    SET IDENTITY_INSERT [Users] OFF;
2023-05-04 02:07:17.9663|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (5ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
INSERT INTO [__EFMigrationsHistory] ([MigrationId], [ProductVersion])
VALUES (N'20230328164011_Initial Migration', N'7.0.4');
2023-05-04 02:07:17.9947|INFO|Microsoft.EntityFrameworkCore.Migrations|Applying migration '20230425163840_Poster'.
2023-05-04 02:07:18.0371|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (11ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
ALTER TABLE [TVShows] ADD [Poster] nvarchar(max) NULL;
2023-05-04 02:07:18.0484|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (9ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
UPDATE [TVShows] SET [Poster] = NULL
WHERE [Id] = 1;
SELECT @@ROWCOUNT;
2023-05-04 02:07:18.0484|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (4ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
UPDATE [TVShows] SET [Poster] = NULL
WHERE [Id] = 2;
SELECT @@ROWCOUNT;
2023-05-04 02:07:18.0612|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (4ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
UPDATE [TVShows] SET [Poster] = NULL
WHERE [Id] = 3;
SELECT @@ROWCOUNT;
2023-05-04 02:07:18.0612|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (3ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
UPDATE [TVShows] SET [Poster] = NULL
WHERE [Id] = 4;
SELECT @@ROWCOUNT;
2023-05-04 02:07:18.0612|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (3ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
INSERT INTO [__EFMigrationsHistory] ([MigrationId], [ProductVersion])
VALUES (N'20230425163840_Poster', N'7.0.4');
2023-05-04 02:07:18.0798|INFO|Microsoft.EntityFrameworkCore.Migrations|Applying migration '20230426194744_Poster - PUT'.
2023-05-04 02:07:18.0905|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (3ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
INSERT INTO [__EFMigrationsHistory] ([MigrationId], [ProductVersion])
VALUES (N'20230426194744_Poster - PUT', N'7.0.4');
2023-05-04 02:07:18.0905|INFO|Microsoft.EntityFrameworkCore.Migrations|Applying migration '20230426202154_Poster - NotMapped'.
2023-05-04 02:07:18.1077|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (2ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
INSERT INTO [__EFMigrationsHistory] ([MigrationId], [ProductVersion])
VALUES (N'20230426202154_Poster - NotMapped', N'7.0.4');
2023-05-04 02:07:18.1077|INFO|Microsoft.EntityFrameworkCore.Migrations|Applying migration '20230426204947_New properties'.
2023-05-04 02:07:18.1301|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (4ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
ALTER TABLE [TVShows] ADD [Banner] nvarchar(max) NULL;
2023-05-04 02:07:18.1403|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (8ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
ALTER TABLE [TVShows] ADD [Likes] int NOT NULL DEFAULT 0;
2023-05-04 02:07:18.1403|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (4ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
ALTER TABLE [TVShows] ADD [Logo] nvarchar(max) NULL;
2023-05-04 02:07:18.1510|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (3ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
ALTER TABLE [TVShows] ADD [NewSeason] nvarchar(max) NULL;
2023-05-04 02:07:18.1510|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (6ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
ALTER TABLE [TVShows] ADD [Streaming] nvarchar(max) NOT NULL DEFAULT N'';
2023-05-04 02:07:18.1510|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (4ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
UPDATE [TVShows] SET [Banner] = NULL, [Likes] = 1024, [Logo] = NULL, [NewSeason] = NULL, [Streaming] = N'Netflix'
WHERE [Id] = 1;
SELECT @@ROWCOUNT;
2023-05-04 02:07:18.1735|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (5ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
UPDATE [TVShows] SET [Banner] = NULL, [Likes] = 2200, [Logo] = NULL, [NewSeason] = N'11/12/2023', [Streaming] = N'HBO'
WHERE [Id] = 2;
SELECT @@ROWCOUNT;
2023-05-04 02:07:18.1735|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (4ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
UPDATE [TVShows] SET [Banner] = NULL, [Likes] = 870, [Logo] = NULL, [NewSeason] = NULL, [Streaming] = N'Disney+'
WHERE [Id] = 3;
SELECT @@ROWCOUNT;
2023-05-04 02:07:18.1848|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (3ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
UPDATE [TVShows] SET [Banner] = NULL, [Likes] = 2560, [Logo] = NULL, [NewSeason] = N'12/10/2023', [Streaming] = N'Amazon Prime'
WHERE [Id] = 4;
SELECT @@ROWCOUNT;
2023-05-04 02:07:18.1848|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (4ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
INSERT INTO [__EFMigrationsHistory] ([MigrationId], [ProductVersion])
VALUES (N'20230426204947_New properties', N'7.0.4');
2023-05-04 02:07:18.1980|INFO|Microsoft.EntityFrameworkCore.Migrations|Applying migration '20230503212914_TVShowSeasons DB'.
2023-05-04 02:07:18.2499|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (8ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
CREATE TABLE [TVShowSeasons] (
    [Id] int NOT NULL IDENTITY,
    [TVShowId] int NOT NULL,
    [Name] nvarchar(max) NOT NULL,
    [NumberOfEpisodes] int NOT NULL,
    [DurationEpisode] int NOT NULL,
    CONSTRAINT [PK_TVShowSeasons] PRIMARY KEY ([Id]),
    CONSTRAINT [FK_TVShowSeasons_TVShows_TVShowId] FOREIGN KEY ([TVShowId]) REFERENCES [TVShows] ([Id]) ON DELETE CASCADE
);
2023-05-04 02:07:18.2753|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (23ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
IF EXISTS (SELECT * FROM [sys].[identity_columns] WHERE [name] IN (N'Id', N'DurationEpisode', N'Name', N'NumberOfEpisodes', N'TVShowId') AND [object_id] = OBJECT_ID(N'[TVShowSeasons]'))
    SET IDENTITY_INSERT [TVShowSeasons] ON;
INSERT INTO [TVShowSeasons] ([Id], [DurationEpisode], [Name], [NumberOfEpisodes], [TVShowId])
VALUES (1, 42, N'Season 1', 10, 1);
IF EXISTS (SELECT * FROM [sys].[identity_columns] WHERE [name] IN (N'Id', N'DurationEpisode', N'Name', N'NumberOfEpisodes', N'TVShowId') AND [object_id] = OBJECT_ID(N'[TVShowSeasons]'))
    SET IDENTITY_INSERT [TVShowSeasons] OFF;
2023-05-04 02:07:18.3091|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (31ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
CREATE INDEX [IX_TVShowSeasons_TVShowId] ON [TVShowSeasons] ([TVShowId]);
2023-05-04 02:07:18.3091|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (3ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
INSERT INTO [__EFMigrationsHistory] ([MigrationId], [ProductVersion])
VALUES (N'20230503212914_TVShowSeasons DB', N'7.0.4');
2023-05-04 02:07:18.3091|INFO|Microsoft.EntityFrameworkCore.Migrations|Applying migration '20230503214542_TVShowSeasons DB Add data'.
2023-05-04 02:07:18.3519|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (19ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
IF EXISTS (SELECT * FROM [sys].[identity_columns] WHERE [name] IN (N'Id', N'DurationEpisode', N'Name', N'NumberOfEpisodes', N'TVShowId') AND [object_id] = OBJECT_ID(N'[TVShowSeasons]'))
    SET IDENTITY_INSERT [TVShowSeasons] ON;
INSERT INTO [TVShowSeasons] ([Id], [DurationEpisode], [Name], [NumberOfEpisodes], [TVShowId])
VALUES (2, 45, N'Season 2', 12, 1);
IF EXISTS (SELECT * FROM [sys].[identity_columns] WHERE [name] IN (N'Id', N'DurationEpisode', N'Name', N'NumberOfEpisodes', N'TVShowId') AND [object_id] = OBJECT_ID(N'[TVShowSeasons]'))
    SET IDENTITY_INSERT [TVShowSeasons] OFF;
2023-05-04 02:07:18.3577|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (3ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
INSERT INTO [__EFMigrationsHistory] ([MigrationId], [ProductVersion])
VALUES (N'20230503214542_TVShowSeasons DB Add data', N'7.0.4');
2023-05-04 02:07:18.8611|INFO|Microsoft.AspNetCore.DataProtection.KeyManagement.XmlKeyManager|User profile is available. Using 'C:\Users\Andreea\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2023-05-04 02:07:20.5157|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7053/ - -
2023-05-04 02:07:20.6793|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7053/ - - - 404 0 - 169.3088ms
2023-05-04 02:08:04.8087|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/1.1 GET https://localhost:7053/api/seasons multipart/form-data;+boundary=--------------------------157989124315930968463108 500996
2023-05-04 02:08:04.8087|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executing endpoint 'Nite.API.Controllers.SeasonsController.GetSeasons (Nite.API)'
2023-05-04 02:08:04.8476|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Route matched with {action = "GetSeasons", controller = "Seasons"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetSeasons() on controller Nite.API.Controllers.SeasonsController (Nite.API).
2023-05-04 02:08:04.8615|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Executed action Nite.API.Controllers.SeasonsController.GetSeasons (Nite.API) in 7.6131ms
2023-05-04 02:08:04.8615|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executed endpoint 'Nite.API.Controllers.SeasonsController.GetSeasons (Nite.API)'
2023-05-04 02:08:04.9447|ERROR|Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddleware|An unhandled exception has occurred while executing the request.|System.InvalidOperationException: Unable to resolve service for type 'Nite.API.Services.ISeasonsServiceModel' while attempting to activate 'Nite.API.Controllers.SeasonsController'.
   at Microsoft.Extensions.DependencyInjection.ActivatorUtilities.GetService(IServiceProvider sp, Type type, Type requiredBy, Boolean isDefaultParameterRequired)
   at lambda_method58(Closure , IServiceProvider , Object[] )
   at Microsoft.AspNetCore.Mvc.Controllers.ControllerActivatorProvider.<>c__DisplayClass7_0.<CreateActivator>b__0(ControllerContext controllerContext)
   at Microsoft.AspNetCore.Mvc.Controllers.ControllerFactoryProvider.<>c__DisplayClass6_0.<CreateControllerFactory>g__CreateController|0(ControllerContext controllerContext)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.InvokeInnerFilterAsync()
--- End of stack trace from previous location ---
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeNextResourceFilter>g__Awaited|25_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.Rethrow(ResourceExecutedContextSealed context)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.InvokeFilterPipelineAsync()
--- End of stack trace from previous location ---
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|6_0(Endpoint endpoint, Task requestTask, ILogger logger)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddleware.Invoke(HttpContext context)
2023-05-04 02:08:04.9575|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/1.1 GET https://localhost:7053/api/seasons multipart/form-data;+boundary=--------------------------157989124315930968463108 500996 - 500 - text/plain;+charset=utf-8 148.7985ms
2023-05-04 02:08:04.9711|INFO|Microsoft.AspNetCore.Server.Kestrel|Connection id "0HMQC5CII7NSJ", Request id "0HMQC5CII7NSJ:00000002": the application completed without reading the entire request body.
2023-05-04 02:16:34.6705|INFO|Nite.API.Program|Initializing application...
2023-05-04 02:16:41.0322|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (69ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
2023-05-04 02:16:41.2565|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (169ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
2023-05-04 02:16:41.2659|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (5ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
2023-05-04 02:16:41.4541|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (53ms) [Parameters=[], CommandType='Text', CommandTimeout='60']
IF SERVERPROPERTY('EngineEdition') <> 5
BEGIN
    ALTER DATABASE [NiteDb] SET SINGLE_USER WITH ROLLBACK IMMEDIATE;
END;
2023-05-04 02:16:42.2445|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (784ms) [Parameters=[], CommandType='Text', CommandTimeout='60']
DROP DATABASE [NiteDb];
2023-05-04 02:16:43.5884|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (1,209ms) [Parameters=[], CommandType='Text', CommandTimeout='60']
CREATE DATABASE [NiteDb];
2023-05-04 02:16:44.0694|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (478ms) [Parameters=[], CommandType='Text', CommandTimeout='60']
IF SERVERPROPERTY('EngineEdition') <> 5
BEGIN
    ALTER DATABASE [NiteDb] SET READ_COMMITTED_SNAPSHOT ON;
END;
2023-05-04 02:16:44.1003|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (3ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
2023-05-04 02:16:44.3094|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (21ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
CREATE TABLE [__EFMigrationsHistory] (
    [MigrationId] nvarchar(150) NOT NULL,
    [ProductVersion] nvarchar(32) NOT NULL,
    CONSTRAINT [PK___EFMigrationsHistory] PRIMARY KEY ([MigrationId])
);
2023-05-04 02:16:44.3094|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (3ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
2023-05-04 02:16:44.3280|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (3ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT OBJECT_ID(N'[__EFMigrationsHistory]');
2023-05-04 02:16:44.3457|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (9ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [MigrationId], [ProductVersion]
FROM [__EFMigrationsHistory]
ORDER BY [MigrationId];
2023-05-04 02:16:44.3936|INFO|Microsoft.EntityFrameworkCore.Migrations|Applying migration '20230328164011_Initial Migration'.
2023-05-04 02:16:44.5232|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (10ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
CREATE TABLE [TVShows] (
    [Id] int NOT NULL IDENTITY,
    [Name] nvarchar(max) NOT NULL,
    [Year] int NOT NULL,
    [Audience] nvarchar(max) NOT NULL,
    [Seasons] int NOT NULL,
    [Genre] nvarchar(max) NOT NULL,
    [Status] nvarchar(max) NOT NULL,
    [Description] nvarchar(max) NOT NULL,
    CONSTRAINT [PK_TVShows] PRIMARY KEY ([Id])
);
2023-05-04 02:16:44.5306|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (4ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
CREATE TABLE [Users] (
    [Id] int NOT NULL IDENTITY,
    [Username] nvarchar(max) NOT NULL,
    [Email] nvarchar(max) NOT NULL,
    [Password] nvarchar(max) NOT NULL,
    [IsAdmin] bit NOT NULL,
    CONSTRAINT [PK_Users] PRIMARY KEY ([Id])
);
2023-05-04 02:16:44.6325|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (100ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
IF EXISTS (SELECT * FROM [sys].[identity_columns] WHERE [name] IN (N'Id', N'Audience', N'Description', N'Genre', N'Name', N'Seasons', N'Status', N'Year') AND [object_id] = OBJECT_ID(N'[TVShows]'))
    SET IDENTITY_INSERT [TVShows] ON;
INSERT INTO [TVShows] ([Id], [Audience], [Description], [Genre], [Name], [Seasons], [Status], [Year])
VALUES (1, N'18+', N'Nine noble families fight for control over the lands of Westeros, while an ancient enemy returns after being dormant for millennia.', N'Drama', N'Game of Thrones', 8, N'Ended', 2011),
(2, N'18+', N'Each season has its own self-contained storyline and characters and it has been posed that each season will introduce a new location as well as new characters and storylines.', N'Horror', N'American Horror Story', 10, N'On going', 2011),
(3, N'18+', N'Dexter is a serial killer with a "code" which directs his compulsions to kill only the guilty. As a blood spatter analyst for the Miami police, he has access to crime scenes, picking up clues and checking DNA to confirm a target''s guilt before he kills them.', N'Mystery', N'Dexter', 8, N'Ended', 2006),
(4, N'16+', N'The series follows a dangerously charming, intensely obsessive young man who goes to extreme measures to insert himself into the lives of those he is transfixed by.', N'Psychological thriller', N'You', 4, N'On going', 2018);
IF EXISTS (SELECT * FROM [sys].[identity_columns] WHERE [name] IN (N'Id', N'Audience', N'Description', N'Genre', N'Name', N'Seasons', N'Status', N'Year') AND [object_id] = OBJECT_ID(N'[TVShows]'))
    SET IDENTITY_INSERT [TVShows] OFF;
2023-05-04 02:16:44.6524|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (17ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
IF EXISTS (SELECT * FROM [sys].[identity_columns] WHERE [name] IN (N'Id', N'Email', N'IsAdmin', N'Password', N'Username') AND [object_id] = OBJECT_ID(N'[Users]'))
    SET IDENTITY_INSERT [Users] ON;
INSERT INTO [Users] ([Id], [Email], [IsAdmin], [Password], [Username])
VALUES (1, N'deeagabor@gmail.com', CAST(1 AS bit), N'ef797c8118f02dfb649607dd5d3f8c7623048c9c063d532cc95c5ed7a898a64f', N'deeagabor'),
(2, N'wolflorena@gmail.com', CAST(1 AS bit), N'ef797c8118f02dfb649607dd5d3f8c7623048c9c063d532cc95c5ed7a898a64f', N'wolflorena'),
(3, N'testunu@gmail.com', CAST(0 AS bit), N'ef797c8118f02dfb649607dd5d3f8c7623048c9c063d532cc95c5ed7a898a64f', N'test1'),
(4, N'testdoi@gmail.com', CAST(0 AS bit), N'ef797c8118f02dfb649607dd5d3f8c7623048c9c063d532cc95c5ed7a898a64f', N'test2');
IF EXISTS (SELECT * FROM [sys].[identity_columns] WHERE [name] IN (N'Id', N'Email', N'IsAdmin', N'Password', N'Username') AND [object_id] = OBJECT_ID(N'[Users]'))
    SET IDENTITY_INSERT [Users] OFF;
2023-05-04 02:16:44.6524|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (5ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
INSERT INTO [__EFMigrationsHistory] ([MigrationId], [ProductVersion])
VALUES (N'20230328164011_Initial Migration', N'7.0.4');
2023-05-04 02:16:44.6887|INFO|Microsoft.EntityFrameworkCore.Migrations|Applying migration '20230425163840_Poster'.
2023-05-04 02:16:44.7312|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (10ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
ALTER TABLE [TVShows] ADD [Poster] nvarchar(max) NULL;
2023-05-04 02:16:44.7312|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (7ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
UPDATE [TVShows] SET [Poster] = NULL
WHERE [Id] = 1;
SELECT @@ROWCOUNT;
2023-05-04 02:16:44.7457|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (3ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
UPDATE [TVShows] SET [Poster] = NULL
WHERE [Id] = 2;
SELECT @@ROWCOUNT;
2023-05-04 02:16:44.7457|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (2ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
UPDATE [TVShows] SET [Poster] = NULL
WHERE [Id] = 3;
SELECT @@ROWCOUNT;
2023-05-04 02:16:44.7457|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (3ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
UPDATE [TVShows] SET [Poster] = NULL
WHERE [Id] = 4;
SELECT @@ROWCOUNT;
2023-05-04 02:16:44.7457|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (3ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
INSERT INTO [__EFMigrationsHistory] ([MigrationId], [ProductVersion])
VALUES (N'20230425163840_Poster', N'7.0.4');
2023-05-04 02:16:44.7671|INFO|Microsoft.EntityFrameworkCore.Migrations|Applying migration '20230426194744_Poster - PUT'.
2023-05-04 02:16:44.7795|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (4ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
INSERT INTO [__EFMigrationsHistory] ([MigrationId], [ProductVersion])
VALUES (N'20230426194744_Poster - PUT', N'7.0.4');
2023-05-04 02:16:44.7795|INFO|Microsoft.EntityFrameworkCore.Migrations|Applying migration '20230426202154_Poster - NotMapped'.
2023-05-04 02:16:44.7969|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (3ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
INSERT INTO [__EFMigrationsHistory] ([MigrationId], [ProductVersion])
VALUES (N'20230426202154_Poster - NotMapped', N'7.0.4');
2023-05-04 02:16:44.7969|INFO|Microsoft.EntityFrameworkCore.Migrations|Applying migration '20230426204947_New properties'.
2023-05-04 02:16:44.8191|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (4ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
ALTER TABLE [TVShows] ADD [Banner] nvarchar(max) NULL;
2023-05-04 02:16:44.8293|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (8ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
ALTER TABLE [TVShows] ADD [Likes] int NOT NULL DEFAULT 0;
2023-05-04 02:16:44.8293|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (4ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
ALTER TABLE [TVShows] ADD [Logo] nvarchar(max) NULL;
2023-05-04 02:16:44.8408|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (4ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
ALTER TABLE [TVShows] ADD [NewSeason] nvarchar(max) NULL;
2023-05-04 02:16:44.8408|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (7ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
ALTER TABLE [TVShows] ADD [Streaming] nvarchar(max) NOT NULL DEFAULT N'';
2023-05-04 02:16:44.8562|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (4ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
UPDATE [TVShows] SET [Banner] = NULL, [Likes] = 1024, [Logo] = NULL, [NewSeason] = NULL, [Streaming] = N'Netflix'
WHERE [Id] = 1;
SELECT @@ROWCOUNT;
2023-05-04 02:16:44.8562|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (5ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
UPDATE [TVShows] SET [Banner] = NULL, [Likes] = 2200, [Logo] = NULL, [NewSeason] = N'11/12/2023', [Streaming] = N'HBO'
WHERE [Id] = 2;
SELECT @@ROWCOUNT;
2023-05-04 02:16:44.8562|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (3ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
UPDATE [TVShows] SET [Banner] = NULL, [Likes] = 870, [Logo] = NULL, [NewSeason] = NULL, [Streaming] = N'Disney+'
WHERE [Id] = 3;
SELECT @@ROWCOUNT;
2023-05-04 02:16:44.8728|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (3ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
UPDATE [TVShows] SET [Banner] = NULL, [Likes] = 2560, [Logo] = NULL, [NewSeason] = N'12/10/2023', [Streaming] = N'Amazon Prime'
WHERE [Id] = 4;
SELECT @@ROWCOUNT;
2023-05-04 02:16:44.8728|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (3ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
INSERT INTO [__EFMigrationsHistory] ([MigrationId], [ProductVersion])
VALUES (N'20230426204947_New properties', N'7.0.4');
2023-05-04 02:16:44.8728|INFO|Microsoft.EntityFrameworkCore.Migrations|Applying migration '20230503212914_TVShowSeasons DB'.
2023-05-04 02:16:44.9357|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (6ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
CREATE TABLE [TVShowSeasons] (
    [Id] int NOT NULL IDENTITY,
    [TVShowId] int NOT NULL,
    [Name] nvarchar(max) NOT NULL,
    [NumberOfEpisodes] int NOT NULL,
    [DurationEpisode] int NOT NULL,
    CONSTRAINT [PK_TVShowSeasons] PRIMARY KEY ([Id]),
    CONSTRAINT [FK_TVShowSeasons_TVShows_TVShowId] FOREIGN KEY ([TVShowId]) REFERENCES [TVShows] ([Id]) ON DELETE CASCADE
);
2023-05-04 02:16:44.9553|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (17ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
IF EXISTS (SELECT * FROM [sys].[identity_columns] WHERE [name] IN (N'Id', N'DurationEpisode', N'Name', N'NumberOfEpisodes', N'TVShowId') AND [object_id] = OBJECT_ID(N'[TVShowSeasons]'))
    SET IDENTITY_INSERT [TVShowSeasons] ON;
INSERT INTO [TVShowSeasons] ([Id], [DurationEpisode], [Name], [NumberOfEpisodes], [TVShowId])
VALUES (1, 42, N'Season 1', 10, 1);
IF EXISTS (SELECT * FROM [sys].[identity_columns] WHERE [name] IN (N'Id', N'DurationEpisode', N'Name', N'NumberOfEpisodes', N'TVShowId') AND [object_id] = OBJECT_ID(N'[TVShowSeasons]'))
    SET IDENTITY_INSERT [TVShowSeasons] OFF;
2023-05-04 02:16:44.9909|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (33ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
CREATE INDEX [IX_TVShowSeasons_TVShowId] ON [TVShowSeasons] ([TVShowId]);
2023-05-04 02:16:44.9962|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (3ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
INSERT INTO [__EFMigrationsHistory] ([MigrationId], [ProductVersion])
VALUES (N'20230503212914_TVShowSeasons DB', N'7.0.4');
2023-05-04 02:16:44.9962|INFO|Microsoft.EntityFrameworkCore.Migrations|Applying migration '20230503214542_TVShowSeasons DB Add data'.
2023-05-04 02:16:45.0357|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (19ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
IF EXISTS (SELECT * FROM [sys].[identity_columns] WHERE [name] IN (N'Id', N'DurationEpisode', N'Name', N'NumberOfEpisodes', N'TVShowId') AND [object_id] = OBJECT_ID(N'[TVShowSeasons]'))
    SET IDENTITY_INSERT [TVShowSeasons] ON;
INSERT INTO [TVShowSeasons] ([Id], [DurationEpisode], [Name], [NumberOfEpisodes], [TVShowId])
VALUES (2, 45, N'Season 2', 12, 1);
IF EXISTS (SELECT * FROM [sys].[identity_columns] WHERE [name] IN (N'Id', N'DurationEpisode', N'Name', N'NumberOfEpisodes', N'TVShowId') AND [object_id] = OBJECT_ID(N'[TVShowSeasons]'))
    SET IDENTITY_INSERT [TVShowSeasons] OFF;
2023-05-04 02:16:45.0357|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (3ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
INSERT INTO [__EFMigrationsHistory] ([MigrationId], [ProductVersion])
VALUES (N'20230503214542_TVShowSeasons DB Add data', N'7.0.4');
2023-05-04 02:16:45.3476|INFO|Microsoft.AspNetCore.DataProtection.KeyManagement.XmlKeyManager|User profile is available. Using 'C:\Users\Andreea\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2023-05-04 02:16:46.5133|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7053/ - -
2023-05-04 02:16:46.6886|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7053/ - - - 404 0 - 179.0927ms
2023-05-04 02:17:28.1811|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/1.1 GET https://localhost:7053/api/seasons multipart/form-data;+boundary=--------------------------556186846012661337466472 500996
2023-05-04 02:17:28.1860|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executing endpoint 'Nite.API.Controllers.SeasonsController.GetSeasons (Nite.API)'
2023-05-04 02:17:28.2192|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Route matched with {action = "GetSeasons", controller = "Seasons"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetSeasons() on controller Nite.API.Controllers.SeasonsController (Nite.API).
2023-05-04 02:25:22.9810|INFO|Nite.API.Program|Initializing application...
2023-05-04 02:25:29.1699|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (66ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
2023-05-04 02:25:29.4169|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (197ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
2023-05-04 02:25:29.4169|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (5ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
2023-05-04 02:25:29.6053|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (42ms) [Parameters=[], CommandType='Text', CommandTimeout='60']
IF SERVERPROPERTY('EngineEdition') <> 5
BEGIN
    ALTER DATABASE [NiteDb] SET SINGLE_USER WITH ROLLBACK IMMEDIATE;
END;
2023-05-04 02:25:30.1038|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (497ms) [Parameters=[], CommandType='Text', CommandTimeout='60']
DROP DATABASE [NiteDb];
2023-05-04 02:25:31.2994|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (1,063ms) [Parameters=[], CommandType='Text', CommandTimeout='60']
CREATE DATABASE [NiteDb];
2023-05-04 02:25:31.7590|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (457ms) [Parameters=[], CommandType='Text', CommandTimeout='60']
IF SERVERPROPERTY('EngineEdition') <> 5
BEGIN
    ALTER DATABASE [NiteDb] SET READ_COMMITTED_SNAPSHOT ON;
END;
2023-05-04 02:25:31.7884|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (2ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
2023-05-04 02:25:31.9751|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (18ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
CREATE TABLE [__EFMigrationsHistory] (
    [MigrationId] nvarchar(150) NOT NULL,
    [ProductVersion] nvarchar(32) NOT NULL,
    CONSTRAINT [PK___EFMigrationsHistory] PRIMARY KEY ([MigrationId])
);
2023-05-04 02:25:31.9815|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (3ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
2023-05-04 02:25:31.9815|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (3ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT OBJECT_ID(N'[__EFMigrationsHistory]');
2023-05-04 02:25:32.0137|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (9ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [MigrationId], [ProductVersion]
FROM [__EFMigrationsHistory]
ORDER BY [MigrationId];
2023-05-04 02:25:32.0696|INFO|Microsoft.EntityFrameworkCore.Migrations|Applying migration '20230328164011_Initial Migration'.
2023-05-04 02:25:32.2054|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (7ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
CREATE TABLE [TVShows] (
    [Id] int NOT NULL IDENTITY,
    [Name] nvarchar(max) NOT NULL,
    [Year] int NOT NULL,
    [Audience] nvarchar(max) NOT NULL,
    [Seasons] int NOT NULL,
    [Genre] nvarchar(max) NOT NULL,
    [Status] nvarchar(max) NOT NULL,
    [Description] nvarchar(max) NOT NULL,
    CONSTRAINT [PK_TVShows] PRIMARY KEY ([Id])
);
2023-05-04 02:25:32.2054|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (4ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
CREATE TABLE [Users] (
    [Id] int NOT NULL IDENTITY,
    [Username] nvarchar(max) NOT NULL,
    [Email] nvarchar(max) NOT NULL,
    [Password] nvarchar(max) NOT NULL,
    [IsAdmin] bit NOT NULL,
    CONSTRAINT [PK_Users] PRIMARY KEY ([Id])
);
2023-05-04 02:25:32.3020|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (87ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
IF EXISTS (SELECT * FROM [sys].[identity_columns] WHERE [name] IN (N'Id', N'Audience', N'Description', N'Genre', N'Name', N'Seasons', N'Status', N'Year') AND [object_id] = OBJECT_ID(N'[TVShows]'))
    SET IDENTITY_INSERT [TVShows] ON;
INSERT INTO [TVShows] ([Id], [Audience], [Description], [Genre], [Name], [Seasons], [Status], [Year])
VALUES (1, N'18+', N'Nine noble families fight for control over the lands of Westeros, while an ancient enemy returns after being dormant for millennia.', N'Drama', N'Game of Thrones', 8, N'Ended', 2011),
(2, N'18+', N'Each season has its own self-contained storyline and characters and it has been posed that each season will introduce a new location as well as new characters and storylines.', N'Horror', N'American Horror Story', 10, N'On going', 2011),
(3, N'18+', N'Dexter is a serial killer with a "code" which directs his compulsions to kill only the guilty. As a blood spatter analyst for the Miami police, he has access to crime scenes, picking up clues and checking DNA to confirm a target''s guilt before he kills them.', N'Mystery', N'Dexter', 8, N'Ended', 2006),
(4, N'16+', N'The series follows a dangerously charming, intensely obsessive young man who goes to extreme measures to insert himself into the lives of those he is transfixed by.', N'Psychological thriller', N'You', 4, N'On going', 2018);
IF EXISTS (SELECT * FROM [sys].[identity_columns] WHERE [name] IN (N'Id', N'Audience', N'Description', N'Genre', N'Name', N'Seasons', N'Status', N'Year') AND [object_id] = OBJECT_ID(N'[TVShows]'))
    SET IDENTITY_INSERT [TVShows] OFF;
2023-05-04 02:25:32.3220|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (17ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
IF EXISTS (SELECT * FROM [sys].[identity_columns] WHERE [name] IN (N'Id', N'Email', N'IsAdmin', N'Password', N'Username') AND [object_id] = OBJECT_ID(N'[Users]'))
    SET IDENTITY_INSERT [Users] ON;
INSERT INTO [Users] ([Id], [Email], [IsAdmin], [Password], [Username])
VALUES (1, N'deeagabor@gmail.com', CAST(1 AS bit), N'ef797c8118f02dfb649607dd5d3f8c7623048c9c063d532cc95c5ed7a898a64f', N'deeagabor'),
(2, N'wolflorena@gmail.com', CAST(1 AS bit), N'ef797c8118f02dfb649607dd5d3f8c7623048c9c063d532cc95c5ed7a898a64f', N'wolflorena'),
(3, N'testunu@gmail.com', CAST(0 AS bit), N'ef797c8118f02dfb649607dd5d3f8c7623048c9c063d532cc95c5ed7a898a64f', N'test1'),
(4, N'testdoi@gmail.com', CAST(0 AS bit), N'ef797c8118f02dfb649607dd5d3f8c7623048c9c063d532cc95c5ed7a898a64f', N'test2');
IF EXISTS (SELECT * FROM [sys].[identity_columns] WHERE [name] IN (N'Id', N'Email', N'IsAdmin', N'Password', N'Username') AND [object_id] = OBJECT_ID(N'[Users]'))
    SET IDENTITY_INSERT [Users] OFF;
2023-05-04 02:25:32.3280|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (4ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
INSERT INTO [__EFMigrationsHistory] ([MigrationId], [ProductVersion])
VALUES (N'20230328164011_Initial Migration', N'7.0.4');
2023-05-04 02:25:32.3566|INFO|Microsoft.EntityFrameworkCore.Migrations|Applying migration '20230425163840_Poster'.
2023-05-04 02:25:32.3940|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (6ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
ALTER TABLE [TVShows] ADD [Poster] nvarchar(max) NULL;
2023-05-04 02:25:32.4029|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (6ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
UPDATE [TVShows] SET [Poster] = NULL
WHERE [Id] = 1;
SELECT @@ROWCOUNT;
2023-05-04 02:25:32.4029|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (2ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
UPDATE [TVShows] SET [Poster] = NULL
WHERE [Id] = 2;
SELECT @@ROWCOUNT;
2023-05-04 02:25:32.4029|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (2ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
UPDATE [TVShows] SET [Poster] = NULL
WHERE [Id] = 3;
SELECT @@ROWCOUNT;
2023-05-04 02:25:32.4029|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (3ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
UPDATE [TVShows] SET [Poster] = NULL
WHERE [Id] = 4;
SELECT @@ROWCOUNT;
2023-05-04 02:25:32.4208|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (3ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
INSERT INTO [__EFMigrationsHistory] ([MigrationId], [ProductVersion])
VALUES (N'20230425163840_Poster', N'7.0.4');
2023-05-04 02:25:32.4208|INFO|Microsoft.EntityFrameworkCore.Migrations|Applying migration '20230426194744_Poster - PUT'.
2023-05-04 02:25:32.4380|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (2ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
INSERT INTO [__EFMigrationsHistory] ([MigrationId], [ProductVersion])
VALUES (N'20230426194744_Poster - PUT', N'7.0.4');
2023-05-04 02:25:32.4380|INFO|Microsoft.EntityFrameworkCore.Migrations|Applying migration '20230426202154_Poster - NotMapped'.
2023-05-04 02:25:32.4550|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (3ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
INSERT INTO [__EFMigrationsHistory] ([MigrationId], [ProductVersion])
VALUES (N'20230426202154_Poster - NotMapped', N'7.0.4');
2023-05-04 02:25:32.4550|INFO|Microsoft.EntityFrameworkCore.Migrations|Applying migration '20230426204947_New properties'.
2023-05-04 02:25:32.4818|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (5ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
ALTER TABLE [TVShows] ADD [Banner] nvarchar(max) NULL;
2023-05-04 02:25:32.4818|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (7ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
ALTER TABLE [TVShows] ADD [Likes] int NOT NULL DEFAULT 0;
2023-05-04 02:25:32.4985|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (5ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
ALTER TABLE [TVShows] ADD [Logo] nvarchar(max) NULL;
2023-05-04 02:25:32.4985|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (4ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
ALTER TABLE [TVShows] ADD [NewSeason] nvarchar(max) NULL;
2023-05-04 02:25:32.5119|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (5ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
ALTER TABLE [TVShows] ADD [Streaming] nvarchar(max) NOT NULL DEFAULT N'';
2023-05-04 02:25:32.5119|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (4ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
UPDATE [TVShows] SET [Banner] = NULL, [Likes] = 1024, [Logo] = NULL, [NewSeason] = NULL, [Streaming] = N'Netflix'
WHERE [Id] = 1;
SELECT @@ROWCOUNT;
2023-05-04 02:25:32.5119|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (5ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
UPDATE [TVShows] SET [Banner] = NULL, [Likes] = 2200, [Logo] = NULL, [NewSeason] = N'11/12/2023', [Streaming] = N'HBO'
WHERE [Id] = 2;
SELECT @@ROWCOUNT;
2023-05-04 02:25:32.5297|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (3ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
UPDATE [TVShows] SET [Banner] = NULL, [Likes] = 870, [Logo] = NULL, [NewSeason] = NULL, [Streaming] = N'Disney+'
WHERE [Id] = 3;
SELECT @@ROWCOUNT;
2023-05-04 02:25:32.5297|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (3ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
UPDATE [TVShows] SET [Banner] = NULL, [Likes] = 2560, [Logo] = NULL, [NewSeason] = N'12/10/2023', [Streaming] = N'Amazon Prime'
WHERE [Id] = 4;
SELECT @@ROWCOUNT;
2023-05-04 02:25:32.5297|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (3ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
INSERT INTO [__EFMigrationsHistory] ([MigrationId], [ProductVersion])
VALUES (N'20230426204947_New properties', N'7.0.4');
2023-05-04 02:25:32.5468|INFO|Microsoft.EntityFrameworkCore.Migrations|Applying migration '20230503212914_TVShowSeasons DB'.
2023-05-04 02:25:32.5966|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (6ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
CREATE TABLE [TVShowSeasons] (
    [Id] int NOT NULL IDENTITY,
    [TVShowId] int NOT NULL,
    [Name] nvarchar(max) NOT NULL,
    [NumberOfEpisodes] int NOT NULL,
    [DurationEpisode] int NOT NULL,
    CONSTRAINT [PK_TVShowSeasons] PRIMARY KEY ([Id]),
    CONSTRAINT [FK_TVShowSeasons_TVShows_TVShowId] FOREIGN KEY ([TVShowId]) REFERENCES [TVShows] ([Id]) ON DELETE CASCADE
);
2023-05-04 02:25:32.6171|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (18ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
IF EXISTS (SELECT * FROM [sys].[identity_columns] WHERE [name] IN (N'Id', N'DurationEpisode', N'Name', N'NumberOfEpisodes', N'TVShowId') AND [object_id] = OBJECT_ID(N'[TVShowSeasons]'))
    SET IDENTITY_INSERT [TVShowSeasons] ON;
INSERT INTO [TVShowSeasons] ([Id], [DurationEpisode], [Name], [NumberOfEpisodes], [TVShowId])
VALUES (1, 42, N'Season 1', 10, 1);
IF EXISTS (SELECT * FROM [sys].[identity_columns] WHERE [name] IN (N'Id', N'DurationEpisode', N'Name', N'NumberOfEpisodes', N'TVShowId') AND [object_id] = OBJECT_ID(N'[TVShowSeasons]'))
    SET IDENTITY_INSERT [TVShowSeasons] OFF;
2023-05-04 02:25:32.6366|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (17ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
CREATE INDEX [IX_TVShowSeasons_TVShowId] ON [TVShowSeasons] ([TVShowId]);
2023-05-04 02:25:32.6366|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (3ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
INSERT INTO [__EFMigrationsHistory] ([MigrationId], [ProductVersion])
VALUES (N'20230503212914_TVShowSeasons DB', N'7.0.4');
2023-05-04 02:25:32.6366|INFO|Microsoft.EntityFrameworkCore.Migrations|Applying migration '20230503214542_TVShowSeasons DB Add data'.
2023-05-04 02:25:32.6767|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (16ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
IF EXISTS (SELECT * FROM [sys].[identity_columns] WHERE [name] IN (N'Id', N'DurationEpisode', N'Name', N'NumberOfEpisodes', N'TVShowId') AND [object_id] = OBJECT_ID(N'[TVShowSeasons]'))
    SET IDENTITY_INSERT [TVShowSeasons] ON;
INSERT INTO [TVShowSeasons] ([Id], [DurationEpisode], [Name], [NumberOfEpisodes], [TVShowId])
VALUES (2, 45, N'Season 2', 12, 1);
IF EXISTS (SELECT * FROM [sys].[identity_columns] WHERE [name] IN (N'Id', N'DurationEpisode', N'Name', N'NumberOfEpisodes', N'TVShowId') AND [object_id] = OBJECT_ID(N'[TVShowSeasons]'))
    SET IDENTITY_INSERT [TVShowSeasons] OFF;
2023-05-04 02:25:32.6825|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (3ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
INSERT INTO [__EFMigrationsHistory] ([MigrationId], [ProductVersion])
VALUES (N'20230503214542_TVShowSeasons DB Add data', N'7.0.4');
2023-05-04 02:25:32.9773|INFO|Microsoft.AspNetCore.DataProtection.KeyManagement.XmlKeyManager|User profile is available. Using 'C:\Users\Andreea\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2023-05-04 02:25:34.2502|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7053/ - -
2023-05-04 02:25:34.4122|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7053/ - - - 404 0 - 167.6316ms
2023-05-04 02:25:49.4995|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/1.1 GET https://localhost:7053/api/seasons multipart/form-data;+boundary=--------------------------658663684268307908615840 500996
2023-05-04 02:25:49.4995|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executing endpoint 'Nite.API.Controllers.SeasonsController.GetSeasons (Nite.API)'
2023-05-04 02:25:49.5377|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Route matched with {action = "GetSeasons", controller = "Seasons"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetSeasons() on controller Nite.API.Controllers.SeasonsController (Nite.API).
2023-05-04 02:26:08.9559|FATAL|Nite.API.Controllers.SeasonsController|Exception while getting all seasons.
2023-05-04 02:26:08.9678|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ObjectResultExecutor|Executing ObjectResult, writing value of type 'System.String'.
2023-05-04 02:26:08.9798|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Executed action Nite.API.Controllers.SeasonsController.GetSeasons (Nite.API) in 19435.4541ms
2023-05-04 02:26:08.9798|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executed endpoint 'Nite.API.Controllers.SeasonsController.GetSeasons (Nite.API)'
2023-05-04 02:26:08.9798|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/1.1 GET https://localhost:7053/api/seasons multipart/form-data;+boundary=--------------------------658663684268307908615840 500996 - 500 - text/plain;+charset=utf-8 19480.6868ms
2023-05-04 02:26:08.9798|INFO|Microsoft.AspNetCore.Server.Kestrel|Connection id "0HMQC5MOLN90P", Request id "0HMQC5MOLN90P:00000002": the application completed without reading the entire request body.
2023-05-04 02:35:23.8657|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/1.1 GET https://localhost:7053/api/seasons multipart/form-data;+boundary=--------------------------623994813459702740447837 500996
2023-05-04 02:35:23.8657|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executing endpoint 'Nite.API.Controllers.SeasonsController.GetSeasons (Nite.API)'
2023-05-04 02:35:23.8699|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Route matched with {action = "GetSeasons", controller = "Seasons"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetSeasons() on controller Nite.API.Controllers.SeasonsController (Nite.API).
2023-05-04 02:38:45.3433|INFO|Nite.API.Program|Initializing application...
2023-05-04 02:38:53.0000|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (111ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
2023-05-04 02:38:53.4781|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (423ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
2023-05-04 02:38:53.4886|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (6ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
2023-05-04 02:38:53.7791|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (110ms) [Parameters=[], CommandType='Text', CommandTimeout='60']
IF SERVERPROPERTY('EngineEdition') <> 5
BEGIN
    ALTER DATABASE [NiteDb] SET SINGLE_USER WITH ROLLBACK IMMEDIATE;
END;
2023-05-04 02:38:54.7038|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (905ms) [Parameters=[], CommandType='Text', CommandTimeout='60']
DROP DATABASE [NiteDb];
2023-05-04 02:38:56.4115|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (1,549ms) [Parameters=[], CommandType='Text', CommandTimeout='60']
CREATE DATABASE [NiteDb];
2023-05-04 02:38:57.0427|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (628ms) [Parameters=[], CommandType='Text', CommandTimeout='60']
IF SERVERPROPERTY('EngineEdition') <> 5
BEGIN
    ALTER DATABASE [NiteDb] SET READ_COMMITTED_SNAPSHOT ON;
END;
2023-05-04 02:38:57.1101|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (10ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
2023-05-04 02:38:57.3793|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (38ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
CREATE TABLE [__EFMigrationsHistory] (
    [MigrationId] nvarchar(150) NOT NULL,
    [ProductVersion] nvarchar(32) NOT NULL,
    CONSTRAINT [PK___EFMigrationsHistory] PRIMARY KEY ([MigrationId])
);
2023-05-04 02:38:57.3876|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (4ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
2023-05-04 02:38:57.4040|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (5ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT OBJECT_ID(N'[__EFMigrationsHistory]');
2023-05-04 02:38:57.4275|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (11ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [MigrationId], [ProductVersion]
FROM [__EFMigrationsHistory]
ORDER BY [MigrationId];
2023-05-04 02:38:57.4921|INFO|Microsoft.EntityFrameworkCore.Migrations|Applying migration '20230328164011_Initial Migration'.
2023-05-04 02:38:57.6674|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (15ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
CREATE TABLE [TVShows] (
    [Id] int NOT NULL IDENTITY,
    [Name] nvarchar(max) NOT NULL,
    [Year] int NOT NULL,
    [Audience] nvarchar(max) NOT NULL,
    [Seasons] int NOT NULL,
    [Genre] nvarchar(max) NOT NULL,
    [Status] nvarchar(max) NOT NULL,
    [Description] nvarchar(max) NOT NULL,
    CONSTRAINT [PK_TVShows] PRIMARY KEY ([Id])
);
2023-05-04 02:38:57.6674|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (8ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
CREATE TABLE [Users] (
    [Id] int NOT NULL IDENTITY,
    [Username] nvarchar(max) NOT NULL,
    [Email] nvarchar(max) NOT NULL,
    [Password] nvarchar(max) NOT NULL,
    [IsAdmin] bit NOT NULL,
    CONSTRAINT [PK_Users] PRIMARY KEY ([Id])
);
2023-05-04 02:38:57.8343|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (152ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
IF EXISTS (SELECT * FROM [sys].[identity_columns] WHERE [name] IN (N'Id', N'Audience', N'Description', N'Genre', N'Name', N'Seasons', N'Status', N'Year') AND [object_id] = OBJECT_ID(N'[TVShows]'))
    SET IDENTITY_INSERT [TVShows] ON;
INSERT INTO [TVShows] ([Id], [Audience], [Description], [Genre], [Name], [Seasons], [Status], [Year])
VALUES (1, N'18+', N'Nine noble families fight for control over the lands of Westeros, while an ancient enemy returns after being dormant for millennia.', N'Drama', N'Game of Thrones', 8, N'Ended', 2011),
(2, N'18+', N'Each season has its own self-contained storyline and characters and it has been posed that each season will introduce a new location as well as new characters and storylines.', N'Horror', N'American Horror Story', 10, N'On going', 2011),
(3, N'18+', N'Dexter is a serial killer with a "code" which directs his compulsions to kill only the guilty. As a blood spatter analyst for the Miami police, he has access to crime scenes, picking up clues and checking DNA to confirm a target''s guilt before he kills them.', N'Mystery', N'Dexter', 8, N'Ended', 2006),
(4, N'16+', N'The series follows a dangerously charming, intensely obsessive young man who goes to extreme measures to insert himself into the lives of those he is transfixed by.', N'Psychological thriller', N'You', 4, N'On going', 2018);
IF EXISTS (SELECT * FROM [sys].[identity_columns] WHERE [name] IN (N'Id', N'Audience', N'Description', N'Genre', N'Name', N'Seasons', N'Status', N'Year') AND [object_id] = OBJECT_ID(N'[TVShows]'))
    SET IDENTITY_INSERT [TVShows] OFF;
2023-05-04 02:38:57.8615|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (25ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
IF EXISTS (SELECT * FROM [sys].[identity_columns] WHERE [name] IN (N'Id', N'Email', N'IsAdmin', N'Password', N'Username') AND [object_id] = OBJECT_ID(N'[Users]'))
    SET IDENTITY_INSERT [Users] ON;
INSERT INTO [Users] ([Id], [Email], [IsAdmin], [Password], [Username])
VALUES (1, N'deeagabor@gmail.com', CAST(1 AS bit), N'ef797c8118f02dfb649607dd5d3f8c7623048c9c063d532cc95c5ed7a898a64f', N'deeagabor'),
(2, N'wolflorena@gmail.com', CAST(1 AS bit), N'ef797c8118f02dfb649607dd5d3f8c7623048c9c063d532cc95c5ed7a898a64f', N'wolflorena'),
(3, N'testunu@gmail.com', CAST(0 AS bit), N'ef797c8118f02dfb649607dd5d3f8c7623048c9c063d532cc95c5ed7a898a64f', N'test1'),
(4, N'testdoi@gmail.com', CAST(0 AS bit), N'ef797c8118f02dfb649607dd5d3f8c7623048c9c063d532cc95c5ed7a898a64f', N'test2');
IF EXISTS (SELECT * FROM [sys].[identity_columns] WHERE [name] IN (N'Id', N'Email', N'IsAdmin', N'Password', N'Username') AND [object_id] = OBJECT_ID(N'[Users]'))
    SET IDENTITY_INSERT [Users] OFF;
2023-05-04 02:38:57.8701|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (6ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
INSERT INTO [__EFMigrationsHistory] ([MigrationId], [ProductVersion])
VALUES (N'20230328164011_Initial Migration', N'7.0.4');
2023-05-04 02:38:57.9084|INFO|Microsoft.EntityFrameworkCore.Migrations|Applying migration '20230425163840_Poster'.
2023-05-04 02:38:57.9656|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (14ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
ALTER TABLE [TVShows] ADD [Poster] nvarchar(max) NULL;
2023-05-04 02:38:57.9815|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (13ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
UPDATE [TVShows] SET [Poster] = NULL
WHERE [Id] = 1;
SELECT @@ROWCOUNT;
2023-05-04 02:38:57.9815|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (5ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
UPDATE [TVShows] SET [Poster] = NULL
WHERE [Id] = 2;
SELECT @@ROWCOUNT;
2023-05-04 02:38:57.9954|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (4ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
UPDATE [TVShows] SET [Poster] = NULL
WHERE [Id] = 3;
SELECT @@ROWCOUNT;
2023-05-04 02:38:57.9954|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (5ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
UPDATE [TVShows] SET [Poster] = NULL
WHERE [Id] = 4;
SELECT @@ROWCOUNT;
2023-05-04 02:38:58.0112|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (6ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
INSERT INTO [__EFMigrationsHistory] ([MigrationId], [ProductVersion])
VALUES (N'20230425163840_Poster', N'7.0.4');
2023-05-04 02:38:58.0112|INFO|Microsoft.EntityFrameworkCore.Migrations|Applying migration '20230426194744_Poster - PUT'.
2023-05-04 02:38:58.0355|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (4ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
INSERT INTO [__EFMigrationsHistory] ([MigrationId], [ProductVersion])
VALUES (N'20230426194744_Poster - PUT', N'7.0.4');
2023-05-04 02:38:58.0461|INFO|Microsoft.EntityFrameworkCore.Migrations|Applying migration '20230426202154_Poster - NotMapped'.
2023-05-04 02:38:58.0606|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (3ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
INSERT INTO [__EFMigrationsHistory] ([MigrationId], [ProductVersion])
VALUES (N'20230426202154_Poster - NotMapped', N'7.0.4');
2023-05-04 02:38:58.0606|INFO|Microsoft.EntityFrameworkCore.Migrations|Applying migration '20230426204947_New properties'.
2023-05-04 02:38:58.0911|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (4ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
ALTER TABLE [TVShows] ADD [Banner] nvarchar(max) NULL;
2023-05-04 02:38:58.1084|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (13ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
ALTER TABLE [TVShows] ADD [Likes] int NOT NULL DEFAULT 0;
2023-05-04 02:38:58.1084|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (6ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
ALTER TABLE [TVShows] ADD [Logo] nvarchar(max) NULL;
2023-05-04 02:38:58.1245|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (5ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
ALTER TABLE [TVShows] ADD [NewSeason] nvarchar(max) NULL;
2023-05-04 02:38:58.1363|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (9ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
ALTER TABLE [TVShows] ADD [Streaming] nvarchar(max) NOT NULL DEFAULT N'';
2023-05-04 02:38:58.1363|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (8ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
UPDATE [TVShows] SET [Banner] = NULL, [Likes] = 1024, [Logo] = NULL, [NewSeason] = NULL, [Streaming] = N'Netflix'
WHERE [Id] = 1;
SELECT @@ROWCOUNT;
2023-05-04 02:38:58.1600|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (10ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
UPDATE [TVShows] SET [Banner] = NULL, [Likes] = 2200, [Logo] = NULL, [NewSeason] = N'11/12/2023', [Streaming] = N'HBO'
WHERE [Id] = 2;
SELECT @@ROWCOUNT;
2023-05-04 02:38:58.1678|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (5ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
UPDATE [TVShows] SET [Banner] = NULL, [Likes] = 870, [Logo] = NULL, [NewSeason] = NULL, [Streaming] = N'Disney+'
WHERE [Id] = 3;
SELECT @@ROWCOUNT;
2023-05-04 02:38:58.1678|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (6ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
UPDATE [TVShows] SET [Banner] = NULL, [Likes] = 2560, [Logo] = NULL, [NewSeason] = N'12/10/2023', [Streaming] = N'Amazon Prime'
WHERE [Id] = 4;
SELECT @@ROWCOUNT;
2023-05-04 02:38:58.1854|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (5ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
INSERT INTO [__EFMigrationsHistory] ([MigrationId], [ProductVersion])
VALUES (N'20230426204947_New properties', N'7.0.4');
2023-05-04 02:38:58.1854|INFO|Microsoft.EntityFrameworkCore.Migrations|Applying migration '20230503212914_TVShowSeasons DB'.
2023-05-04 02:38:58.2605|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (7ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
CREATE TABLE [TVShowSeasons] (
    [Id] int NOT NULL IDENTITY,
    [TVShowId] int NOT NULL,
    [Name] nvarchar(max) NOT NULL,
    [NumberOfEpisodes] int NOT NULL,
    [DurationEpisode] int NOT NULL,
    CONSTRAINT [PK_TVShowSeasons] PRIMARY KEY ([Id]),
    CONSTRAINT [FK_TVShowSeasons_TVShows_TVShowId] FOREIGN KEY ([TVShowId]) REFERENCES [TVShows] ([Id]) ON DELETE CASCADE
);
2023-05-04 02:38:58.2854|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (22ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
IF EXISTS (SELECT * FROM [sys].[identity_columns] WHERE [name] IN (N'Id', N'DurationEpisode', N'Name', N'NumberOfEpisodes', N'TVShowId') AND [object_id] = OBJECT_ID(N'[TVShowSeasons]'))
    SET IDENTITY_INSERT [TVShowSeasons] ON;
INSERT INTO [TVShowSeasons] ([Id], [DurationEpisode], [Name], [NumberOfEpisodes], [TVShowId])
VALUES (1, 42, N'Season 1', 10, 1);
IF EXISTS (SELECT * FROM [sys].[identity_columns] WHERE [name] IN (N'Id', N'DurationEpisode', N'Name', N'NumberOfEpisodes', N'TVShowId') AND [object_id] = OBJECT_ID(N'[TVShowSeasons]'))
    SET IDENTITY_INSERT [TVShowSeasons] OFF;
2023-05-04 02:38:58.3223|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (35ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
CREATE INDEX [IX_TVShowSeasons_TVShowId] ON [TVShowSeasons] ([TVShowId]);
2023-05-04 02:38:58.3282|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (3ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
INSERT INTO [__EFMigrationsHistory] ([MigrationId], [ProductVersion])
VALUES (N'20230503212914_TVShowSeasons DB', N'7.0.4');
2023-05-04 02:38:58.3282|INFO|Microsoft.EntityFrameworkCore.Migrations|Applying migration '20230503214542_TVShowSeasons DB Add data'.
2023-05-04 02:38:58.3791|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (28ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
IF EXISTS (SELECT * FROM [sys].[identity_columns] WHERE [name] IN (N'Id', N'DurationEpisode', N'Name', N'NumberOfEpisodes', N'TVShowId') AND [object_id] = OBJECT_ID(N'[TVShowSeasons]'))
    SET IDENTITY_INSERT [TVShowSeasons] ON;
INSERT INTO [TVShowSeasons] ([Id], [DurationEpisode], [Name], [NumberOfEpisodes], [TVShowId])
VALUES (2, 45, N'Season 2', 12, 1);
IF EXISTS (SELECT * FROM [sys].[identity_columns] WHERE [name] IN (N'Id', N'DurationEpisode', N'Name', N'NumberOfEpisodes', N'TVShowId') AND [object_id] = OBJECT_ID(N'[TVShowSeasons]'))
    SET IDENTITY_INSERT [TVShowSeasons] OFF;
2023-05-04 02:38:58.3866|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (5ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
INSERT INTO [__EFMigrationsHistory] ([MigrationId], [ProductVersion])
VALUES (N'20230503214542_TVShowSeasons DB Add data', N'7.0.4');
2023-05-04 02:38:58.8486|INFO|Microsoft.AspNetCore.DataProtection.KeyManagement.XmlKeyManager|User profile is available. Using 'C:\Users\Andreea\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2023-05-04 02:39:00.8216|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7053/ - -
2023-05-04 02:39:02.3014|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7053/ - - - 404 0 - 1489.3349ms
2023-05-04 02:39:06.9447|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/1.1 GET https://localhost:7053/api/seasons multipart/form-data;+boundary=--------------------------912465443950561867483126 500996
2023-05-04 02:39:06.9534|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executing endpoint 'Nite.API.Controllers.SeasonsController.GetSeasons (Nite.API)'
2023-05-04 02:39:07.0034|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Route matched with {action = "GetSeasons", controller = "Seasons"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetSeasons() on controller Nite.API.Controllers.SeasonsController (Nite.API).
2023-05-04 02:39:07.0358|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (7ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
2023-05-04 02:39:07.0853|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (46ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
2023-05-04 02:39:07.9749|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (10ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [t].[Id], [t].[DurationEpisode], [t].[Name], [t].[NumberOfEpisodes], [t].[TVShowId]
FROM [TVShowSeasons] AS [t]
2023-05-04 02:39:08.1423|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ObjectResultExecutor|Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Nite.API.Data.Models.SeasonDTO, Nite.API, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2023-05-04 02:39:08.4144|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Executed action Nite.API.Controllers.SeasonsController.GetSeasons (Nite.API) in 1400.692ms
2023-05-04 02:39:08.4144|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executed endpoint 'Nite.API.Controllers.SeasonsController.GetSeasons (Nite.API)'
2023-05-04 02:39:08.4390|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/1.1 GET https://localhost:7053/api/seasons multipart/form-data;+boundary=--------------------------912465443950561867483126 500996 - 200 141 application/json;+charset=utf-8 1494.3476ms
2023-05-04 02:39:08.4499|INFO|Microsoft.AspNetCore.Server.Kestrel|Connection id "0HMQC5U8PGQI6", Request id "0HMQC5U8PGQI6:00000002": the application completed without reading the entire request body.
2023-05-04 02:54:42.8589|INFO|Nite.API.Program|Initializing application...
2023-05-04 02:54:54.4709|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (121ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
2023-05-04 02:54:54.6497|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (99ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
2023-05-04 02:54:54.6669|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (8ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
2023-05-04 02:54:55.3984|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (464ms) [Parameters=[], CommandType='Text', CommandTimeout='60']
IF SERVERPROPERTY('EngineEdition') <> 5
BEGIN
    ALTER DATABASE [NiteDb] SET SINGLE_USER WITH ROLLBACK IMMEDIATE;
END;
2023-05-04 02:54:56.6292|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (1,228ms) [Parameters=[], CommandType='Text', CommandTimeout='60']
DROP DATABASE [NiteDb];
2023-05-04 02:54:59.1093|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (2,246ms) [Parameters=[], CommandType='Text', CommandTimeout='60']
CREATE DATABASE [NiteDb];
2023-05-04 02:55:00.9587|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (1,744ms) [Parameters=[], CommandType='Text', CommandTimeout='60']
IF SERVERPROPERTY('EngineEdition') <> 5
BEGIN
    ALTER DATABASE [NiteDb] SET READ_COMMITTED_SNAPSHOT ON;
END;
2023-05-04 02:55:01.1865|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (9ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
2023-05-04 02:55:01.7759|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (50ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
CREATE TABLE [__EFMigrationsHistory] (
    [MigrationId] nvarchar(150) NOT NULL,
    [ProductVersion] nvarchar(32) NOT NULL,
    CONSTRAINT [PK___EFMigrationsHistory] PRIMARY KEY ([MigrationId])
);
2023-05-04 02:55:01.7759|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (6ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
2023-05-04 02:55:01.8165|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (11ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT OBJECT_ID(N'[__EFMigrationsHistory]');
2023-05-04 02:55:01.8527|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (23ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [MigrationId], [ProductVersion]
FROM [__EFMigrationsHistory]
ORDER BY [MigrationId];
2023-05-04 02:55:01.9346|INFO|Microsoft.EntityFrameworkCore.Migrations|Applying migration '20230328164011_Initial Migration'.
2023-05-04 02:55:02.1884|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (24ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
CREATE TABLE [TVShows] (
    [Id] int NOT NULL IDENTITY,
    [Name] nvarchar(max) NOT NULL,
    [Year] int NOT NULL,
    [Audience] nvarchar(max) NOT NULL,
    [Seasons] int NOT NULL,
    [Genre] nvarchar(max) NOT NULL,
    [Status] nvarchar(max) NOT NULL,
    [Description] nvarchar(max) NOT NULL,
    CONSTRAINT [PK_TVShows] PRIMARY KEY ([Id])
);
2023-05-04 02:55:02.2100|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (12ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
CREATE TABLE [Users] (
    [Id] int NOT NULL IDENTITY,
    [Username] nvarchar(max) NOT NULL,
    [Email] nvarchar(max) NOT NULL,
    [Password] nvarchar(max) NOT NULL,
    [IsAdmin] bit NOT NULL,
    CONSTRAINT [PK_Users] PRIMARY KEY ([Id])
);
2023-05-04 02:55:02.7374|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (520ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
IF EXISTS (SELECT * FROM [sys].[identity_columns] WHERE [name] IN (N'Id', N'Audience', N'Description', N'Genre', N'Name', N'Seasons', N'Status', N'Year') AND [object_id] = OBJECT_ID(N'[TVShows]'))
    SET IDENTITY_INSERT [TVShows] ON;
INSERT INTO [TVShows] ([Id], [Audience], [Description], [Genre], [Name], [Seasons], [Status], [Year])
VALUES (1, N'18+', N'Nine noble families fight for control over the lands of Westeros, while an ancient enemy returns after being dormant for millennia.', N'Drama', N'Game of Thrones', 8, N'Ended', 2011),
(2, N'18+', N'Each season has its own self-contained storyline and characters and it has been posed that each season will introduce a new location as well as new characters and storylines.', N'Horror', N'American Horror Story', 10, N'On going', 2011),
(3, N'18+', N'Dexter is a serial killer with a "code" which directs his compulsions to kill only the guilty. As a blood spatter analyst for the Miami police, he has access to crime scenes, picking up clues and checking DNA to confirm a target''s guilt before he kills them.', N'Mystery', N'Dexter', 8, N'Ended', 2006),
(4, N'16+', N'The series follows a dangerously charming, intensely obsessive young man who goes to extreme measures to insert himself into the lives of those he is transfixed by.', N'Psychological thriller', N'You', 4, N'On going', 2018);
IF EXISTS (SELECT * FROM [sys].[identity_columns] WHERE [name] IN (N'Id', N'Audience', N'Description', N'Genre', N'Name', N'Seasons', N'Status', N'Year') AND [object_id] = OBJECT_ID(N'[TVShows]'))
    SET IDENTITY_INSERT [TVShows] OFF;
2023-05-04 02:55:02.7999|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (55ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
IF EXISTS (SELECT * FROM [sys].[identity_columns] WHERE [name] IN (N'Id', N'Email', N'IsAdmin', N'Password', N'Username') AND [object_id] = OBJECT_ID(N'[Users]'))
    SET IDENTITY_INSERT [Users] ON;
INSERT INTO [Users] ([Id], [Email], [IsAdmin], [Password], [Username])
VALUES (1, N'deeagabor@gmail.com', CAST(1 AS bit), N'ef797c8118f02dfb649607dd5d3f8c7623048c9c063d532cc95c5ed7a898a64f', N'deeagabor'),
(2, N'wolflorena@gmail.com', CAST(1 AS bit), N'ef797c8118f02dfb649607dd5d3f8c7623048c9c063d532cc95c5ed7a898a64f', N'wolflorena'),
(3, N'testunu@gmail.com', CAST(0 AS bit), N'ef797c8118f02dfb649607dd5d3f8c7623048c9c063d532cc95c5ed7a898a64f', N'test1'),
(4, N'testdoi@gmail.com', CAST(0 AS bit), N'ef797c8118f02dfb649607dd5d3f8c7623048c9c063d532cc95c5ed7a898a64f', N'test2');
IF EXISTS (SELECT * FROM [sys].[identity_columns] WHERE [name] IN (N'Id', N'Email', N'IsAdmin', N'Password', N'Username') AND [object_id] = OBJECT_ID(N'[Users]'))
    SET IDENTITY_INSERT [Users] OFF;
2023-05-04 02:55:02.8220|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (19ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
INSERT INTO [__EFMigrationsHistory] ([MigrationId], [ProductVersion])
VALUES (N'20230328164011_Initial Migration', N'7.0.4');
2023-05-04 02:55:02.8823|INFO|Microsoft.EntityFrameworkCore.Migrations|Applying migration '20230425163840_Poster'.
2023-05-04 02:55:02.9595|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (20ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
ALTER TABLE [TVShows] ADD [Poster] nvarchar(max) NULL;
2023-05-04 02:55:02.9803|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (16ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
UPDATE [TVShows] SET [Poster] = NULL
WHERE [Id] = 1;
SELECT @@ROWCOUNT;
2023-05-04 02:55:02.9803|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (5ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
UPDATE [TVShows] SET [Poster] = NULL
WHERE [Id] = 2;
SELECT @@ROWCOUNT;
2023-05-04 02:55:02.9969|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (4ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
UPDATE [TVShows] SET [Poster] = NULL
WHERE [Id] = 3;
SELECT @@ROWCOUNT;
2023-05-04 02:55:02.9969|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (4ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
UPDATE [TVShows] SET [Poster] = NULL
WHERE [Id] = 4;
SELECT @@ROWCOUNT;
2023-05-04 02:55:03.0150|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (6ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
INSERT INTO [__EFMigrationsHistory] ([MigrationId], [ProductVersion])
VALUES (N'20230425163840_Poster', N'7.0.4');
2023-05-04 02:55:03.0150|INFO|Microsoft.EntityFrameworkCore.Migrations|Applying migration '20230426194744_Poster - PUT'.
2023-05-04 02:55:03.0497|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (6ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
INSERT INTO [__EFMigrationsHistory] ([MigrationId], [ProductVersion])
VALUES (N'20230426194744_Poster - PUT', N'7.0.4');
2023-05-04 02:55:03.0615|INFO|Microsoft.EntityFrameworkCore.Migrations|Applying migration '20230426202154_Poster - NotMapped'.
2023-05-04 02:55:03.0848|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (6ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
INSERT INTO [__EFMigrationsHistory] ([MigrationId], [ProductVersion])
VALUES (N'20230426202154_Poster - NotMapped', N'7.0.4');
2023-05-04 02:55:03.1000|INFO|Microsoft.EntityFrameworkCore.Migrations|Applying migration '20230426204947_New properties'.
2023-05-04 02:55:03.1259|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (5ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
ALTER TABLE [TVShows] ADD [Banner] nvarchar(max) NULL;
2023-05-04 02:55:03.1477|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (16ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
ALTER TABLE [TVShows] ADD [Likes] int NOT NULL DEFAULT 0;
2023-05-04 02:55:03.1562|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (5ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
ALTER TABLE [TVShows] ADD [Logo] nvarchar(max) NULL;
2023-05-04 02:55:03.1562|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (6ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
ALTER TABLE [TVShows] ADD [NewSeason] nvarchar(max) NULL;
2023-05-04 02:55:03.1878|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (18ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
ALTER TABLE [TVShows] ADD [Streaming] nvarchar(max) NOT NULL DEFAULT N'';
2023-05-04 02:55:03.2008|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (9ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
UPDATE [TVShows] SET [Banner] = NULL, [Likes] = 1024, [Logo] = NULL, [NewSeason] = NULL, [Streaming] = N'Netflix'
WHERE [Id] = 1;
SELECT @@ROWCOUNT;
2023-05-04 02:55:03.2178|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (12ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
UPDATE [TVShows] SET [Banner] = NULL, [Likes] = 2200, [Logo] = NULL, [NewSeason] = N'11/12/2023', [Streaming] = N'HBO'
WHERE [Id] = 2;
SELECT @@ROWCOUNT;
2023-05-04 02:55:03.2178|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (4ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
UPDATE [TVShows] SET [Banner] = NULL, [Likes] = 870, [Logo] = NULL, [NewSeason] = NULL, [Streaming] = N'Disney+'
WHERE [Id] = 3;
SELECT @@ROWCOUNT;
2023-05-04 02:55:03.2346|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (6ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
UPDATE [TVShows] SET [Banner] = NULL, [Likes] = 2560, [Logo] = NULL, [NewSeason] = N'12/10/2023', [Streaming] = N'Amazon Prime'
WHERE [Id] = 4;
SELECT @@ROWCOUNT;
2023-05-04 02:55:03.2476|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (7ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
INSERT INTO [__EFMigrationsHistory] ([MigrationId], [ProductVersion])
VALUES (N'20230426204947_New properties', N'7.0.4');
2023-05-04 02:55:03.2476|INFO|Microsoft.EntityFrameworkCore.Migrations|Applying migration '20230503212914_TVShowSeasons DB'.
2023-05-04 02:55:03.3484|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (13ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
CREATE TABLE [TVShowSeasons] (
    [Id] int NOT NULL IDENTITY,
    [TVShowId] int NOT NULL,
    [Name] nvarchar(max) NOT NULL,
    [NumberOfEpisodes] int NOT NULL,
    [DurationEpisode] int NOT NULL,
    CONSTRAINT [PK_TVShowSeasons] PRIMARY KEY ([Id]),
    CONSTRAINT [FK_TVShowSeasons_TVShows_TVShowId] FOREIGN KEY ([TVShowId]) REFERENCES [TVShows] ([Id]) ON DELETE CASCADE
);
2023-05-04 02:55:03.3917|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (38ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
IF EXISTS (SELECT * FROM [sys].[identity_columns] WHERE [name] IN (N'Id', N'DurationEpisode', N'Name', N'NumberOfEpisodes', N'TVShowId') AND [object_id] = OBJECT_ID(N'[TVShowSeasons]'))
    SET IDENTITY_INSERT [TVShowSeasons] ON;
INSERT INTO [TVShowSeasons] ([Id], [DurationEpisode], [Name], [NumberOfEpisodes], [TVShowId])
VALUES (1, 42, N'Season 1', 10, 1);
IF EXISTS (SELECT * FROM [sys].[identity_columns] WHERE [name] IN (N'Id', N'DurationEpisode', N'Name', N'NumberOfEpisodes', N'TVShowId') AND [object_id] = OBJECT_ID(N'[TVShowSeasons]'))
    SET IDENTITY_INSERT [TVShowSeasons] OFF;
2023-05-04 02:55:03.4544|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (60ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
CREATE INDEX [IX_TVShowSeasons_TVShowId] ON [TVShowSeasons] ([TVShowId]);
2023-05-04 02:55:03.4544|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (4ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
INSERT INTO [__EFMigrationsHistory] ([MigrationId], [ProductVersion])
VALUES (N'20230503212914_TVShowSeasons DB', N'7.0.4');
2023-05-04 02:55:03.4756|INFO|Microsoft.EntityFrameworkCore.Migrations|Applying migration '20230503214542_TVShowSeasons DB Add data'.
2023-05-04 02:55:03.5279|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (36ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
IF EXISTS (SELECT * FROM [sys].[identity_columns] WHERE [name] IN (N'Id', N'DurationEpisode', N'Name', N'NumberOfEpisodes', N'TVShowId') AND [object_id] = OBJECT_ID(N'[TVShowSeasons]'))
    SET IDENTITY_INSERT [TVShowSeasons] ON;
INSERT INTO [TVShowSeasons] ([Id], [DurationEpisode], [Name], [NumberOfEpisodes], [TVShowId])
VALUES (2, 45, N'Season 2', 12, 1);
IF EXISTS (SELECT * FROM [sys].[identity_columns] WHERE [name] IN (N'Id', N'DurationEpisode', N'Name', N'NumberOfEpisodes', N'TVShowId') AND [object_id] = OBJECT_ID(N'[TVShowSeasons]'))
    SET IDENTITY_INSERT [TVShowSeasons] OFF;
2023-05-04 02:55:03.5279|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (5ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
INSERT INTO [__EFMigrationsHistory] ([MigrationId], [ProductVersion])
VALUES (N'20230503214542_TVShowSeasons DB Add data', N'7.0.4');
2023-05-04 02:55:07.0064|INFO|Microsoft.AspNetCore.DataProtection.KeyManagement.XmlKeyManager|User profile is available. Using 'C:\Users\Andreea\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2023-05-04 02:55:09.8104|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7053/ - -
2023-05-04 02:55:10.0793|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7053/ - - - 404 0 - 277.4202ms
2023-05-04 02:55:48.5690|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/1.1 GET https://localhost:7053/api/shows/1/seasons multipart/form-data;+boundary=--------------------------388686689327929149735141 500996
2023-05-04 02:55:48.5778|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executing endpoint 'Nite.API.Controllers.SeasonsController.GetSeasons (Nite.API)'
2023-05-04 02:55:48.6432|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Route matched with {action = "GetSeasons", controller = "Seasons"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetSeasons(Int32) on controller Nite.API.Controllers.SeasonsController (Nite.API).
2023-05-04 02:55:48.6866|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (17ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
2023-05-04 02:55:48.7752|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (84ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
2023-05-04 02:55:50.9477|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (521ms) [Parameters=[@__showId_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [TVShows] AS [t]
        WHERE [t].[Id] = @__showId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-05-04 02:55:51.0825|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (15ms) [Parameters=[@__showId_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [t].[Id], [t].[DurationEpisode], [t].[Name], [t].[NumberOfEpisodes], [t].[TVShowId]
FROM [TVShowSeasons] AS [t]
WHERE [t].[TVShowId] = @__showId_0
2023-05-04 02:55:51.2538|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ObjectResultExecutor|Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Nite.API.Data.Models.SeasonDTO, Nite.API, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2023-05-04 02:55:51.5643|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Executed action Nite.API.Controllers.SeasonsController.GetSeasons (Nite.API) in 2909.5945ms
2023-05-04 02:55:51.5643|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executed endpoint 'Nite.API.Controllers.SeasonsController.GetSeasons (Nite.API)'
2023-05-04 02:55:51.6864|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/1.1 GET https://localhost:7053/api/shows/1/seasons multipart/form-data;+boundary=--------------------------388686689327929149735141 500996 - 200 141 application/json;+charset=utf-8 3117.3298ms
2023-05-04 14:40:57.5026|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (94ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
2023-05-04 14:40:57.8288|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (239ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
2023-05-04 14:41:24.4647|INFO|Nite.API.Program|Initializing application...
2023-05-04 14:41:34.3123|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (118ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
2023-05-04 14:41:34.4803|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (75ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
2023-05-04 14:41:34.4976|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (10ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
2023-05-04 14:41:35.0701|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (329ms) [Parameters=[], CommandType='Text', CommandTimeout='60']
IF SERVERPROPERTY('EngineEdition') <> 5
BEGIN
    ALTER DATABASE [NiteDb] SET SINGLE_USER WITH ROLLBACK IMMEDIATE;
END;
2023-05-04 14:41:36.4595|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (1,373ms) [Parameters=[], CommandType='Text', CommandTimeout='60']
DROP DATABASE [NiteDb];
2023-05-04 14:41:38.4295|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (1,734ms) [Parameters=[], CommandType='Text', CommandTimeout='60']
CREATE DATABASE [NiteDb];
2023-05-04 14:41:39.1857|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (754ms) [Parameters=[], CommandType='Text', CommandTimeout='60']
IF SERVERPROPERTY('EngineEdition') <> 5
BEGIN
    ALTER DATABASE [NiteDb] SET READ_COMMITTED_SNAPSHOT ON;
END;
2023-05-04 14:41:39.2277|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (3ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
2023-05-04 14:41:39.6025|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (39ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
CREATE TABLE [__EFMigrationsHistory] (
    [MigrationId] nvarchar(150) NOT NULL,
    [ProductVersion] nvarchar(32) NOT NULL,
    CONSTRAINT [PK___EFMigrationsHistory] PRIMARY KEY ([MigrationId])
);
2023-05-04 14:41:39.6156|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (6ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
2023-05-04 14:41:39.6436|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (9ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT OBJECT_ID(N'[__EFMigrationsHistory]');
2023-05-04 14:41:39.6748|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (17ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [MigrationId], [ProductVersion]
FROM [__EFMigrationsHistory]
ORDER BY [MigrationId];
2023-05-04 14:41:39.7637|INFO|Microsoft.EntityFrameworkCore.Migrations|Applying migration '20230328164011_Initial Migration'.
2023-05-04 14:41:40.0080|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (14ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
CREATE TABLE [TVShows] (
    [Id] int NOT NULL IDENTITY,
    [Name] nvarchar(max) NOT NULL,
    [Year] int NOT NULL,
    [Audience] nvarchar(max) NOT NULL,
    [Seasons] int NOT NULL,
    [Genre] nvarchar(max) NOT NULL,
    [Status] nvarchar(max) NOT NULL,
    [Description] nvarchar(max) NOT NULL,
    CONSTRAINT [PK_TVShows] PRIMARY KEY ([Id])
);
2023-05-04 14:41:40.0191|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (7ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
CREATE TABLE [Users] (
    [Id] int NOT NULL IDENTITY,
    [Username] nvarchar(max) NOT NULL,
    [Email] nvarchar(max) NOT NULL,
    [Password] nvarchar(max) NOT NULL,
    [IsAdmin] bit NOT NULL,
    CONSTRAINT [PK_Users] PRIMARY KEY ([Id])
);
2023-05-04 14:41:40.1621|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (140ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
IF EXISTS (SELECT * FROM [sys].[identity_columns] WHERE [name] IN (N'Id', N'Audience', N'Description', N'Genre', N'Name', N'Seasons', N'Status', N'Year') AND [object_id] = OBJECT_ID(N'[TVShows]'))
    SET IDENTITY_INSERT [TVShows] ON;
INSERT INTO [TVShows] ([Id], [Audience], [Description], [Genre], [Name], [Seasons], [Status], [Year])
VALUES (1, N'18+', N'Nine noble families fight for control over the lands of Westeros, while an ancient enemy returns after being dormant for millennia.', N'Drama', N'Game of Thrones', 8, N'Ended', 2011),
(2, N'18+', N'Each season has its own self-contained storyline and characters and it has been posed that each season will introduce a new location as well as new characters and storylines.', N'Horror', N'American Horror Story', 10, N'On going', 2011),
(3, N'18+', N'Dexter is a serial killer with a "code" which directs his compulsions to kill only the guilty. As a blood spatter analyst for the Miami police, he has access to crime scenes, picking up clues and checking DNA to confirm a target''s guilt before he kills them.', N'Mystery', N'Dexter', 8, N'Ended', 2006),
(4, N'16+', N'The series follows a dangerously charming, intensely obsessive young man who goes to extreme measures to insert himself into the lives of those he is transfixed by.', N'Psychological thriller', N'You', 4, N'On going', 2018);
IF EXISTS (SELECT * FROM [sys].[identity_columns] WHERE [name] IN (N'Id', N'Audience', N'Description', N'Genre', N'Name', N'Seasons', N'Status', N'Year') AND [object_id] = OBJECT_ID(N'[TVShows]'))
    SET IDENTITY_INSERT [TVShows] OFF;
2023-05-04 14:41:40.1972|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (31ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
IF EXISTS (SELECT * FROM [sys].[identity_columns] WHERE [name] IN (N'Id', N'Email', N'IsAdmin', N'Password', N'Username') AND [object_id] = OBJECT_ID(N'[Users]'))
    SET IDENTITY_INSERT [Users] ON;
INSERT INTO [Users] ([Id], [Email], [IsAdmin], [Password], [Username])
VALUES (1, N'deeagabor@gmail.com', CAST(1 AS bit), N'ef797c8118f02dfb649607dd5d3f8c7623048c9c063d532cc95c5ed7a898a64f', N'deeagabor'),
(2, N'wolflorena@gmail.com', CAST(1 AS bit), N'ef797c8118f02dfb649607dd5d3f8c7623048c9c063d532cc95c5ed7a898a64f', N'wolflorena'),
(3, N'testunu@gmail.com', CAST(0 AS bit), N'ef797c8118f02dfb649607dd5d3f8c7623048c9c063d532cc95c5ed7a898a64f', N'test1'),
(4, N'testdoi@gmail.com', CAST(0 AS bit), N'ef797c8118f02dfb649607dd5d3f8c7623048c9c063d532cc95c5ed7a898a64f', N'test2');
IF EXISTS (SELECT * FROM [sys].[identity_columns] WHERE [name] IN (N'Id', N'Email', N'IsAdmin', N'Password', N'Username') AND [object_id] = OBJECT_ID(N'[Users]'))
    SET IDENTITY_INSERT [Users] OFF;
2023-05-04 14:41:40.2108|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (10ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
INSERT INTO [__EFMigrationsHistory] ([MigrationId], [ProductVersion])
VALUES (N'20230328164011_Initial Migration', N'7.0.4');
2023-05-04 14:41:40.2694|INFO|Microsoft.EntityFrameworkCore.Migrations|Applying migration '20230425163840_Poster'.
2023-05-04 14:41:40.3435|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (13ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
ALTER TABLE [TVShows] ADD [Poster] nvarchar(max) NULL;
2023-05-04 14:41:40.3555|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (10ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
UPDATE [TVShows] SET [Poster] = NULL
WHERE [Id] = 1;
SELECT @@ROWCOUNT;
2023-05-04 14:41:40.3555|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (4ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
UPDATE [TVShows] SET [Poster] = NULL
WHERE [Id] = 2;
SELECT @@ROWCOUNT;
2023-05-04 14:41:40.3555|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (4ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
UPDATE [TVShows] SET [Poster] = NULL
WHERE [Id] = 3;
SELECT @@ROWCOUNT;
2023-05-04 14:41:40.3746|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (4ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
UPDATE [TVShows] SET [Poster] = NULL
WHERE [Id] = 4;
SELECT @@ROWCOUNT;
2023-05-04 14:41:40.3746|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (4ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
INSERT INTO [__EFMigrationsHistory] ([MigrationId], [ProductVersion])
VALUES (N'20230425163840_Poster', N'7.0.4');
2023-05-04 14:41:40.3904|INFO|Microsoft.EntityFrameworkCore.Migrations|Applying migration '20230426194744_Poster - PUT'.
2023-05-04 14:41:40.4051|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (4ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
INSERT INTO [__EFMigrationsHistory] ([MigrationId], [ProductVersion])
VALUES (N'20230426194744_Poster - PUT', N'7.0.4');
2023-05-04 14:41:40.4051|INFO|Microsoft.EntityFrameworkCore.Migrations|Applying migration '20230426202154_Poster - NotMapped'.
2023-05-04 14:41:40.4319|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (4ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
INSERT INTO [__EFMigrationsHistory] ([MigrationId], [ProductVersion])
VALUES (N'20230426202154_Poster - NotMapped', N'7.0.4');
2023-05-04 14:41:40.4436|INFO|Microsoft.EntityFrameworkCore.Migrations|Applying migration '20230426204947_New properties'.
2023-05-04 14:41:40.4691|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (5ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
ALTER TABLE [TVShows] ADD [Banner] nvarchar(max) NULL;
2023-05-04 14:41:40.4855|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (13ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
ALTER TABLE [TVShows] ADD [Likes] int NOT NULL DEFAULT 0;
2023-05-04 14:41:40.4855|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (5ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
ALTER TABLE [TVShows] ADD [Logo] nvarchar(max) NULL;
2023-05-04 14:41:40.4999|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (4ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
ALTER TABLE [TVShows] ADD [NewSeason] nvarchar(max) NULL;
2023-05-04 14:41:40.5102|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (8ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
ALTER TABLE [TVShows] ADD [Streaming] nvarchar(max) NOT NULL DEFAULT N'';
2023-05-04 14:41:40.5102|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (5ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
UPDATE [TVShows] SET [Banner] = NULL, [Likes] = 1024, [Logo] = NULL, [NewSeason] = NULL, [Streaming] = N'Netflix'
WHERE [Id] = 1;
SELECT @@ROWCOUNT;
2023-05-04 14:41:40.5268|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (6ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
UPDATE [TVShows] SET [Banner] = NULL, [Likes] = 2200, [Logo] = NULL, [NewSeason] = N'11/12/2023', [Streaming] = N'HBO'
WHERE [Id] = 2;
SELECT @@ROWCOUNT;
2023-05-04 14:41:40.5268|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (3ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
UPDATE [TVShows] SET [Banner] = NULL, [Likes] = 870, [Logo] = NULL, [NewSeason] = NULL, [Streaming] = N'Disney+'
WHERE [Id] = 3;
SELECT @@ROWCOUNT;
2023-05-04 14:41:40.5268|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (4ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
UPDATE [TVShows] SET [Banner] = NULL, [Likes] = 2560, [Logo] = NULL, [NewSeason] = N'12/10/2023', [Streaming] = N'Amazon Prime'
WHERE [Id] = 4;
SELECT @@ROWCOUNT;
2023-05-04 14:41:40.5451|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (4ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
INSERT INTO [__EFMigrationsHistory] ([MigrationId], [ProductVersion])
VALUES (N'20230426204947_New properties', N'7.0.4');
2023-05-04 14:41:40.5451|INFO|Microsoft.EntityFrameworkCore.Migrations|Applying migration '20230503212914_TVShowSeasons DB'.
2023-05-04 14:41:40.6404|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (11ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
CREATE TABLE [TVShowSeasons] (
    [Id] int NOT NULL IDENTITY,
    [TVShowId] int NOT NULL,
    [Name] nvarchar(max) NOT NULL,
    [NumberOfEpisodes] int NOT NULL,
    [DurationEpisode] int NOT NULL,
    CONSTRAINT [PK_TVShowSeasons] PRIMARY KEY ([Id]),
    CONSTRAINT [FK_TVShowSeasons_TVShows_TVShowId] FOREIGN KEY ([TVShowId]) REFERENCES [TVShows] ([Id]) ON DELETE CASCADE
);
2023-05-04 14:41:40.6814|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (36ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
IF EXISTS (SELECT * FROM [sys].[identity_columns] WHERE [name] IN (N'Id', N'DurationEpisode', N'Name', N'NumberOfEpisodes', N'TVShowId') AND [object_id] = OBJECT_ID(N'[TVShowSeasons]'))
    SET IDENTITY_INSERT [TVShowSeasons] ON;
INSERT INTO [TVShowSeasons] ([Id], [DurationEpisode], [Name], [NumberOfEpisodes], [TVShowId])
VALUES (1, 42, N'Season 1', 10, 1);
IF EXISTS (SELECT * FROM [sys].[identity_columns] WHERE [name] IN (N'Id', N'DurationEpisode', N'Name', N'NumberOfEpisodes', N'TVShowId') AND [object_id] = OBJECT_ID(N'[TVShowSeasons]'))
    SET IDENTITY_INSERT [TVShowSeasons] OFF;
2023-05-04 14:41:40.7385|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (53ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
CREATE INDEX [IX_TVShowSeasons_TVShowId] ON [TVShowSeasons] ([TVShowId]);
2023-05-04 14:41:40.7491|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (6ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
INSERT INTO [__EFMigrationsHistory] ([MigrationId], [ProductVersion])
VALUES (N'20230503212914_TVShowSeasons DB', N'7.0.4');
2023-05-04 14:41:40.7628|INFO|Microsoft.EntityFrameworkCore.Migrations|Applying migration '20230503214542_TVShowSeasons DB Add data'.
2023-05-04 14:41:40.8169|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (32ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
IF EXISTS (SELECT * FROM [sys].[identity_columns] WHERE [name] IN (N'Id', N'DurationEpisode', N'Name', N'NumberOfEpisodes', N'TVShowId') AND [object_id] = OBJECT_ID(N'[TVShowSeasons]'))
    SET IDENTITY_INSERT [TVShowSeasons] ON;
INSERT INTO [TVShowSeasons] ([Id], [DurationEpisode], [Name], [NumberOfEpisodes], [TVShowId])
VALUES (2, 45, N'Season 2', 12, 1);
IF EXISTS (SELECT * FROM [sys].[identity_columns] WHERE [name] IN (N'Id', N'DurationEpisode', N'Name', N'NumberOfEpisodes', N'TVShowId') AND [object_id] = OBJECT_ID(N'[TVShowSeasons]'))
    SET IDENTITY_INSERT [TVShowSeasons] OFF;
2023-05-04 14:41:40.8267|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (6ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
INSERT INTO [__EFMigrationsHistory] ([MigrationId], [ProductVersion])
VALUES (N'20230503214542_TVShowSeasons DB Add data', N'7.0.4');
2023-05-04 14:41:40.8391|INFO|Microsoft.EntityFrameworkCore.Migrations|Applying migration '20230504114058_Edit User DB'.
2023-05-04 14:41:40.8692|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (8ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
ALTER TABLE [Users] ADD [Birthdate] nvarchar(max) NULL;
2023-05-04 14:41:40.8782|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (5ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
ALTER TABLE [Users] ADD [Gender] nvarchar(max) NULL;
2023-05-04 14:41:40.8905|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (9ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
UPDATE [Users] SET [Birthdate] = NULL, [Gender] = NULL
WHERE [Id] = 1;
SELECT @@ROWCOUNT;
2023-05-04 14:41:40.8905|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (4ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
UPDATE [Users] SET [Birthdate] = NULL, [Gender] = NULL
WHERE [Id] = 2;
SELECT @@ROWCOUNT;
2023-05-04 14:41:40.9051|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (4ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
UPDATE [Users] SET [Birthdate] = NULL, [Gender] = NULL
WHERE [Id] = 3;
SELECT @@ROWCOUNT;
2023-05-04 14:41:40.9051|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (4ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
UPDATE [Users] SET [Birthdate] = NULL, [Gender] = NULL
WHERE [Id] = 4;
SELECT @@ROWCOUNT;
2023-05-04 14:41:40.9185|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (4ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
INSERT INTO [__EFMigrationsHistory] ([MigrationId], [ProductVersion])
VALUES (N'20230504114058_Edit User DB', N'7.0.4');
2023-05-04 14:41:41.4353|INFO|Microsoft.AspNetCore.DataProtection.KeyManagement.XmlKeyManager|User profile is available. Using 'C:\Users\Andreea\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2023-05-04 14:41:43.0107|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7053/ - -
2023-05-04 14:41:43.1902|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7053/ - - - 404 0 - 184.1483ms
2023-05-04 14:54:59.7394|INFO|Nite.API.Program|Initializing application...
2023-05-04 14:55:09.4788|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (200ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
2023-05-04 14:55:10.1905|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (621ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
2023-05-04 14:55:10.2074|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (9ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
2023-05-04 14:55:13.8771|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (3,323ms) [Parameters=[], CommandType='Text', CommandTimeout='60']
IF SERVERPROPERTY('EngineEdition') <> 5
BEGIN
    ALTER DATABASE [NiteDb] SET SINGLE_USER WITH ROLLBACK IMMEDIATE;
END;
2023-05-04 14:55:15.8062|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (1,904ms) [Parameters=[], CommandType='Text', CommandTimeout='60']
DROP DATABASE [NiteDb];
2023-05-04 14:55:17.8007|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (1,745ms) [Parameters=[], CommandType='Text', CommandTimeout='60']
CREATE DATABASE [NiteDb];
2023-05-04 14:55:18.7116|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (907ms) [Parameters=[], CommandType='Text', CommandTimeout='60']
IF SERVERPROPERTY('EngineEdition') <> 5
BEGIN
    ALTER DATABASE [NiteDb] SET READ_COMMITTED_SNAPSHOT ON;
END;
2023-05-04 14:55:18.7593|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (4ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
2023-05-04 14:55:19.1870|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (58ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
CREATE TABLE [__EFMigrationsHistory] (
    [MigrationId] nvarchar(150) NOT NULL,
    [ProductVersion] nvarchar(32) NOT NULL,
    CONSTRAINT [PK___EFMigrationsHistory] PRIMARY KEY ([MigrationId])
);
2023-05-04 14:55:19.2026|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (7ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
2023-05-04 14:55:19.2335|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (8ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT OBJECT_ID(N'[__EFMigrationsHistory]');
2023-05-04 14:55:19.2720|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (19ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [MigrationId], [ProductVersion]
FROM [__EFMigrationsHistory]
ORDER BY [MigrationId];
2023-05-04 14:55:19.3773|INFO|Microsoft.EntityFrameworkCore.Migrations|Applying migration '20230328164011_Initial Migration'.
2023-05-04 14:55:19.6134|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (21ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
CREATE TABLE [TVShows] (
    [Id] int NOT NULL IDENTITY,
    [Name] nvarchar(max) NOT NULL,
    [Year] int NOT NULL,
    [Audience] nvarchar(max) NOT NULL,
    [Seasons] int NOT NULL,
    [Genre] nvarchar(max) NOT NULL,
    [Status] nvarchar(max) NOT NULL,
    [Description] nvarchar(max) NOT NULL,
    CONSTRAINT [PK_TVShows] PRIMARY KEY ([Id])
);
2023-05-04 14:55:19.6301|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (11ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
CREATE TABLE [Users] (
    [Id] int NOT NULL IDENTITY,
    [Username] nvarchar(max) NOT NULL,
    [Email] nvarchar(max) NOT NULL,
    [Password] nvarchar(max) NOT NULL,
    [IsAdmin] bit NOT NULL,
    CONSTRAINT [PK_Users] PRIMARY KEY ([Id])
);
2023-05-04 14:55:19.8195|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (185ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
IF EXISTS (SELECT * FROM [sys].[identity_columns] WHERE [name] IN (N'Id', N'Audience', N'Description', N'Genre', N'Name', N'Seasons', N'Status', N'Year') AND [object_id] = OBJECT_ID(N'[TVShows]'))
    SET IDENTITY_INSERT [TVShows] ON;
INSERT INTO [TVShows] ([Id], [Audience], [Description], [Genre], [Name], [Seasons], [Status], [Year])
VALUES (1, N'18+', N'Nine noble families fight for control over the lands of Westeros, while an ancient enemy returns after being dormant for millennia.', N'Drama', N'Game of Thrones', 8, N'Ended', 2011),
(2, N'18+', N'Each season has its own self-contained storyline and characters and it has been posed that each season will introduce a new location as well as new characters and storylines.', N'Horror', N'American Horror Story', 10, N'On going', 2011),
(3, N'18+', N'Dexter is a serial killer with a "code" which directs his compulsions to kill only the guilty. As a blood spatter analyst for the Miami police, he has access to crime scenes, picking up clues and checking DNA to confirm a target''s guilt before he kills them.', N'Mystery', N'Dexter', 8, N'Ended', 2006),
(4, N'16+', N'The series follows a dangerously charming, intensely obsessive young man who goes to extreme measures to insert himself into the lives of those he is transfixed by.', N'Psychological thriller', N'You', 4, N'On going', 2018);
IF EXISTS (SELECT * FROM [sys].[identity_columns] WHERE [name] IN (N'Id', N'Audience', N'Description', N'Genre', N'Name', N'Seasons', N'Status', N'Year') AND [object_id] = OBJECT_ID(N'[TVShows]'))
    SET IDENTITY_INSERT [TVShows] OFF;
2023-05-04 14:55:19.8584|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (34ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
IF EXISTS (SELECT * FROM [sys].[identity_columns] WHERE [name] IN (N'Id', N'Email', N'IsAdmin', N'Password', N'Username') AND [object_id] = OBJECT_ID(N'[Users]'))
    SET IDENTITY_INSERT [Users] ON;
INSERT INTO [Users] ([Id], [Email], [IsAdmin], [Password], [Username])
VALUES (1, N'deeagabor@gmail.com', CAST(1 AS bit), N'ef797c8118f02dfb649607dd5d3f8c7623048c9c063d532cc95c5ed7a898a64f', N'deeagabor'),
(2, N'wolflorena@gmail.com', CAST(1 AS bit), N'ef797c8118f02dfb649607dd5d3f8c7623048c9c063d532cc95c5ed7a898a64f', N'wolflorena'),
(3, N'testunu@gmail.com', CAST(0 AS bit), N'ef797c8118f02dfb649607dd5d3f8c7623048c9c063d532cc95c5ed7a898a64f', N'test1'),
(4, N'testdoi@gmail.com', CAST(0 AS bit), N'ef797c8118f02dfb649607dd5d3f8c7623048c9c063d532cc95c5ed7a898a64f', N'test2');
IF EXISTS (SELECT * FROM [sys].[identity_columns] WHERE [name] IN (N'Id', N'Email', N'IsAdmin', N'Password', N'Username') AND [object_id] = OBJECT_ID(N'[Users]'))
    SET IDENTITY_INSERT [Users] OFF;
2023-05-04 14:55:19.8737|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (10ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
INSERT INTO [__EFMigrationsHistory] ([MigrationId], [ProductVersion])
VALUES (N'20230328164011_Initial Migration', N'7.0.4');
2023-05-04 14:55:19.9306|INFO|Microsoft.EntityFrameworkCore.Migrations|Applying migration '20230425163840_Poster'.
2023-05-04 14:55:20.0077|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (17ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
ALTER TABLE [TVShows] ADD [Poster] nvarchar(max) NULL;
2023-05-04 14:55:20.0230|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (12ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
UPDATE [TVShows] SET [Poster] = NULL
WHERE [Id] = 1;
SELECT @@ROWCOUNT;
2023-05-04 14:55:20.0303|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (4ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
UPDATE [TVShows] SET [Poster] = NULL
WHERE [Id] = 2;
SELECT @@ROWCOUNT;
2023-05-04 14:55:20.0303|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (4ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
UPDATE [TVShows] SET [Poster] = NULL
WHERE [Id] = 3;
SELECT @@ROWCOUNT;
2023-05-04 14:55:20.0443|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (4ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
UPDATE [TVShows] SET [Poster] = NULL
WHERE [Id] = 4;
SELECT @@ROWCOUNT;
2023-05-04 14:55:20.0443|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (4ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
INSERT INTO [__EFMigrationsHistory] ([MigrationId], [ProductVersion])
VALUES (N'20230425163840_Poster', N'7.0.4');
2023-05-04 14:55:20.0605|INFO|Microsoft.EntityFrameworkCore.Migrations|Applying migration '20230426194744_Poster - PUT'.
2023-05-04 14:55:20.0739|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (4ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
INSERT INTO [__EFMigrationsHistory] ([MigrationId], [ProductVersion])
VALUES (N'20230426194744_Poster - PUT', N'7.0.4');
2023-05-04 14:55:20.0739|INFO|Microsoft.EntityFrameworkCore.Migrations|Applying migration '20230426202154_Poster - NotMapped'.
2023-05-04 14:55:20.0949|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (4ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
INSERT INTO [__EFMigrationsHistory] ([MigrationId], [ProductVersion])
VALUES (N'20230426202154_Poster - NotMapped', N'7.0.4');
2023-05-04 14:55:20.0949|INFO|Microsoft.EntityFrameworkCore.Migrations|Applying migration '20230426204947_New properties'.
2023-05-04 14:55:20.1259|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (6ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
ALTER TABLE [TVShows] ADD [Banner] nvarchar(max) NULL;
2023-05-04 14:55:20.1403|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (12ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
ALTER TABLE [TVShows] ADD [Likes] int NOT NULL DEFAULT 0;
2023-05-04 14:55:20.1403|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (6ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
ALTER TABLE [TVShows] ADD [Logo] nvarchar(max) NULL;
2023-05-04 14:55:20.1565|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (4ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
ALTER TABLE [TVShows] ADD [NewSeason] nvarchar(max) NULL;
2023-05-04 14:55:20.1683|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (9ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
ALTER TABLE [TVShows] ADD [Streaming] nvarchar(max) NOT NULL DEFAULT N'';
2023-05-04 14:55:20.1683|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (6ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
UPDATE [TVShows] SET [Banner] = NULL, [Likes] = 1024, [Logo] = NULL, [NewSeason] = NULL, [Streaming] = N'Netflix'
WHERE [Id] = 1;
SELECT @@ROWCOUNT;
2023-05-04 14:55:20.1879|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (7ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
UPDATE [TVShows] SET [Banner] = NULL, [Likes] = 2200, [Logo] = NULL, [NewSeason] = N'11/12/2023', [Streaming] = N'HBO'
WHERE [Id] = 2;
SELECT @@ROWCOUNT;
2023-05-04 14:55:20.1879|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (4ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
UPDATE [TVShows] SET [Banner] = NULL, [Likes] = 870, [Logo] = NULL, [NewSeason] = NULL, [Streaming] = N'Disney+'
WHERE [Id] = 3;
SELECT @@ROWCOUNT;
2023-05-04 14:55:20.2009|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (4ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
UPDATE [TVShows] SET [Banner] = NULL, [Likes] = 2560, [Logo] = NULL, [NewSeason] = N'12/10/2023', [Streaming] = N'Amazon Prime'
WHERE [Id] = 4;
SELECT @@ROWCOUNT;
2023-05-04 14:55:20.2009|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (4ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
INSERT INTO [__EFMigrationsHistory] ([MigrationId], [ProductVersion])
VALUES (N'20230426204947_New properties', N'7.0.4');
2023-05-04 14:55:20.2205|INFO|Microsoft.EntityFrameworkCore.Migrations|Applying migration '20230503212914_TVShowSeasons DB'.
2023-05-04 14:55:20.2912|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (8ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
CREATE TABLE [TVShowSeasons] (
    [Id] int NOT NULL IDENTITY,
    [TVShowId] int NOT NULL,
    [Name] nvarchar(max) NOT NULL,
    [NumberOfEpisodes] int NOT NULL,
    [DurationEpisode] int NOT NULL,
    CONSTRAINT [PK_TVShowSeasons] PRIMARY KEY ([Id]),
    CONSTRAINT [FK_TVShowSeasons_TVShows_TVShowId] FOREIGN KEY ([TVShowId]) REFERENCES [TVShows] ([Id]) ON DELETE CASCADE
);
2023-05-04 14:55:20.3218|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (28ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
IF EXISTS (SELECT * FROM [sys].[identity_columns] WHERE [name] IN (N'Id', N'DurationEpisode', N'Name', N'NumberOfEpisodes', N'TVShowId') AND [object_id] = OBJECT_ID(N'[TVShowSeasons]'))
    SET IDENTITY_INSERT [TVShowSeasons] ON;
INSERT INTO [TVShowSeasons] ([Id], [DurationEpisode], [Name], [NumberOfEpisodes], [TVShowId])
VALUES (1, 42, N'Season 1', 10, 1);
IF EXISTS (SELECT * FROM [sys].[identity_columns] WHERE [name] IN (N'Id', N'DurationEpisode', N'Name', N'NumberOfEpisodes', N'TVShowId') AND [object_id] = OBJECT_ID(N'[TVShowSeasons]'))
    SET IDENTITY_INSERT [TVShowSeasons] OFF;
2023-05-04 14:55:20.3740|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (49ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
CREATE INDEX [IX_TVShowSeasons_TVShowId] ON [TVShowSeasons] ([TVShowId]);
2023-05-04 14:55:20.3740|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (6ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
INSERT INTO [__EFMigrationsHistory] ([MigrationId], [ProductVersion])
VALUES (N'20230503212914_TVShowSeasons DB', N'7.0.4');
2023-05-04 14:55:20.3997|INFO|Microsoft.EntityFrameworkCore.Migrations|Applying migration '20230503214542_TVShowSeasons DB Add data'.
2023-05-04 14:55:20.4675|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (47ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
IF EXISTS (SELECT * FROM [sys].[identity_columns] WHERE [name] IN (N'Id', N'DurationEpisode', N'Name', N'NumberOfEpisodes', N'TVShowId') AND [object_id] = OBJECT_ID(N'[TVShowSeasons]'))
    SET IDENTITY_INSERT [TVShowSeasons] ON;
INSERT INTO [TVShowSeasons] ([Id], [DurationEpisode], [Name], [NumberOfEpisodes], [TVShowId])
VALUES (2, 45, N'Season 2', 12, 1);
IF EXISTS (SELECT * FROM [sys].[identity_columns] WHERE [name] IN (N'Id', N'DurationEpisode', N'Name', N'NumberOfEpisodes', N'TVShowId') AND [object_id] = OBJECT_ID(N'[TVShowSeasons]'))
    SET IDENTITY_INSERT [TVShowSeasons] OFF;
2023-05-04 14:55:20.4825|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (10ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
INSERT INTO [__EFMigrationsHistory] ([MigrationId], [ProductVersion])
VALUES (N'20230503214542_TVShowSeasons DB Add data', N'7.0.4');
2023-05-04 14:55:20.4825|INFO|Microsoft.EntityFrameworkCore.Migrations|Applying migration '20230504114058_Edit User DB'.
2023-05-04 14:55:20.5245|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (9ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
ALTER TABLE [Users] ADD [Birthdate] nvarchar(max) NULL;
2023-05-04 14:55:20.5348|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (7ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
ALTER TABLE [Users] ADD [Gender] nvarchar(max) NULL;
2023-05-04 14:55:20.5473|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (8ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
UPDATE [Users] SET [Birthdate] = NULL, [Gender] = NULL
WHERE [Id] = 1;
SELECT @@ROWCOUNT;
2023-05-04 14:55:20.5582|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (7ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
UPDATE [Users] SET [Birthdate] = NULL, [Gender] = NULL
WHERE [Id] = 2;
SELECT @@ROWCOUNT;
2023-05-04 14:55:20.5582|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (5ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
UPDATE [Users] SET [Birthdate] = NULL, [Gender] = NULL
WHERE [Id] = 3;
SELECT @@ROWCOUNT;
2023-05-04 14:55:20.5759|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (5ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
UPDATE [Users] SET [Birthdate] = NULL, [Gender] = NULL
WHERE [Id] = 4;
SELECT @@ROWCOUNT;
2023-05-04 14:55:20.5759|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (4ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
INSERT INTO [__EFMigrationsHistory] ([MigrationId], [ProductVersion])
VALUES (N'20230504114058_Edit User DB', N'7.0.4');
2023-05-04 14:55:21.0997|INFO|Microsoft.AspNetCore.DataProtection.KeyManagement.XmlKeyManager|User profile is available. Using 'C:\Users\Andreea\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2023-05-04 14:55:22.6055|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7053/ - -
2023-05-04 14:55:22.8087|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7053/ - - - 404 0 - 209.5410ms
2023-05-04 14:55:25.7804|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 OPTIONS https://localhost:7053/api/login - -
2023-05-04 14:55:25.7970|INFO|Microsoft.AspNetCore.Cors.Infrastructure.CorsService|CORS policy execution successful.
2023-05-04 14:55:25.7970|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 OPTIONS https://localhost:7053/api/login - - - 204 - - 22.7006ms
2023-05-04 14:55:25.8167|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 POST https://localhost:7053/api/login application/json;+charset=UTF-8 102
2023-05-04 14:55:25.8167|INFO|Microsoft.AspNetCore.Cors.Infrastructure.CorsService|CORS policy execution successful.
2023-05-04 14:55:25.8167|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executing endpoint 'Nite.API.Controllers.LoginController.Login (Nite.API)'
2023-05-04 14:55:25.9009|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Route matched with {action = "Login", controller = "Login"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult Login(Nite.API.Data.Models.LoginDTO) on controller Nite.API.Controllers.LoginController (Nite.API).
2023-05-04 14:55:25.9435|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (9ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
2023-05-04 14:55:26.0414|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (93ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
2023-05-04 14:55:27.7552|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (15ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [u].[Id], [u].[Birthdate], [u].[Email], [u].[Gender], [u].[IsAdmin], [u].[Password], [u].[Username]
FROM [Users] AS [u]
2023-05-04 14:55:27.9966|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ObjectResultExecutor|Executing OkObjectResult, writing value of type 'Nite.API.Data.Models.UserDTO'.
2023-05-04 14:55:28.1671|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Executed action Nite.API.Controllers.LoginController.Login (Nite.API) in 2251.9733ms
2023-05-04 14:55:28.1675|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executed endpoint 'Nite.API.Controllers.LoginController.Login (Nite.API)'
2023-05-04 14:55:28.2105|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 POST https://localhost:7053/api/login application/json;+charset=UTF-8 102 - 200 185 application/json;+charset=utf-8 2393.7569ms
2023-05-04 14:55:28.8547|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7053/api/users - -
2023-05-04 14:55:28.8547|INFO|Microsoft.AspNetCore.Cors.Infrastructure.CorsService|CORS policy execution successful.
2023-05-04 14:55:28.8547|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executing endpoint 'Nite.API.Controllers.UsersController.GetUsers (Nite.API)'
2023-05-04 14:55:28.8547|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Route matched with {action = "GetUsers", controller = "Users"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetUsers() on controller Nite.API.Controllers.UsersController (Nite.API).
2023-05-04 14:55:29.0172|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (6ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
2023-05-04 14:55:29.0293|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (7ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
2023-05-04 14:55:29.0439|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (7ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [u].[Id], [u].[Birthdate], [u].[Email], [u].[Gender], [u].[IsAdmin], [u].[Password], [u].[Username]
FROM [Users] AS [u]
2023-05-04 14:55:29.0708|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ObjectResultExecutor|Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Nite.API.Data.Models.UserDTO, Nite.API, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2023-05-04 14:55:29.0952|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Executed action Nite.API.Controllers.UsersController.GetUsers (Nite.API) in 234.3187ms
2023-05-04 14:55:29.0952|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executed endpoint 'Nite.API.Controllers.UsersController.GetUsers (Nite.API)'
2023-05-04 14:55:29.0952|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7053/api/users - - - 200 737 application/json;+charset=utf-8 240.9167ms
2023-05-04 14:56:49.4494|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7053/api/users - -
2023-05-04 14:56:49.4494|INFO|Microsoft.AspNetCore.Cors.Infrastructure.CorsService|CORS policy execution successful.
2023-05-04 14:56:49.4494|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executing endpoint 'Nite.API.Controllers.UsersController.GetUsers (Nite.API)'
2023-05-04 14:56:49.4494|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Route matched with {action = "GetUsers", controller = "Users"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetUsers() on controller Nite.API.Controllers.UsersController (Nite.API).
2023-05-04 14:56:49.4826|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (18ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
2023-05-04 14:56:49.5047|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (17ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
2023-05-04 14:56:49.5199|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (8ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [u].[Id], [u].[Birthdate], [u].[Email], [u].[Gender], [u].[IsAdmin], [u].[Password], [u].[Username]
FROM [Users] AS [u]
2023-05-04 14:56:49.5199|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ObjectResultExecutor|Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Nite.API.Data.Models.UserDTO, Nite.API, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2023-05-04 14:56:49.5199|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Executed action Nite.API.Controllers.UsersController.GetUsers (Nite.API) in 70.7161ms
2023-05-04 14:56:49.5199|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executed endpoint 'Nite.API.Controllers.UsersController.GetUsers (Nite.API)'
2023-05-04 14:56:49.5199|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7053/api/users - - - 200 737 application/json;+charset=utf-8 72.1680ms
2023-05-04 14:57:15.4921|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7053/api/users - -
2023-05-04 14:57:15.4921|INFO|Microsoft.AspNetCore.Cors.Infrastructure.CorsService|CORS policy execution successful.
2023-05-04 14:57:15.4986|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executing endpoint 'Nite.API.Controllers.UsersController.GetUsers (Nite.API)'
2023-05-04 14:57:15.4986|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Route matched with {action = "GetUsers", controller = "Users"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetUsers() on controller Nite.API.Controllers.UsersController (Nite.API).
2023-05-04 14:57:15.5315|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (9ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
2023-05-04 14:57:15.5564|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (17ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
2023-05-04 14:57:15.5699|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (9ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [u].[Id], [u].[Birthdate], [u].[Email], [u].[Gender], [u].[IsAdmin], [u].[Password], [u].[Username]
FROM [Users] AS [u]
2023-05-04 14:57:15.5699|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ObjectResultExecutor|Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Nite.API.Data.Models.UserDTO, Nite.API, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2023-05-04 14:57:15.5728|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Executed action Nite.API.Controllers.UsersController.GetUsers (Nite.API) in 73.6166ms
2023-05-04 14:57:15.5728|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executed endpoint 'Nite.API.Controllers.UsersController.GetUsers (Nite.API)'
2023-05-04 14:57:15.5728|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7053/api/users - - - 200 737 application/json;+charset=utf-8 83.6872ms
2023-05-04 14:59:22.8537|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7053/api/users - -
2023-05-04 14:59:22.8537|INFO|Microsoft.AspNetCore.Cors.Infrastructure.CorsService|CORS policy execution successful.
2023-05-04 14:59:22.8537|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executing endpoint 'Nite.API.Controllers.UsersController.GetUsers (Nite.API)'
2023-05-04 14:59:22.8537|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Route matched with {action = "GetUsers", controller = "Users"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetUsers() on controller Nite.API.Controllers.UsersController (Nite.API).
2023-05-04 14:59:22.8668|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (8ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
2023-05-04 14:59:22.8761|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (6ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
2023-05-04 14:59:22.8761|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (4ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [u].[Id], [u].[Birthdate], [u].[Email], [u].[Gender], [u].[IsAdmin], [u].[Password], [u].[Username]
FROM [Users] AS [u]
2023-05-04 14:59:22.8761|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ObjectResultExecutor|Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Nite.API.Data.Models.UserDTO, Nite.API, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2023-05-04 14:59:22.8761|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Executed action Nite.API.Controllers.UsersController.GetUsers (Nite.API) in 29.4042ms
2023-05-04 14:59:22.8761|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executed endpoint 'Nite.API.Controllers.UsersController.GetUsers (Nite.API)'
2023-05-04 14:59:22.8761|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7053/api/users - - - 200 737 application/json;+charset=utf-8 30.5234ms
2023-05-04 14:59:24.2234|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7053/api/users - -
2023-05-04 14:59:24.2234|INFO|Microsoft.AspNetCore.Cors.Infrastructure.CorsService|CORS policy execution successful.
2023-05-04 14:59:24.2234|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executing endpoint 'Nite.API.Controllers.UsersController.GetUsers (Nite.API)'
2023-05-04 14:59:24.2234|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Route matched with {action = "GetUsers", controller = "Users"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetUsers() on controller Nite.API.Controllers.UsersController (Nite.API).
2023-05-04 14:59:24.2402|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (8ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
2023-05-04 14:59:24.2532|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (6ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
2023-05-04 14:59:24.2666|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (6ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [u].[Id], [u].[Birthdate], [u].[Email], [u].[Gender], [u].[IsAdmin], [u].[Password], [u].[Username]
FROM [Users] AS [u]
2023-05-04 14:59:24.2666|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ObjectResultExecutor|Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Nite.API.Data.Models.UserDTO, Nite.API, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2023-05-04 14:59:24.2666|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Executed action Nite.API.Controllers.UsersController.GetUsers (Nite.API) in 43.0135ms
2023-05-04 14:59:24.2666|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executed endpoint 'Nite.API.Controllers.UsersController.GetUsers (Nite.API)'
2023-05-04 14:59:24.2666|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7053/api/users - - - 200 737 application/json;+charset=utf-8 44.6653ms
2023-05-04 15:00:20.2200|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7053/api/users - -
2023-05-04 15:00:20.2200|INFO|Microsoft.AspNetCore.Cors.Infrastructure.CorsService|CORS policy execution successful.
2023-05-04 15:00:20.2200|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executing endpoint 'Nite.API.Controllers.UsersController.GetUsers (Nite.API)'
2023-05-04 15:00:20.2200|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Route matched with {action = "GetUsers", controller = "Users"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetUsers() on controller Nite.API.Controllers.UsersController (Nite.API).
2023-05-04 15:00:20.2649|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (9ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
2023-05-04 15:00:20.2763|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (6ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
2023-05-04 15:00:20.2763|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (6ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [u].[Id], [u].[Birthdate], [u].[Email], [u].[Gender], [u].[IsAdmin], [u].[Password], [u].[Username]
FROM [Users] AS [u]
2023-05-04 15:00:20.2763|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ObjectResultExecutor|Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Nite.API.Data.Models.UserDTO, Nite.API, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2023-05-04 15:00:20.2763|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Executed action Nite.API.Controllers.UsersController.GetUsers (Nite.API) in 68.8377ms
2023-05-04 15:00:20.2763|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executed endpoint 'Nite.API.Controllers.UsersController.GetUsers (Nite.API)'
2023-05-04 15:00:20.2763|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7053/api/users - - - 200 737 application/json;+charset=utf-8 69.9204ms
2023-05-04 15:00:34.0589|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7053/api/users - -
2023-05-04 15:00:34.0589|INFO|Microsoft.AspNetCore.Cors.Infrastructure.CorsService|CORS policy execution successful.
2023-05-04 15:00:34.0589|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executing endpoint 'Nite.API.Controllers.UsersController.GetUsers (Nite.API)'
2023-05-04 15:00:34.0589|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Route matched with {action = "GetUsers", controller = "Users"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetUsers() on controller Nite.API.Controllers.UsersController (Nite.API).
2023-05-04 15:00:34.0732|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (7ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
2023-05-04 15:00:34.0732|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (8ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
2023-05-04 15:00:34.0959|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (6ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [u].[Id], [u].[Birthdate], [u].[Email], [u].[Gender], [u].[IsAdmin], [u].[Password], [u].[Username]
FROM [Users] AS [u]
2023-05-04 15:00:34.0959|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ObjectResultExecutor|Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Nite.API.Data.Models.UserDTO, Nite.API, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2023-05-04 15:00:34.0959|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Executed action Nite.API.Controllers.UsersController.GetUsers (Nite.API) in 37.4251ms
2023-05-04 15:00:34.0959|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executed endpoint 'Nite.API.Controllers.UsersController.GetUsers (Nite.API)'
2023-05-04 15:00:34.0959|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7053/api/users - - - 200 737 application/json;+charset=utf-8 38.9492ms
2023-05-04 15:03:55.8583|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7053/api/users - -
2023-05-04 15:03:55.8583|INFO|Microsoft.AspNetCore.Cors.Infrastructure.CorsService|CORS policy execution successful.
2023-05-04 15:03:55.8583|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executing endpoint 'Nite.API.Controllers.UsersController.GetUsers (Nite.API)'
2023-05-04 15:03:55.8583|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Route matched with {action = "GetUsers", controller = "Users"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetUsers() on controller Nite.API.Controllers.UsersController (Nite.API).
2023-05-04 15:03:56.0144|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (3ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
2023-05-04 15:03:56.0144|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (4ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
2023-05-04 15:03:56.0297|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (3ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [u].[Id], [u].[Birthdate], [u].[Email], [u].[Gender], [u].[IsAdmin], [u].[Password], [u].[Username]
FROM [Users] AS [u]
2023-05-04 15:03:56.0297|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ObjectResultExecutor|Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Nite.API.Data.Models.UserDTO, Nite.API, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2023-05-04 15:03:56.0297|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Executed action Nite.API.Controllers.UsersController.GetUsers (Nite.API) in 164.9615ms
2023-05-04 15:03:56.0297|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executed endpoint 'Nite.API.Controllers.UsersController.GetUsers (Nite.API)'
2023-05-04 15:03:56.0297|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7053/api/users - - - 200 737 application/json;+charset=utf-8 172.8025ms
2023-05-04 15:04:26.8426|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7053/api/users - -
2023-05-04 15:04:26.8426|INFO|Microsoft.AspNetCore.Cors.Infrastructure.CorsService|CORS policy execution successful.
2023-05-04 15:04:26.8426|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executing endpoint 'Nite.API.Controllers.UsersController.GetUsers (Nite.API)'
2023-05-04 15:04:26.8426|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Route matched with {action = "GetUsers", controller = "Users"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetUsers() on controller Nite.API.Controllers.UsersController (Nite.API).
2023-05-04 15:04:26.8648|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (5ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
2023-05-04 15:04:26.8753|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (6ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
2023-05-04 15:04:26.8753|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (5ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [u].[Id], [u].[Birthdate], [u].[Email], [u].[Gender], [u].[IsAdmin], [u].[Password], [u].[Username]
FROM [Users] AS [u]
2023-05-04 15:04:26.8856|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ObjectResultExecutor|Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Nite.API.Data.Models.UserDTO, Nite.API, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2023-05-04 15:04:26.8856|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Executed action Nite.API.Controllers.UsersController.GetUsers (Nite.API) in 37.747ms
2023-05-04 15:04:26.8856|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executed endpoint 'Nite.API.Controllers.UsersController.GetUsers (Nite.API)'
2023-05-04 15:04:26.8856|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7053/api/users - - - 200 737 application/json;+charset=utf-8 44.1314ms
2023-05-04 15:05:08.9959|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7053/api/users - -
2023-05-04 15:05:08.9959|INFO|Microsoft.AspNetCore.Cors.Infrastructure.CorsService|CORS policy execution successful.
2023-05-04 15:05:08.9959|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executing endpoint 'Nite.API.Controllers.UsersController.GetUsers (Nite.API)'
2023-05-04 15:05:08.9959|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Route matched with {action = "GetUsers", controller = "Users"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetUsers() on controller Nite.API.Controllers.UsersController (Nite.API).
2023-05-04 15:05:09.0220|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (9ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
2023-05-04 15:05:09.0346|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (6ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
2023-05-04 15:05:09.0435|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (5ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [u].[Id], [u].[Birthdate], [u].[Email], [u].[Gender], [u].[IsAdmin], [u].[Password], [u].[Username]
FROM [Users] AS [u]
2023-05-04 15:05:09.0435|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ObjectResultExecutor|Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Nite.API.Data.Models.UserDTO, Nite.API, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2023-05-04 15:05:09.0435|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Executed action Nite.API.Controllers.UsersController.GetUsers (Nite.API) in 46.2665ms
2023-05-04 15:05:09.0435|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executed endpoint 'Nite.API.Controllers.UsersController.GetUsers (Nite.API)'
2023-05-04 15:05:09.0435|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7053/api/users - - - 200 737 application/json;+charset=utf-8 49.3133ms
2023-05-04 15:05:18.7477|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7053/api/users - -
2023-05-04 15:05:18.7477|INFO|Microsoft.AspNetCore.Cors.Infrastructure.CorsService|CORS policy execution successful.
2023-05-04 15:05:18.7477|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executing endpoint 'Nite.API.Controllers.UsersController.GetUsers (Nite.API)'
2023-05-04 15:05:18.7477|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Route matched with {action = "GetUsers", controller = "Users"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetUsers() on controller Nite.API.Controllers.UsersController (Nite.API).
2023-05-04 15:05:18.7477|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (6ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
2023-05-04 15:05:18.7701|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (7ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
2023-05-04 15:05:18.7794|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (5ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [u].[Id], [u].[Birthdate], [u].[Email], [u].[Gender], [u].[IsAdmin], [u].[Password], [u].[Username]
FROM [Users] AS [u]
2023-05-04 15:05:18.7794|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ObjectResultExecutor|Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Nite.API.Data.Models.UserDTO, Nite.API, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2023-05-04 15:05:18.7794|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Executed action Nite.API.Controllers.UsersController.GetUsers (Nite.API) in 32.0558ms
2023-05-04 15:05:18.7794|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executed endpoint 'Nite.API.Controllers.UsersController.GetUsers (Nite.API)'
2023-05-04 15:05:18.7794|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7053/api/users - - - 200 737 application/json;+charset=utf-8 33.0549ms
2023-05-04 15:05:57.8977|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7053/api/users - -
2023-05-04 15:05:57.8977|INFO|Microsoft.AspNetCore.Cors.Infrastructure.CorsService|CORS policy execution successful.
2023-05-04 15:05:57.8977|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executing endpoint 'Nite.API.Controllers.UsersController.GetUsers (Nite.API)'
2023-05-04 15:05:57.8977|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Route matched with {action = "GetUsers", controller = "Users"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetUsers() on controller Nite.API.Controllers.UsersController (Nite.API).
2023-05-04 15:05:57.9104|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (6ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
2023-05-04 15:05:57.9222|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (7ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
2023-05-04 15:05:57.9338|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (6ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [u].[Id], [u].[Birthdate], [u].[Email], [u].[Gender], [u].[IsAdmin], [u].[Password], [u].[Username]
FROM [Users] AS [u]
2023-05-04 15:05:57.9338|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ObjectResultExecutor|Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Nite.API.Data.Models.UserDTO, Nite.API, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2023-05-04 15:05:57.9338|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Executed action Nite.API.Controllers.UsersController.GetUsers (Nite.API) in 36.9083ms
2023-05-04 15:05:57.9338|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executed endpoint 'Nite.API.Controllers.UsersController.GetUsers (Nite.API)'
2023-05-04 15:05:57.9338|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7053/api/users - - - 200 737 application/json;+charset=utf-8 37.9021ms
2023-05-04 15:06:05.0829|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7053/api/users - -
2023-05-04 15:06:05.0829|INFO|Microsoft.AspNetCore.Cors.Infrastructure.CorsService|CORS policy execution successful.
2023-05-04 15:06:05.0829|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executing endpoint 'Nite.API.Controllers.UsersController.GetUsers (Nite.API)'
2023-05-04 15:06:05.0829|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Route matched with {action = "GetUsers", controller = "Users"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetUsers() on controller Nite.API.Controllers.UsersController (Nite.API).
2023-05-04 15:06:05.0949|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (5ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
2023-05-04 15:06:05.1072|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (7ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
2023-05-04 15:06:05.1072|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (6ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [u].[Id], [u].[Birthdate], [u].[Email], [u].[Gender], [u].[IsAdmin], [u].[Password], [u].[Username]
FROM [Users] AS [u]
2023-05-04 15:06:05.1072|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ObjectResultExecutor|Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Nite.API.Data.Models.UserDTO, Nite.API, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2023-05-04 15:06:05.1072|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Executed action Nite.API.Controllers.UsersController.GetUsers (Nite.API) in 35.1448ms
2023-05-04 15:06:05.1072|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executed endpoint 'Nite.API.Controllers.UsersController.GetUsers (Nite.API)'
2023-05-04 15:06:05.1196|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7053/api/users - - - 200 737 application/json;+charset=utf-8 36.7449ms
2023-05-04 15:10:09.5534|INFO|Nite.API.Program|Initializing application...
2023-05-04 15:10:17.9074|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (131ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
2023-05-04 15:10:18.0953|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (99ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
2023-05-04 15:10:18.1218|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (9ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
2023-05-04 15:10:18.1565|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (17ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT OBJECT_ID(N'[__EFMigrationsHistory]');
2023-05-04 15:10:18.1685|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (5ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
2023-05-04 15:10:18.1685|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (6ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT OBJECT_ID(N'[__EFMigrationsHistory]');
2023-05-04 15:10:18.2950|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (22ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [MigrationId], [ProductVersion]
FROM [__EFMigrationsHistory]
ORDER BY [MigrationId];
2023-05-04 15:10:18.3798|INFO|Microsoft.EntityFrameworkCore.Migrations|No migrations were applied. The database is already up to date.
2023-05-04 15:10:18.8617|INFO|Microsoft.AspNetCore.DataProtection.KeyManagement.XmlKeyManager|User profile is available. Using 'C:\Users\Andreea\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2023-05-04 15:10:20.1447|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7053/ - -
2023-05-04 15:10:20.3355|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7053/ - - - 404 0 - 197.9166ms
2023-05-04 15:11:07.4015|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7053/api/users - -
2023-05-04 15:11:07.4015|INFO|Microsoft.AspNetCore.Cors.Infrastructure.CorsService|CORS policy execution successful.
2023-05-04 15:11:07.4015|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executing endpoint 'Nite.API.Controllers.UsersController.GetUsers (Nite.API)'
2023-05-04 15:11:07.4675|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Route matched with {action = "GetUsers", controller = "Users"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetUsers() on controller Nite.API.Controllers.UsersController (Nite.API).
2023-05-04 15:11:07.5203|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (6ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
2023-05-04 15:11:07.5299|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (6ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
2023-05-04 15:11:09.0831|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (14ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [u].[Id], [u].[Birthdate], [u].[Email], [u].[Gender], [u].[IsAdmin], [u].[Password], [u].[Username]
FROM [Users] AS [u]
2023-05-04 15:11:09.3127|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ObjectResultExecutor|Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Nite.API.Data.Models.UserDTO, Nite.API, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2023-05-04 15:11:09.6976|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Executed action Nite.API.Controllers.UsersController.GetUsers (Nite.API) in 2219.0423ms
2023-05-04 15:11:09.6976|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executed endpoint 'Nite.API.Controllers.UsersController.GetUsers (Nite.API)'
2023-05-04 15:11:09.7290|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7053/api/users - - - 200 737 application/json;+charset=utf-8 2327.4152ms
2023-05-04 15:18:12.5830|INFO|Nite.API.Program|Initializing application...
2023-05-04 15:18:20.9940|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (139ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
2023-05-04 15:18:21.1896|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (102ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
2023-05-04 15:18:21.2195|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (11ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
2023-05-04 15:18:21.2584|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (21ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT OBJECT_ID(N'[__EFMigrationsHistory]');
2023-05-04 15:18:21.2674|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (4ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
2023-05-04 15:18:21.2674|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (3ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT OBJECT_ID(N'[__EFMigrationsHistory]');
2023-05-04 15:18:21.3691|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (24ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [MigrationId], [ProductVersion]
FROM [__EFMigrationsHistory]
ORDER BY [MigrationId];
2023-05-04 15:18:21.4501|INFO|Microsoft.EntityFrameworkCore.Migrations|No migrations were applied. The database is already up to date.
2023-05-04 15:18:21.9492|INFO|Microsoft.AspNetCore.DataProtection.KeyManagement.XmlKeyManager|User profile is available. Using 'C:\Users\Andreea\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2023-05-04 15:18:24.0727|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7053/ - -
2023-05-04 15:18:24.3230|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7053/ - - - 404 0 - 258.4642ms
2023-05-04 15:19:51.1772|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 OPTIONS https://localhost:7053/api/login - -
2023-05-04 15:19:51.1866|INFO|Microsoft.AspNetCore.Cors.Infrastructure.CorsService|CORS policy execution successful.
2023-05-04 15:19:51.1866|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 OPTIONS https://localhost:7053/api/login - - - 204 - - 16.3795ms
2023-05-04 15:19:51.2053|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 POST https://localhost:7053/api/login application/json;+charset=UTF-8 102
2023-05-04 15:19:51.2053|INFO|Microsoft.AspNetCore.Cors.Infrastructure.CorsService|CORS policy execution successful.
2023-05-04 15:19:51.2053|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executing endpoint 'Nite.API.Controllers.LoginController.Login (Nite.API)'
2023-05-04 15:19:51.2895|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Route matched with {action = "Login", controller = "Login"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult Login(Nite.API.Data.Models.LoginDTO) on controller Nite.API.Controllers.LoginController (Nite.API).
2023-05-04 15:19:51.3330|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (11ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
2023-05-04 15:19:51.3443|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (7ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
2023-05-04 15:19:53.6235|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 POST https://localhost:7053/api/login application/json;+charset=UTF-8 102
2023-05-04 15:19:53.6235|INFO|Microsoft.AspNetCore.Cors.Infrastructure.CorsService|CORS policy execution successful.
2023-05-04 15:19:53.6235|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executing endpoint 'Nite.API.Controllers.LoginController.Login (Nite.API)'
2023-05-04 15:19:53.6235|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Route matched with {action = "Login", controller = "Login"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult Login(Nite.API.Data.Models.LoginDTO) on controller Nite.API.Controllers.LoginController (Nite.API).
2023-05-04 15:19:53.6854|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (23ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [u].[Id], [u].[Birthdate], [u].[Email], [u].[Gender], [u].[IsAdmin], [u].[Password], [u].[Username]
FROM [Users] AS [u]
2023-05-04 15:19:53.8872|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (7ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
2023-05-04 15:19:53.8872|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (8ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
2023-05-04 15:19:53.9117|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (6ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [u].[Id], [u].[Birthdate], [u].[Email], [u].[Gender], [u].[IsAdmin], [u].[Password], [u].[Username]
FROM [Users] AS [u]
2023-05-04 15:19:53.9172|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ObjectResultExecutor|Executing OkObjectResult, writing value of type 'Nite.API.Data.Models.UserDTO'.
2023-05-04 15:19:53.9172|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ObjectResultExecutor|Executing OkObjectResult, writing value of type 'Nite.API.Data.Models.UserDTO'.
2023-05-04 15:19:54.0630|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Executed action Nite.API.Controllers.LoginController.Login (Nite.API) in 2761.6619ms
2023-05-04 15:19:54.0630|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Executed action Nite.API.Controllers.LoginController.Login (Nite.API) in 423.4566ms
2023-05-04 15:19:54.0630|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executed endpoint 'Nite.API.Controllers.LoginController.Login (Nite.API)'
2023-05-04 15:19:54.0630|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executed endpoint 'Nite.API.Controllers.LoginController.Login (Nite.API)'
2023-05-04 15:19:54.0970|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 POST https://localhost:7053/api/login application/json;+charset=UTF-8 102 - 200 185 application/json;+charset=utf-8 473.7619ms
2023-05-04 15:19:54.0970|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 POST https://localhost:7053/api/login application/json;+charset=UTF-8 102 - 200 185 application/json;+charset=utf-8 2891.6950ms
2023-05-04 15:19:54.6052|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7053/api/users - -
2023-05-04 15:19:54.6052|INFO|Microsoft.AspNetCore.Cors.Infrastructure.CorsService|CORS policy execution successful.
2023-05-04 15:19:54.6052|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executing endpoint 'Nite.API.Controllers.UsersController.GetUsers (Nite.API)'
2023-05-04 15:19:54.6052|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Route matched with {action = "GetUsers", controller = "Users"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetUsers() on controller Nite.API.Controllers.UsersController (Nite.API).
2023-05-04 15:19:54.6282|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (8ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
2023-05-04 15:19:54.6410|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (8ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
2023-05-04 15:19:54.6561|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (7ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [u].[Id], [u].[Birthdate], [u].[Email], [u].[Gender], [u].[IsAdmin], [u].[Password], [u].[Username]
FROM [Users] AS [u]
2023-05-04 15:19:54.6817|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ObjectResultExecutor|Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Nite.API.Data.Models.UserDTO, Nite.API, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2023-05-04 15:19:54.7062|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Executed action Nite.API.Controllers.UsersController.GetUsers (Nite.API) in 97.1119ms
2023-05-04 15:19:54.7062|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executed endpoint 'Nite.API.Controllers.UsersController.GetUsers (Nite.API)'
2023-05-04 15:19:54.7062|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7053/api/users - - - 200 737 application/json;+charset=utf-8 101.4422ms
2023-05-04 15:24:33.5480|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7053/api/users - -
2023-05-04 15:24:33.5480|INFO|Microsoft.AspNetCore.Cors.Infrastructure.CorsService|CORS policy execution successful.
2023-05-04 15:24:33.5480|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executing endpoint 'Nite.API.Controllers.UsersController.GetUsers (Nite.API)'
2023-05-04 15:24:33.5480|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Route matched with {action = "GetUsers", controller = "Users"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetUsers() on controller Nite.API.Controllers.UsersController (Nite.API).
2023-05-04 15:24:33.5840|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (27ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
2023-05-04 15:24:33.5993|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (11ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
2023-05-04 15:24:33.6133|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (9ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [u].[Id], [u].[Birthdate], [u].[Email], [u].[Gender], [u].[IsAdmin], [u].[Password], [u].[Username]
FROM [Users] AS [u]
2023-05-04 15:24:33.6133|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ObjectResultExecutor|Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Nite.API.Data.Models.UserDTO, Nite.API, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2023-05-04 15:24:33.6133|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Executed action Nite.API.Controllers.UsersController.GetUsers (Nite.API) in 65.6676ms
2023-05-04 15:24:33.6133|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executed endpoint 'Nite.API.Controllers.UsersController.GetUsers (Nite.API)'
2023-05-04 15:24:33.6133|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7053/api/users - - - 200 737 application/json;+charset=utf-8 67.1422ms
2023-05-04 15:26:19.5730|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7053/api/users - -
2023-05-04 15:26:19.5730|INFO|Microsoft.AspNetCore.Cors.Infrastructure.CorsService|CORS policy execution successful.
2023-05-04 15:26:19.5730|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executing endpoint 'Nite.API.Controllers.UsersController.GetUsers (Nite.API)'
2023-05-04 15:26:19.5730|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Route matched with {action = "GetUsers", controller = "Users"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetUsers() on controller Nite.API.Controllers.UsersController (Nite.API).
2023-05-04 15:26:19.5730|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (6ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
2023-05-04 15:26:19.5952|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (7ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
2023-05-04 15:26:19.5952|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (4ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [u].[Id], [u].[Birthdate], [u].[Email], [u].[Gender], [u].[IsAdmin], [u].[Password], [u].[Username]
FROM [Users] AS [u]
2023-05-04 15:26:19.5952|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ObjectResultExecutor|Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Nite.API.Data.Models.UserDTO, Nite.API, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2023-05-04 15:26:19.6042|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Executed action Nite.API.Controllers.UsersController.GetUsers (Nite.API) in 30.6708ms
2023-05-04 15:26:19.6042|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executed endpoint 'Nite.API.Controllers.UsersController.GetUsers (Nite.API)'
2023-05-04 15:26:19.6042|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7053/api/users - - - 200 737 application/json;+charset=utf-8 31.6404ms
2023-05-04 15:26:54.9711|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7053/api/shows - -
2023-05-04 15:26:54.9711|INFO|Microsoft.AspNetCore.Cors.Infrastructure.CorsService|CORS policy execution successful.
2023-05-04 15:26:54.9711|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executing endpoint 'Nite.API.Controllers.TVShowsController.GetTVShows (Nite.API)'
2023-05-04 15:26:54.9851|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Route matched with {action = "GetTVShows", controller = "TVShows"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetTVShows() on controller Nite.API.Controllers.TVShowsController (Nite.API).
2023-05-04 15:26:54.9966|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (5ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
2023-05-04 15:26:54.9966|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (7ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
2023-05-04 15:26:55.1025|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (64ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [t].[Id], [t].[Audience], [t].[Banner], [t].[Description], [t].[Genre], [t].[Likes], [t].[Logo], [t].[Name], [t].[NewSeason], [t].[Poster], [t].[Seasons], [t].[Status], [t].[Streaming], [t].[Year]
FROM [TVShows] AS [t]
2023-05-04 15:26:55.1846|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ObjectResultExecutor|Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Nite.API.Data.Models.TVShowDTO, Nite.API, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2023-05-04 15:26:55.2103|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Executed action Nite.API.Controllers.TVShowsController.GetTVShows (Nite.API) in 225.0728ms
2023-05-04 15:26:55.2103|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executed endpoint 'Nite.API.Controllers.TVShowsController.GetTVShows (Nite.API)'
2023-05-04 15:26:55.2103|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7053/api/shows - - - 200 1910 application/json;+charset=utf-8 239.8966ms
2023-05-04 15:26:58.5917|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7053/api/users - -
2023-05-04 15:26:58.5917|INFO|Microsoft.AspNetCore.Cors.Infrastructure.CorsService|CORS policy execution successful.
2023-05-04 15:26:58.5917|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executing endpoint 'Nite.API.Controllers.UsersController.GetUsers (Nite.API)'
2023-05-04 15:26:58.5917|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Route matched with {action = "GetUsers", controller = "Users"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetUsers() on controller Nite.API.Controllers.UsersController (Nite.API).
2023-05-04 15:26:58.5917|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (6ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
2023-05-04 15:26:58.6156|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (8ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
2023-05-04 15:26:58.6253|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (5ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [u].[Id], [u].[Birthdate], [u].[Email], [u].[Gender], [u].[IsAdmin], [u].[Password], [u].[Username]
FROM [Users] AS [u]
2023-05-04 15:26:58.6253|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ObjectResultExecutor|Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Nite.API.Data.Models.UserDTO, Nite.API, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2023-05-04 15:26:58.6253|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Executed action Nite.API.Controllers.UsersController.GetUsers (Nite.API) in 33.9507ms
2023-05-04 15:26:58.6253|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executed endpoint 'Nite.API.Controllers.UsersController.GetUsers (Nite.API)'
2023-05-04 15:26:58.6253|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7053/api/users - - - 200 737 application/json;+charset=utf-8 34.7266ms
2023-05-04 15:29:32.3859|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7053/api/users - -
2023-05-04 15:29:32.3859|INFO|Microsoft.AspNetCore.Cors.Infrastructure.CorsService|CORS policy execution successful.
2023-05-04 15:29:32.3859|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executing endpoint 'Nite.API.Controllers.UsersController.GetUsers (Nite.API)'
2023-05-04 15:29:32.3859|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Route matched with {action = "GetUsers", controller = "Users"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetUsers() on controller Nite.API.Controllers.UsersController (Nite.API).
2023-05-04 15:29:32.4281|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (16ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
2023-05-04 15:29:32.4430|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (7ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
2023-05-04 15:29:32.4513|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (4ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [u].[Id], [u].[Birthdate], [u].[Email], [u].[Gender], [u].[IsAdmin], [u].[Password], [u].[Username]
FROM [Users] AS [u]
2023-05-04 15:29:32.4513|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ObjectResultExecutor|Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Nite.API.Data.Models.UserDTO, Nite.API, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2023-05-04 15:29:32.4513|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Executed action Nite.API.Controllers.UsersController.GetUsers (Nite.API) in 65.3799ms
2023-05-04 15:29:32.4513|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executed endpoint 'Nite.API.Controllers.UsersController.GetUsers (Nite.API)'
2023-05-04 15:29:32.4513|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7053/api/users - - - 200 737 application/json;+charset=utf-8 66.7002ms
2023-05-04 15:35:15.3682|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 OPTIONS https://localhost:7053/api/users/1 - -
2023-05-04 15:35:15.3800|INFO|Microsoft.AspNetCore.Cors.Infrastructure.CorsService|CORS policy execution successful.
2023-05-04 15:35:15.3800|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 OPTIONS https://localhost:7053/api/users/1 - - - 204 - - 17.5150ms
2023-05-04 15:35:15.3897|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 PUT https://localhost:7053/api/users/1 application/json;+charset=UTF-8 192
2023-05-04 15:35:15.3897|INFO|Microsoft.AspNetCore.Cors.Infrastructure.CorsService|CORS policy execution successful.
2023-05-04 15:35:15.3897|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executing endpoint 'Nite.API.Controllers.UsersController.UpdateUser (Nite.API)'
2023-05-04 15:35:15.4219|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Route matched with {action = "UpdateUser", controller = "Users"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult UpdateUser(Int32, Nite.API.Data.Models.UserUpdateDTO) on controller Nite.API.Controllers.UsersController (Nite.API).
2023-05-04 15:35:15.6039|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (6ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
2023-05-04 15:35:15.6151|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (7ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
2023-05-04 15:35:17.2006|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (511ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Users] AS [u]
        WHERE [u].[Id] = @__userId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-05-04 15:35:17.2681|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (22ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [u].[Id], [u].[Birthdate], [u].[Email], [u].[Gender], [u].[IsAdmin], [u].[Password], [u].[Username]
FROM [Users] AS [u]
WHERE [u].[Id] = @__userId_0
2023-05-04 15:35:17.7169|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (45ms) [Parameters=[@p2='?' (DbType = Int32), @p0='?' (Size = 4000), @p1='?' (Size = 4000)], CommandType='Text', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
UPDATE [Users] SET [Birthdate] = @p0, [Gender] = @p1
OUTPUT 1
WHERE [Id] = @p2;
2023-05-04 15:35:17.7654|INFO|Microsoft.AspNetCore.Mvc.StatusCodeResult|Executing StatusCodeResult, setting HTTP status code 204
2023-05-04 15:35:17.7654|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Executed action Nite.API.Controllers.UsersController.UpdateUser (Nite.API) in 2343.9663ms
2023-05-04 15:35:17.7654|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executed endpoint 'Nite.API.Controllers.UsersController.UpdateUser (Nite.API)'
2023-05-04 15:35:17.7654|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 PUT https://localhost:7053/api/users/1 application/json;+charset=UTF-8 192 - 204 - - 2376.7979ms
2023-05-04 15:35:18.4265|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7053/api/users - -
2023-05-04 15:35:18.4265|INFO|Microsoft.AspNetCore.Cors.Infrastructure.CorsService|CORS policy execution successful.
2023-05-04 15:35:18.4265|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executing endpoint 'Nite.API.Controllers.UsersController.GetUsers (Nite.API)'
2023-05-04 15:35:18.4265|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Route matched with {action = "GetUsers", controller = "Users"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetUsers() on controller Nite.API.Controllers.UsersController (Nite.API).
2023-05-04 15:35:18.4376|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (5ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
2023-05-04 15:35:18.4376|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (4ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
2023-05-04 15:35:18.4542|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (5ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [u].[Id], [u].[Birthdate], [u].[Email], [u].[Gender], [u].[IsAdmin], [u].[Password], [u].[Username]
FROM [Users] AS [u]
2023-05-04 15:35:18.4542|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ObjectResultExecutor|Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Nite.API.Data.Models.UserDTO, Nite.API, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2023-05-04 15:35:18.4542|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Executed action Nite.API.Controllers.UsersController.GetUsers (Nite.API) in 27.8844ms
2023-05-04 15:35:18.4542|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executed endpoint 'Nite.API.Controllers.UsersController.GetUsers (Nite.API)'
2023-05-04 15:35:18.4542|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7053/api/users - - - 200 749 application/json;+charset=utf-8 28.7075ms
2023-05-04 15:35:36.3799|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 OPTIONS https://localhost:7053/api/users/2 - -
2023-05-04 15:35:36.3799|INFO|Microsoft.AspNetCore.Cors.Infrastructure.CorsService|CORS policy execution successful.
2023-05-04 15:35:36.3799|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 OPTIONS https://localhost:7053/api/users/2 - - - 204 - - 1.9554ms
2023-05-04 15:35:36.3902|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 PUT https://localhost:7053/api/users/2 application/json;+charset=UTF-8 194
2023-05-04 15:35:36.3902|INFO|Microsoft.AspNetCore.Cors.Infrastructure.CorsService|CORS policy execution successful.
2023-05-04 15:35:36.3902|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executing endpoint 'Nite.API.Controllers.UsersController.UpdateUser (Nite.API)'
2023-05-04 15:35:36.3902|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Route matched with {action = "UpdateUser", controller = "Users"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult UpdateUser(Int32, Nite.API.Data.Models.UserUpdateDTO) on controller Nite.API.Controllers.UsersController (Nite.API).
2023-05-04 15:35:36.4041|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (6ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
2023-05-04 15:35:36.4165|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (8ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
2023-05-04 15:35:36.4367|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (4ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Users] AS [u]
        WHERE [u].[Id] = @__userId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-05-04 15:35:36.4367|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (6ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [u].[Id], [u].[Birthdate], [u].[Email], [u].[Gender], [u].[IsAdmin], [u].[Password], [u].[Username]
FROM [Users] AS [u]
WHERE [u].[Id] = @__userId_0
2023-05-04 15:35:36.4663|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (13ms) [Parameters=[@p2='?' (DbType = Int32), @p0='?' (Size = 4000), @p1='?' (Size = 4000)], CommandType='Text', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
UPDATE [Users] SET [Birthdate] = @p0, [Gender] = @p1
OUTPUT 1
WHERE [Id] = @p2;
2023-05-04 15:35:36.4663|INFO|Microsoft.AspNetCore.Mvc.StatusCodeResult|Executing StatusCodeResult, setting HTTP status code 204
2023-05-04 15:35:36.4663|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Executed action Nite.API.Controllers.UsersController.UpdateUser (Nite.API) in 75.8692ms
2023-05-04 15:35:36.4663|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executed endpoint 'Nite.API.Controllers.UsersController.UpdateUser (Nite.API)'
2023-05-04 15:35:36.4663|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 PUT https://localhost:7053/api/users/2 application/json;+charset=UTF-8 194 - 204 - - 77.4033ms
2023-05-04 15:35:37.2148|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7053/api/users - -
2023-05-04 15:35:37.2148|INFO|Microsoft.AspNetCore.Cors.Infrastructure.CorsService|CORS policy execution successful.
2023-05-04 15:35:37.2148|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executing endpoint 'Nite.API.Controllers.UsersController.GetUsers (Nite.API)'
2023-05-04 15:35:37.2148|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Route matched with {action = "GetUsers", controller = "Users"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetUsers() on controller Nite.API.Controllers.UsersController (Nite.API).
2023-05-04 15:35:37.2148|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (6ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
2023-05-04 15:35:37.2423|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (9ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
2023-05-04 15:35:37.2536|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (7ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [u].[Id], [u].[Birthdate], [u].[Email], [u].[Gender], [u].[IsAdmin], [u].[Password], [u].[Username]
FROM [Users] AS [u]
2023-05-04 15:35:37.2536|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ObjectResultExecutor|Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Nite.API.Data.Models.UserDTO, Nite.API, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2023-05-04 15:35:37.2536|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Executed action Nite.API.Controllers.UsersController.GetUsers (Nite.API) in 40.0344ms
2023-05-04 15:35:37.2536|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executed endpoint 'Nite.API.Controllers.UsersController.GetUsers (Nite.API)'
2023-05-04 15:35:37.2536|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7053/api/users - - - 200 761 application/json;+charset=utf-8 40.9781ms
2023-05-04 15:35:48.3321|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 OPTIONS https://localhost:7053/api/users/3 - -
2023-05-04 15:35:48.3321|INFO|Microsoft.AspNetCore.Cors.Infrastructure.CorsService|CORS policy execution successful.
2023-05-04 15:35:48.3321|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 OPTIONS https://localhost:7053/api/users/3 - - - 204 - - 1.1648ms
2023-05-04 15:35:48.3321|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 PUT https://localhost:7053/api/users/3 application/json;+charset=UTF-8 185
2023-05-04 15:35:48.3321|INFO|Microsoft.AspNetCore.Cors.Infrastructure.CorsService|CORS policy execution successful.
2023-05-04 15:35:48.3321|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executing endpoint 'Nite.API.Controllers.UsersController.UpdateUser (Nite.API)'
2023-05-04 15:35:48.3321|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Route matched with {action = "UpdateUser", controller = "Users"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult UpdateUser(Int32, Nite.API.Data.Models.UserUpdateDTO) on controller Nite.API.Controllers.UsersController (Nite.API).
2023-05-04 15:35:48.3490|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (5ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
2023-05-04 15:35:48.3612|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (8ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
2023-05-04 15:35:48.3733|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (5ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Users] AS [u]
        WHERE [u].[Id] = @__userId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-05-04 15:35:48.3733|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (6ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [u].[Id], [u].[Birthdate], [u].[Email], [u].[Gender], [u].[IsAdmin], [u].[Password], [u].[Username]
FROM [Users] AS [u]
WHERE [u].[Id] = @__userId_0
2023-05-04 15:35:48.4006|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (10ms) [Parameters=[@p2='?' (DbType = Int32), @p0='?' (Size = 4000), @p1='?' (Size = 4000)], CommandType='Text', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
UPDATE [Users] SET [Birthdate] = @p0, [Gender] = @p1
OUTPUT 1
WHERE [Id] = @p2;
2023-05-04 15:35:48.4020|INFO|Microsoft.AspNetCore.Mvc.StatusCodeResult|Executing StatusCodeResult, setting HTTP status code 204
2023-05-04 15:35:48.4020|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Executed action Nite.API.Controllers.UsersController.UpdateUser (Nite.API) in 63.9019ms
2023-05-04 15:35:48.4020|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executed endpoint 'Nite.API.Controllers.UsersController.UpdateUser (Nite.API)'
2023-05-04 15:35:48.4020|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 PUT https://localhost:7053/api/users/3 application/json;+charset=UTF-8 185 - 204 - - 64.9892ms
2023-05-04 15:35:48.7313|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7053/api/users - -
2023-05-04 15:35:48.7313|INFO|Microsoft.AspNetCore.Cors.Infrastructure.CorsService|CORS policy execution successful.
2023-05-04 15:35:48.7313|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executing endpoint 'Nite.API.Controllers.UsersController.GetUsers (Nite.API)'
2023-05-04 15:35:48.7313|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Route matched with {action = "GetUsers", controller = "Users"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetUsers() on controller Nite.API.Controllers.UsersController (Nite.API).
2023-05-04 15:35:48.7529|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (7ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
2023-05-04 15:35:48.7646|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (7ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
2023-05-04 15:35:48.7646|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (5ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [u].[Id], [u].[Birthdate], [u].[Email], [u].[Gender], [u].[IsAdmin], [u].[Password], [u].[Username]
FROM [Users] AS [u]
2023-05-04 15:35:48.7646|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ObjectResultExecutor|Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Nite.API.Data.Models.UserDTO, Nite.API, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2023-05-04 15:35:48.7646|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Executed action Nite.API.Controllers.UsersController.GetUsers (Nite.API) in 41.7941ms
2023-05-04 15:35:48.7757|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executed endpoint 'Nite.API.Controllers.UsersController.GetUsers (Nite.API)'
2023-05-04 15:35:48.7757|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7053/api/users - - - 200 771 application/json;+charset=utf-8 44.6207ms
2023-05-04 15:36:03.5912|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 OPTIONS https://localhost:7053/api/users/4 - -
2023-05-04 15:36:03.5912|INFO|Microsoft.AspNetCore.Cors.Infrastructure.CorsService|CORS policy execution successful.
2023-05-04 15:36:03.5912|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 OPTIONS https://localhost:7053/api/users/4 - - - 204 - - 1.3872ms
2023-05-04 15:36:03.6045|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 PUT https://localhost:7053/api/users/4 application/json;+charset=UTF-8 186
2023-05-04 15:36:03.6045|INFO|Microsoft.AspNetCore.Cors.Infrastructure.CorsService|CORS policy execution successful.
2023-05-04 15:36:03.6045|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executing endpoint 'Nite.API.Controllers.UsersController.UpdateUser (Nite.API)'
2023-05-04 15:36:03.6045|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Route matched with {action = "UpdateUser", controller = "Users"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult UpdateUser(Int32, Nite.API.Data.Models.UserUpdateDTO) on controller Nite.API.Controllers.UsersController (Nite.API).
2023-05-04 15:36:03.6045|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (6ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
2023-05-04 15:36:03.6314|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (8ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
2023-05-04 15:36:03.6427|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (5ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Users] AS [u]
        WHERE [u].[Id] = @__userId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-05-04 15:36:03.6532|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (5ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [u].[Id], [u].[Birthdate], [u].[Email], [u].[Gender], [u].[IsAdmin], [u].[Password], [u].[Username]
FROM [Users] AS [u]
WHERE [u].[Id] = @__userId_0
2023-05-04 15:36:03.6694|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (11ms) [Parameters=[@p2='?' (DbType = Int32), @p0='?' (Size = 4000), @p1='?' (Size = 4000)], CommandType='Text', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
UPDATE [Users] SET [Birthdate] = @p0, [Gender] = @p1
OUTPUT 1
WHERE [Id] = @p2;
2023-05-04 15:36:03.6694|INFO|Microsoft.AspNetCore.Mvc.StatusCodeResult|Executing StatusCodeResult, setting HTTP status code 204
2023-05-04 15:36:03.6694|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Executed action Nite.API.Controllers.UsersController.UpdateUser (Nite.API) in 64.7191ms
2023-05-04 15:36:03.6694|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executed endpoint 'Nite.API.Controllers.UsersController.UpdateUser (Nite.API)'
2023-05-04 15:36:03.6694|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 PUT https://localhost:7053/api/users/4 application/json;+charset=UTF-8 186 - 204 - - 65.8533ms
2023-05-04 15:36:04.0708|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7053/api/users - -
2023-05-04 15:36:04.0708|INFO|Microsoft.AspNetCore.Cors.Infrastructure.CorsService|CORS policy execution successful.
2023-05-04 15:36:04.0708|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executing endpoint 'Nite.API.Controllers.UsersController.GetUsers (Nite.API)'
2023-05-04 15:36:04.0708|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Route matched with {action = "GetUsers", controller = "Users"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetUsers() on controller Nite.API.Controllers.UsersController (Nite.API).
2023-05-04 15:36:04.0853|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (6ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
2023-05-04 15:36:04.0972|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (5ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
2023-05-04 15:36:04.1059|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (5ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [u].[Id], [u].[Birthdate], [u].[Email], [u].[Gender], [u].[IsAdmin], [u].[Password], [u].[Username]
FROM [Users] AS [u]
2023-05-04 15:36:04.1059|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ObjectResultExecutor|Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Nite.API.Data.Models.UserDTO, Nite.API, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2023-05-04 15:36:04.1059|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Executed action Nite.API.Controllers.UsersController.GetUsers (Nite.API) in 34.9125ms
2023-05-04 15:36:04.1059|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executed endpoint 'Nite.API.Controllers.UsersController.GetUsers (Nite.API)'
2023-05-04 15:36:04.1059|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7053/api/users - - - 200 782 application/json;+charset=utf-8 36.2458ms
2023-05-04 15:37:58.3274|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7053/api/shows - -
2023-05-04 15:37:58.3274|INFO|Microsoft.AspNetCore.Cors.Infrastructure.CorsService|CORS policy execution successful.
2023-05-04 15:37:58.3274|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executing endpoint 'Nite.API.Controllers.TVShowsController.GetTVShows (Nite.API)'
2023-05-04 15:37:58.3274|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Route matched with {action = "GetTVShows", controller = "TVShows"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetTVShows() on controller Nite.API.Controllers.TVShowsController (Nite.API).
2023-05-04 15:37:58.3492|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (7ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
2023-05-04 15:37:58.3621|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (8ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
2023-05-04 15:37:58.3788|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (8ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [t].[Id], [t].[Audience], [t].[Banner], [t].[Description], [t].[Genre], [t].[Likes], [t].[Logo], [t].[Name], [t].[NewSeason], [t].[Poster], [t].[Seasons], [t].[Status], [t].[Streaming], [t].[Year]
FROM [TVShows] AS [t]
2023-05-04 15:37:58.3788|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ObjectResultExecutor|Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Nite.API.Data.Models.TVShowDTO, Nite.API, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2023-05-04 15:37:58.3788|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Executed action Nite.API.Controllers.TVShowsController.GetTVShows (Nite.API) in 46.3713ms
2023-05-04 15:37:58.3788|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executed endpoint 'Nite.API.Controllers.TVShowsController.GetTVShows (Nite.API)'
2023-05-04 15:37:58.3788|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7053/api/shows - - - 200 1910 application/json;+charset=utf-8 53.3587ms
2023-05-04 15:40:02.2607|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7053/api/shows - -
2023-05-04 15:40:02.2607|INFO|Microsoft.AspNetCore.Cors.Infrastructure.CorsService|CORS policy execution successful.
2023-05-04 15:40:02.2607|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executing endpoint 'Nite.API.Controllers.TVShowsController.GetTVShows (Nite.API)'
2023-05-04 15:40:02.2607|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Route matched with {action = "GetTVShows", controller = "TVShows"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetTVShows() on controller Nite.API.Controllers.TVShowsController (Nite.API).
2023-05-04 15:40:02.2830|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (5ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
2023-05-04 15:40:02.2830|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (5ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
2023-05-04 15:40:02.3029|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (5ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [t].[Id], [t].[Audience], [t].[Banner], [t].[Description], [t].[Genre], [t].[Likes], [t].[Logo], [t].[Name], [t].[NewSeason], [t].[Poster], [t].[Seasons], [t].[Status], [t].[Streaming], [t].[Year]
FROM [TVShows] AS [t]
2023-05-04 15:40:02.3029|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ObjectResultExecutor|Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Nite.API.Data.Models.TVShowDTO, Nite.API, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2023-05-04 15:40:02.3029|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Executed action Nite.API.Controllers.TVShowsController.GetTVShows (Nite.API) in 41.7206ms
2023-05-04 15:40:02.3029|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executed endpoint 'Nite.API.Controllers.TVShowsController.GetTVShows (Nite.API)'
2023-05-04 15:40:02.3029|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7053/api/shows - - - 200 1910 application/json;+charset=utf-8 43.9869ms
2023-05-04 15:40:47.6889|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7053/api/shows - -
2023-05-04 15:40:47.6889|INFO|Microsoft.AspNetCore.Cors.Infrastructure.CorsService|CORS policy execution successful.
2023-05-04 15:40:47.6889|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executing endpoint 'Nite.API.Controllers.TVShowsController.GetTVShows (Nite.API)'
2023-05-04 15:40:47.6889|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Route matched with {action = "GetTVShows", controller = "TVShows"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetTVShows() on controller Nite.API.Controllers.TVShowsController (Nite.API).
2023-05-04 15:40:47.7085|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (4ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
2023-05-04 15:40:47.7204|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (8ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
2023-05-04 15:40:47.7294|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (5ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [t].[Id], [t].[Audience], [t].[Banner], [t].[Description], [t].[Genre], [t].[Likes], [t].[Logo], [t].[Name], [t].[NewSeason], [t].[Poster], [t].[Seasons], [t].[Status], [t].[Streaming], [t].[Year]
FROM [TVShows] AS [t]
2023-05-04 15:40:47.7294|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ObjectResultExecutor|Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Nite.API.Data.Models.TVShowDTO, Nite.API, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2023-05-04 15:40:47.7294|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Executed action Nite.API.Controllers.TVShowsController.GetTVShows (Nite.API) in 40.728ms
2023-05-04 15:40:47.7294|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executed endpoint 'Nite.API.Controllers.TVShowsController.GetTVShows (Nite.API)'
2023-05-04 15:40:47.7294|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7053/api/shows - - - 200 1910 application/json;+charset=utf-8 41.8448ms
2023-05-04 15:41:18.9967|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7053/api/shows - -
2023-05-04 15:41:18.9967|INFO|Microsoft.AspNetCore.Cors.Infrastructure.CorsService|CORS policy execution successful.
2023-05-04 15:41:18.9967|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executing endpoint 'Nite.API.Controllers.TVShowsController.GetTVShows (Nite.API)'
2023-05-04 15:41:18.9967|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Route matched with {action = "GetTVShows", controller = "TVShows"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetTVShows() on controller Nite.API.Controllers.TVShowsController (Nite.API).
2023-05-04 15:41:19.0174|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (5ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
2023-05-04 15:41:19.0311|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (8ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
2023-05-04 15:41:19.0420|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (6ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [t].[Id], [t].[Audience], [t].[Banner], [t].[Description], [t].[Genre], [t].[Likes], [t].[Logo], [t].[Name], [t].[NewSeason], [t].[Poster], [t].[Seasons], [t].[Status], [t].[Streaming], [t].[Year]
FROM [TVShows] AS [t]
2023-05-04 15:41:19.0420|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ObjectResultExecutor|Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Nite.API.Data.Models.TVShowDTO, Nite.API, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2023-05-04 15:41:19.0420|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Executed action Nite.API.Controllers.TVShowsController.GetTVShows (Nite.API) in 44.5988ms
2023-05-04 15:41:19.0420|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executed endpoint 'Nite.API.Controllers.TVShowsController.GetTVShows (Nite.API)'
2023-05-04 15:41:19.0420|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7053/api/shows - - - 200 1910 application/json;+charset=utf-8 47.7390ms
2023-05-04 15:41:32.4627|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7053/api/shows - -
2023-05-04 15:41:32.4627|INFO|Microsoft.AspNetCore.Cors.Infrastructure.CorsService|CORS policy execution successful.
2023-05-04 15:41:32.4627|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executing endpoint 'Nite.API.Controllers.TVShowsController.GetTVShows (Nite.API)'
2023-05-04 15:41:32.4627|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Route matched with {action = "GetTVShows", controller = "TVShows"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetTVShows() on controller Nite.API.Controllers.TVShowsController (Nite.API).
2023-05-04 15:41:32.4757|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (5ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
2023-05-04 15:41:32.4879|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (7ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
2023-05-04 15:41:32.4982|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (5ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [t].[Id], [t].[Audience], [t].[Banner], [t].[Description], [t].[Genre], [t].[Likes], [t].[Logo], [t].[Name], [t].[NewSeason], [t].[Poster], [t].[Seasons], [t].[Status], [t].[Streaming], [t].[Year]
FROM [TVShows] AS [t]
2023-05-04 15:41:32.4982|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ObjectResultExecutor|Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Nite.API.Data.Models.TVShowDTO, Nite.API, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2023-05-04 15:41:32.4982|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Executed action Nite.API.Controllers.TVShowsController.GetTVShows (Nite.API) in 36.7046ms
2023-05-04 15:41:32.4982|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executed endpoint 'Nite.API.Controllers.TVShowsController.GetTVShows (Nite.API)'
2023-05-04 15:41:32.4982|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7053/api/shows - - - 200 1910 application/json;+charset=utf-8 38.0036ms
2023-05-04 15:41:42.1015|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7053/api/shows - -
2023-05-04 15:41:42.1015|INFO|Microsoft.AspNetCore.Cors.Infrastructure.CorsService|CORS policy execution successful.
2023-05-04 15:41:42.1015|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executing endpoint 'Nite.API.Controllers.TVShowsController.GetTVShows (Nite.API)'
2023-05-04 15:41:42.1015|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Route matched with {action = "GetTVShows", controller = "TVShows"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetTVShows() on controller Nite.API.Controllers.TVShowsController (Nite.API).
2023-05-04 15:41:42.1141|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (6ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
2023-05-04 15:41:42.1259|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (7ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
2023-05-04 15:41:42.1360|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (5ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [t].[Id], [t].[Audience], [t].[Banner], [t].[Description], [t].[Genre], [t].[Likes], [t].[Logo], [t].[Name], [t].[NewSeason], [t].[Poster], [t].[Seasons], [t].[Status], [t].[Streaming], [t].[Year]
FROM [TVShows] AS [t]
2023-05-04 15:41:42.1360|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ObjectResultExecutor|Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Nite.API.Data.Models.TVShowDTO, Nite.API, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2023-05-04 15:41:42.1360|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Executed action Nite.API.Controllers.TVShowsController.GetTVShows (Nite.API) in 35.5569ms
2023-05-04 15:41:42.1360|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executed endpoint 'Nite.API.Controllers.TVShowsController.GetTVShows (Nite.API)'
2023-05-04 15:41:42.1360|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7053/api/shows - - - 200 1910 application/json;+charset=utf-8 36.5508ms
2023-05-04 15:42:07.0111|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7053/api/shows - -
2023-05-04 15:42:07.0111|INFO|Microsoft.AspNetCore.Cors.Infrastructure.CorsService|CORS policy execution successful.
2023-05-04 15:42:07.0111|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executing endpoint 'Nite.API.Controllers.TVShowsController.GetTVShows (Nite.API)'
2023-05-04 15:42:07.0111|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Route matched with {action = "GetTVShows", controller = "TVShows"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetTVShows() on controller Nite.API.Controllers.TVShowsController (Nite.API).
2023-05-04 15:42:07.0284|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (5ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
2023-05-04 15:42:07.0284|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (5ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
2023-05-04 15:42:07.0463|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (4ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [t].[Id], [t].[Audience], [t].[Banner], [t].[Description], [t].[Genre], [t].[Likes], [t].[Logo], [t].[Name], [t].[NewSeason], [t].[Poster], [t].[Seasons], [t].[Status], [t].[Streaming], [t].[Year]
FROM [TVShows] AS [t]
2023-05-04 15:42:07.0463|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ObjectResultExecutor|Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Nite.API.Data.Models.TVShowDTO, Nite.API, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2023-05-04 15:42:07.0463|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Executed action Nite.API.Controllers.TVShowsController.GetTVShows (Nite.API) in 35.474ms
2023-05-04 15:42:07.0463|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executed endpoint 'Nite.API.Controllers.TVShowsController.GetTVShows (Nite.API)'
2023-05-04 15:42:07.0463|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7053/api/shows - - - 200 1910 application/json;+charset=utf-8 37.7792ms
2023-05-04 15:42:17.8368|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7053/api/shows - -
2023-05-04 15:42:17.8368|INFO|Microsoft.AspNetCore.Cors.Infrastructure.CorsService|CORS policy execution successful.
2023-05-04 15:42:17.8368|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executing endpoint 'Nite.API.Controllers.TVShowsController.GetTVShows (Nite.API)'
2023-05-04 15:42:17.8368|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Route matched with {action = "GetTVShows", controller = "TVShows"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetTVShows() on controller Nite.API.Controllers.TVShowsController (Nite.API).
2023-05-04 15:42:17.8615|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (8ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
2023-05-04 15:42:17.8744|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (7ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
2023-05-04 15:42:17.8860|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (6ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [t].[Id], [t].[Audience], [t].[Banner], [t].[Description], [t].[Genre], [t].[Likes], [t].[Logo], [t].[Name], [t].[NewSeason], [t].[Poster], [t].[Seasons], [t].[Status], [t].[Streaming], [t].[Year]
FROM [TVShows] AS [t]
2023-05-04 15:42:17.8860|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ObjectResultExecutor|Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Nite.API.Data.Models.TVShowDTO, Nite.API, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2023-05-04 15:42:17.8860|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Executed action Nite.API.Controllers.TVShowsController.GetTVShows (Nite.API) in 49.3572ms
2023-05-04 15:42:17.8860|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executed endpoint 'Nite.API.Controllers.TVShowsController.GetTVShows (Nite.API)'
2023-05-04 15:42:17.8860|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7053/api/shows - - - 200 1910 application/json;+charset=utf-8 50.5865ms
2023-05-04 15:42:18.5862|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7053/api/shows - -
2023-05-04 15:42:18.5862|INFO|Microsoft.AspNetCore.Cors.Infrastructure.CorsService|CORS policy execution successful.
2023-05-04 15:42:18.5862|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executing endpoint 'Nite.API.Controllers.TVShowsController.GetTVShows (Nite.API)'
2023-05-04 15:42:18.5862|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Route matched with {action = "GetTVShows", controller = "TVShows"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetTVShows() on controller Nite.API.Controllers.TVShowsController (Nite.API).
2023-05-04 15:42:18.5986|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (5ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
2023-05-04 15:42:18.6098|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (7ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
2023-05-04 15:42:18.6098|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (5ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [t].[Id], [t].[Audience], [t].[Banner], [t].[Description], [t].[Genre], [t].[Likes], [t].[Logo], [t].[Name], [t].[NewSeason], [t].[Poster], [t].[Seasons], [t].[Status], [t].[Streaming], [t].[Year]
FROM [TVShows] AS [t]
2023-05-04 15:42:18.6098|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ObjectResultExecutor|Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Nite.API.Data.Models.TVShowDTO, Nite.API, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2023-05-04 15:42:18.6203|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Executed action Nite.API.Controllers.TVShowsController.GetTVShows (Nite.API) in 32.1721ms
2023-05-04 15:42:18.6203|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executed endpoint 'Nite.API.Controllers.TVShowsController.GetTVShows (Nite.API)'
2023-05-04 15:42:18.6203|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7053/api/shows - - - 200 1910 application/json;+charset=utf-8 34.5679ms
2023-05-04 15:43:15.0986|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7053/api/shows - -
2023-05-04 15:43:15.0986|INFO|Microsoft.AspNetCore.Cors.Infrastructure.CorsService|CORS policy execution successful.
2023-05-04 15:43:15.0986|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executing endpoint 'Nite.API.Controllers.TVShowsController.GetTVShows (Nite.API)'
2023-05-04 15:43:15.0986|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Route matched with {action = "GetTVShows", controller = "TVShows"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetTVShows() on controller Nite.API.Controllers.TVShowsController (Nite.API).
2023-05-04 15:43:15.1232|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (6ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
2023-05-04 15:43:15.1369|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (9ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
2023-05-04 15:43:15.1369|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (5ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [t].[Id], [t].[Audience], [t].[Banner], [t].[Description], [t].[Genre], [t].[Likes], [t].[Logo], [t].[Name], [t].[NewSeason], [t].[Poster], [t].[Seasons], [t].[Status], [t].[Streaming], [t].[Year]
FROM [TVShows] AS [t]
2023-05-04 15:43:15.1369|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ObjectResultExecutor|Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Nite.API.Data.Models.TVShowDTO, Nite.API, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2023-05-04 15:43:15.1369|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Executed action Nite.API.Controllers.TVShowsController.GetTVShows (Nite.API) in 47.0117ms
2023-05-04 15:43:15.1369|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executed endpoint 'Nite.API.Controllers.TVShowsController.GetTVShows (Nite.API)'
2023-05-04 15:43:15.1369|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7053/api/shows - - - 200 1910 application/json;+charset=utf-8 50.7644ms
2023-05-04 15:44:06.0065|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7053/api/shows - -
2023-05-04 15:44:06.0159|INFO|Microsoft.AspNetCore.Cors.Infrastructure.CorsService|CORS policy execution successful.
2023-05-04 15:44:06.0159|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executing endpoint 'Nite.API.Controllers.TVShowsController.GetTVShows (Nite.API)'
2023-05-04 15:44:06.0159|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Route matched with {action = "GetTVShows", controller = "TVShows"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetTVShows() on controller Nite.API.Controllers.TVShowsController (Nite.API).
2023-05-04 15:44:06.0712|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (6ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
2023-05-04 15:44:06.0829|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (7ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
2023-05-04 15:44:06.0930|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (5ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [t].[Id], [t].[Audience], [t].[Banner], [t].[Description], [t].[Genre], [t].[Likes], [t].[Logo], [t].[Name], [t].[NewSeason], [t].[Poster], [t].[Seasons], [t].[Status], [t].[Streaming], [t].[Year]
FROM [TVShows] AS [t]
2023-05-04 15:44:06.0930|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ObjectResultExecutor|Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Nite.API.Data.Models.TVShowDTO, Nite.API, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2023-05-04 15:44:06.0930|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Executed action Nite.API.Controllers.TVShowsController.GetTVShows (Nite.API) in 78.6761ms
2023-05-04 15:44:06.0930|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executed endpoint 'Nite.API.Controllers.TVShowsController.GetTVShows (Nite.API)'
2023-05-04 15:44:06.0930|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7053/api/shows - - - 200 1910 application/json;+charset=utf-8 88.9454ms
2023-05-04 15:44:25.5360|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7053/api/shows - -
2023-05-04 15:44:25.5360|INFO|Microsoft.AspNetCore.Cors.Infrastructure.CorsService|CORS policy execution successful.
2023-05-04 15:44:25.5360|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executing endpoint 'Nite.API.Controllers.TVShowsController.GetTVShows (Nite.API)'
2023-05-04 15:44:25.5360|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Route matched with {action = "GetTVShows", controller = "TVShows"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetTVShows() on controller Nite.API.Controllers.TVShowsController (Nite.API).
2023-05-04 15:44:25.5506|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (5ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
2023-05-04 15:44:25.5651|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (8ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
2023-05-04 15:44:25.5766|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (7ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [t].[Id], [t].[Audience], [t].[Banner], [t].[Description], [t].[Genre], [t].[Likes], [t].[Logo], [t].[Name], [t].[NewSeason], [t].[Poster], [t].[Seasons], [t].[Status], [t].[Streaming], [t].[Year]
FROM [TVShows] AS [t]
2023-05-04 15:44:25.5766|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ObjectResultExecutor|Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Nite.API.Data.Models.TVShowDTO, Nite.API, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2023-05-04 15:44:25.5766|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Executed action Nite.API.Controllers.TVShowsController.GetTVShows (Nite.API) in 41.0074ms
2023-05-04 15:44:25.5766|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executed endpoint 'Nite.API.Controllers.TVShowsController.GetTVShows (Nite.API)'
2023-05-04 15:44:25.5766|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7053/api/shows - - - 200 1910 application/json;+charset=utf-8 42.3175ms
2023-05-04 15:44:55.0412|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7053/api/shows - -
2023-05-04 15:44:55.0418|INFO|Microsoft.AspNetCore.Cors.Infrastructure.CorsService|CORS policy execution successful.
2023-05-04 15:44:55.0418|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executing endpoint 'Nite.API.Controllers.TVShowsController.GetTVShows (Nite.API)'
2023-05-04 15:44:55.0418|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Route matched with {action = "GetTVShows", controller = "TVShows"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetTVShows() on controller Nite.API.Controllers.TVShowsController (Nite.API).
2023-05-04 15:44:55.0611|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (7ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
2023-05-04 15:44:55.0733|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (7ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
2023-05-04 15:44:55.0733|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (6ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [t].[Id], [t].[Audience], [t].[Banner], [t].[Description], [t].[Genre], [t].[Likes], [t].[Logo], [t].[Name], [t].[NewSeason], [t].[Poster], [t].[Seasons], [t].[Status], [t].[Streaming], [t].[Year]
FROM [TVShows] AS [t]
2023-05-04 15:44:55.0733|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ObjectResultExecutor|Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Nite.API.Data.Models.TVShowDTO, Nite.API, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2023-05-04 15:44:55.0733|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Executed action Nite.API.Controllers.TVShowsController.GetTVShows (Nite.API) in 39.0802ms
2023-05-04 15:44:55.0733|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executed endpoint 'Nite.API.Controllers.TVShowsController.GetTVShows (Nite.API)'
2023-05-04 15:44:55.0733|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7053/api/shows - - - 200 1910 application/json;+charset=utf-8 47.0956ms
2023-05-04 15:44:59.4120|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7053/api/shows - -
2023-05-04 15:44:59.4120|INFO|Microsoft.AspNetCore.Cors.Infrastructure.CorsService|CORS policy execution successful.
2023-05-04 15:44:59.4120|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executing endpoint 'Nite.API.Controllers.TVShowsController.GetTVShows (Nite.API)'
2023-05-04 15:44:59.4120|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Route matched with {action = "GetTVShows", controller = "TVShows"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetTVShows() on controller Nite.API.Controllers.TVShowsController (Nite.API).
2023-05-04 15:44:59.4253|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (7ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
2023-05-04 15:44:59.4401|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (10ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
2023-05-04 15:44:59.4516|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (7ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [t].[Id], [t].[Audience], [t].[Banner], [t].[Description], [t].[Genre], [t].[Likes], [t].[Logo], [t].[Name], [t].[NewSeason], [t].[Poster], [t].[Seasons], [t].[Status], [t].[Streaming], [t].[Year]
FROM [TVShows] AS [t]
2023-05-04 15:44:59.4516|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ObjectResultExecutor|Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Nite.API.Data.Models.TVShowDTO, Nite.API, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2023-05-04 15:44:59.4516|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Executed action Nite.API.Controllers.TVShowsController.GetTVShows (Nite.API) in 39.7122ms
2023-05-04 15:44:59.4516|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executed endpoint 'Nite.API.Controllers.TVShowsController.GetTVShows (Nite.API)'
2023-05-04 15:44:59.4516|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7053/api/shows - - - 200 1910 application/json;+charset=utf-8 40.9816ms
2023-05-04 15:45:44.4199|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7053/api/shows - -
2023-05-04 15:45:44.4199|INFO|Microsoft.AspNetCore.Cors.Infrastructure.CorsService|CORS policy execution successful.
2023-05-04 15:45:44.4199|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executing endpoint 'Nite.API.Controllers.TVShowsController.GetTVShows (Nite.API)'
2023-05-04 15:45:44.4199|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Route matched with {action = "GetTVShows", controller = "TVShows"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetTVShows() on controller Nite.API.Controllers.TVShowsController (Nite.API).
2023-05-04 15:45:44.4410|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (8ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
2023-05-04 15:45:44.4509|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (6ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
2023-05-04 15:45:44.4509|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (5ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [t].[Id], [t].[Audience], [t].[Banner], [t].[Description], [t].[Genre], [t].[Likes], [t].[Logo], [t].[Name], [t].[NewSeason], [t].[Poster], [t].[Seasons], [t].[Status], [t].[Streaming], [t].[Year]
FROM [TVShows] AS [t]
2023-05-04 15:45:44.4509|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ObjectResultExecutor|Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Nite.API.Data.Models.TVShowDTO, Nite.API, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2023-05-04 15:45:44.4509|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Executed action Nite.API.Controllers.TVShowsController.GetTVShows (Nite.API) in 39.1683ms
2023-05-04 15:45:44.4509|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executed endpoint 'Nite.API.Controllers.TVShowsController.GetTVShows (Nite.API)'
2023-05-04 15:45:44.4509|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7053/api/shows - - - 200 1910 application/json;+charset=utf-8 41.1615ms
2023-05-04 15:46:08.5386|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7053/api/shows - -
2023-05-04 15:46:08.5386|INFO|Microsoft.AspNetCore.Cors.Infrastructure.CorsService|CORS policy execution successful.
2023-05-04 15:46:08.5386|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executing endpoint 'Nite.API.Controllers.TVShowsController.GetTVShows (Nite.API)'
2023-05-04 15:46:08.5386|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Route matched with {action = "GetTVShows", controller = "TVShows"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetTVShows() on controller Nite.API.Controllers.TVShowsController (Nite.API).
2023-05-04 15:46:08.5469|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (4ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
2023-05-04 15:46:08.5469|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (5ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
2023-05-04 15:46:08.5616|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (3ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [t].[Id], [t].[Audience], [t].[Banner], [t].[Description], [t].[Genre], [t].[Likes], [t].[Logo], [t].[Name], [t].[NewSeason], [t].[Poster], [t].[Seasons], [t].[Status], [t].[Streaming], [t].[Year]
FROM [TVShows] AS [t]
2023-05-04 15:46:08.5616|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ObjectResultExecutor|Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Nite.API.Data.Models.TVShowDTO, Nite.API, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2023-05-04 15:46:08.5616|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Executed action Nite.API.Controllers.TVShowsController.GetTVShows (Nite.API) in 23.2902ms
2023-05-04 15:46:08.5616|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executed endpoint 'Nite.API.Controllers.TVShowsController.GetTVShows (Nite.API)'
2023-05-04 15:46:08.5616|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7053/api/shows - - - 200 1910 application/json;+charset=utf-8 24.1444ms
2023-05-04 15:46:16.9863|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7053/api/shows - -
2023-05-04 15:46:16.9863|INFO|Microsoft.AspNetCore.Cors.Infrastructure.CorsService|CORS policy execution successful.
2023-05-04 15:46:16.9863|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executing endpoint 'Nite.API.Controllers.TVShowsController.GetTVShows (Nite.API)'
2023-05-04 15:46:16.9863|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Route matched with {action = "GetTVShows", controller = "TVShows"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetTVShows() on controller Nite.API.Controllers.TVShowsController (Nite.API).
2023-05-04 15:46:16.9994|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (5ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
2023-05-04 15:46:17.0107|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (7ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
2023-05-04 15:46:17.0107|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (6ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [t].[Id], [t].[Audience], [t].[Banner], [t].[Description], [t].[Genre], [t].[Likes], [t].[Logo], [t].[Name], [t].[NewSeason], [t].[Poster], [t].[Seasons], [t].[Status], [t].[Streaming], [t].[Year]
FROM [TVShows] AS [t]
2023-05-04 15:46:17.0107|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ObjectResultExecutor|Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Nite.API.Data.Models.TVShowDTO, Nite.API, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2023-05-04 15:46:17.0107|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Executed action Nite.API.Controllers.TVShowsController.GetTVShows (Nite.API) in 35.1584ms
2023-05-04 15:46:17.0107|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executed endpoint 'Nite.API.Controllers.TVShowsController.GetTVShows (Nite.API)'
2023-05-04 15:46:17.0107|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7053/api/shows - - - 200 1910 application/json;+charset=utf-8 36.8785ms
2023-05-04 15:46:37.7483|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7053/api/shows - -
2023-05-04 15:46:37.7483|INFO|Microsoft.AspNetCore.Cors.Infrastructure.CorsService|CORS policy execution successful.
2023-05-04 15:46:37.7483|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executing endpoint 'Nite.API.Controllers.TVShowsController.GetTVShows (Nite.API)'
2023-05-04 15:46:37.7483|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Route matched with {action = "GetTVShows", controller = "TVShows"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetTVShows() on controller Nite.API.Controllers.TVShowsController (Nite.API).
2023-05-04 15:46:37.7613|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (6ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
2023-05-04 15:46:37.7921|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (25ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
2023-05-04 15:46:37.7921|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (7ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [t].[Id], [t].[Audience], [t].[Banner], [t].[Description], [t].[Genre], [t].[Likes], [t].[Logo], [t].[Name], [t].[NewSeason], [t].[Poster], [t].[Seasons], [t].[Status], [t].[Streaming], [t].[Year]
FROM [TVShows] AS [t]
2023-05-04 15:46:37.8075|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ObjectResultExecutor|Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Nite.API.Data.Models.TVShowDTO, Nite.API, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2023-05-04 15:46:37.8075|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Executed action Nite.API.Controllers.TVShowsController.GetTVShows (Nite.API) in 59.1779ms
2023-05-04 15:46:37.8075|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executed endpoint 'Nite.API.Controllers.TVShowsController.GetTVShows (Nite.API)'
2023-05-04 15:46:37.8075|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7053/api/shows - - - 200 1910 application/json;+charset=utf-8 60.6219ms
2023-05-04 15:46:47.4600|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7053/api/shows - -
2023-05-04 15:46:47.4600|INFO|Microsoft.AspNetCore.Cors.Infrastructure.CorsService|CORS policy execution successful.
2023-05-04 15:46:47.4600|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executing endpoint 'Nite.API.Controllers.TVShowsController.GetTVShows (Nite.API)'
2023-05-04 15:46:47.4600|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Route matched with {action = "GetTVShows", controller = "TVShows"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetTVShows() on controller Nite.API.Controllers.TVShowsController (Nite.API).
2023-05-04 15:46:47.4711|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (5ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
2023-05-04 15:46:47.4809|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (6ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
2023-05-04 15:46:47.4809|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (5ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [t].[Id], [t].[Audience], [t].[Banner], [t].[Description], [t].[Genre], [t].[Likes], [t].[Logo], [t].[Name], [t].[NewSeason], [t].[Poster], [t].[Seasons], [t].[Status], [t].[Streaming], [t].[Year]
FROM [TVShows] AS [t]
2023-05-04 15:46:47.4809|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ObjectResultExecutor|Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Nite.API.Data.Models.TVShowDTO, Nite.API, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2023-05-04 15:46:47.4809|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Executed action Nite.API.Controllers.TVShowsController.GetTVShows (Nite.API) in 29.6387ms
2023-05-04 15:46:47.4809|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executed endpoint 'Nite.API.Controllers.TVShowsController.GetTVShows (Nite.API)'
2023-05-04 15:46:47.4809|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7053/api/shows - - - 200 1910 application/json;+charset=utf-8 30.8453ms
2023-05-04 15:47:03.1666|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7053/api/shows - -
2023-05-04 15:47:03.1666|INFO|Microsoft.AspNetCore.Cors.Infrastructure.CorsService|CORS policy execution successful.
2023-05-04 15:47:03.1666|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executing endpoint 'Nite.API.Controllers.TVShowsController.GetTVShows (Nite.API)'
2023-05-04 15:47:03.1666|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Route matched with {action = "GetTVShows", controller = "TVShows"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetTVShows() on controller Nite.API.Controllers.TVShowsController (Nite.API).
2023-05-04 15:47:03.1744|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (3ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
2023-05-04 15:47:03.1744|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (5ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
2023-05-04 15:47:03.1884|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (3ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [t].[Id], [t].[Audience], [t].[Banner], [t].[Description], [t].[Genre], [t].[Likes], [t].[Logo], [t].[Name], [t].[NewSeason], [t].[Poster], [t].[Seasons], [t].[Status], [t].[Streaming], [t].[Year]
FROM [TVShows] AS [t]
2023-05-04 15:47:03.1884|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ObjectResultExecutor|Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Nite.API.Data.Models.TVShowDTO, Nite.API, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2023-05-04 15:47:03.1884|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Executed action Nite.API.Controllers.TVShowsController.GetTVShows (Nite.API) in 22.125ms
2023-05-04 15:47:03.1884|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executed endpoint 'Nite.API.Controllers.TVShowsController.GetTVShows (Nite.API)'
2023-05-04 15:47:03.1884|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7053/api/shows - - - 200 1910 application/json;+charset=utf-8 22.8850ms
2023-05-04 15:47:24.8986|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7053/api/shows - -
2023-05-04 15:47:24.8986|INFO|Microsoft.AspNetCore.Cors.Infrastructure.CorsService|CORS policy execution successful.
2023-05-04 15:47:24.8986|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executing endpoint 'Nite.API.Controllers.TVShowsController.GetTVShows (Nite.API)'
2023-05-04 15:47:24.8986|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Route matched with {action = "GetTVShows", controller = "TVShows"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetTVShows() on controller Nite.API.Controllers.TVShowsController (Nite.API).
2023-05-04 15:47:24.9331|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (14ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
2023-05-04 15:47:24.9331|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (8ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
2023-05-04 15:47:24.9590|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (8ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [t].[Id], [t].[Audience], [t].[Banner], [t].[Description], [t].[Genre], [t].[Likes], [t].[Logo], [t].[Name], [t].[NewSeason], [t].[Poster], [t].[Seasons], [t].[Status], [t].[Streaming], [t].[Year]
FROM [TVShows] AS [t]
2023-05-04 15:47:24.9590|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ObjectResultExecutor|Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Nite.API.Data.Models.TVShowDTO, Nite.API, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2023-05-04 15:47:24.9590|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Executed action Nite.API.Controllers.TVShowsController.GetTVShows (Nite.API) in 60.3217ms
2023-05-04 15:47:24.9590|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executed endpoint 'Nite.API.Controllers.TVShowsController.GetTVShows (Nite.API)'
2023-05-04 15:47:24.9590|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7053/api/shows - - - 200 1910 application/json;+charset=utf-8 61.6366ms
2023-05-04 15:47:31.2747|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7053/api/shows - -
2023-05-04 15:47:31.2747|INFO|Microsoft.AspNetCore.Cors.Infrastructure.CorsService|CORS policy execution successful.
2023-05-04 15:47:31.2747|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executing endpoint 'Nite.API.Controllers.TVShowsController.GetTVShows (Nite.API)'
2023-05-04 15:47:31.2747|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Route matched with {action = "GetTVShows", controller = "TVShows"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetTVShows() on controller Nite.API.Controllers.TVShowsController (Nite.API).
2023-05-04 15:47:31.3222|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (41ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
2023-05-04 15:47:31.3341|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (8ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
2023-05-04 15:47:31.3444|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (5ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [t].[Id], [t].[Audience], [t].[Banner], [t].[Description], [t].[Genre], [t].[Likes], [t].[Logo], [t].[Name], [t].[NewSeason], [t].[Poster], [t].[Seasons], [t].[Status], [t].[Streaming], [t].[Year]
FROM [TVShows] AS [t]
2023-05-04 15:47:31.3444|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ObjectResultExecutor|Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Nite.API.Data.Models.TVShowDTO, Nite.API, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2023-05-04 15:47:31.3444|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Executed action Nite.API.Controllers.TVShowsController.GetTVShows (Nite.API) in 70.5887ms
2023-05-04 15:47:31.3444|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executed endpoint 'Nite.API.Controllers.TVShowsController.GetTVShows (Nite.API)'
2023-05-04 15:47:31.3444|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7053/api/shows - - - 200 1910 application/json;+charset=utf-8 71.8237ms
2023-05-04 15:47:43.9245|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7053/api/shows - -
2023-05-04 15:47:43.9245|INFO|Microsoft.AspNetCore.Cors.Infrastructure.CorsService|CORS policy execution successful.
2023-05-04 15:47:43.9245|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executing endpoint 'Nite.API.Controllers.TVShowsController.GetTVShows (Nite.API)'
2023-05-04 15:47:43.9245|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Route matched with {action = "GetTVShows", controller = "TVShows"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetTVShows() on controller Nite.API.Controllers.TVShowsController (Nite.API).
2023-05-04 15:47:43.9383|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (6ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
2023-05-04 15:47:43.9507|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (8ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
2023-05-04 15:47:43.9507|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (5ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [t].[Id], [t].[Audience], [t].[Banner], [t].[Description], [t].[Genre], [t].[Likes], [t].[Logo], [t].[Name], [t].[NewSeason], [t].[Poster], [t].[Seasons], [t].[Status], [t].[Streaming], [t].[Year]
FROM [TVShows] AS [t]
2023-05-04 15:47:43.9507|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ObjectResultExecutor|Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Nite.API.Data.Models.TVShowDTO, Nite.API, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2023-05-04 15:47:43.9507|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Executed action Nite.API.Controllers.TVShowsController.GetTVShows (Nite.API) in 36.7705ms
2023-05-04 15:47:43.9507|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executed endpoint 'Nite.API.Controllers.TVShowsController.GetTVShows (Nite.API)'
2023-05-04 15:47:43.9507|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7053/api/shows - - - 200 1910 application/json;+charset=utf-8 38.3310ms
2023-05-04 15:47:58.3150|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7053/api/shows - -
2023-05-04 15:47:58.3150|INFO|Microsoft.AspNetCore.Cors.Infrastructure.CorsService|CORS policy execution successful.
2023-05-04 15:47:58.3150|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executing endpoint 'Nite.API.Controllers.TVShowsController.GetTVShows (Nite.API)'
2023-05-04 15:47:58.3150|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Route matched with {action = "GetTVShows", controller = "TVShows"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetTVShows() on controller Nite.API.Controllers.TVShowsController (Nite.API).
2023-05-04 15:47:58.3273|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (6ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
2023-05-04 15:47:58.3273|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (6ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
2023-05-04 15:47:58.3484|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (5ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [t].[Id], [t].[Audience], [t].[Banner], [t].[Description], [t].[Genre], [t].[Likes], [t].[Logo], [t].[Name], [t].[NewSeason], [t].[Poster], [t].[Seasons], [t].[Status], [t].[Streaming], [t].[Year]
FROM [TVShows] AS [t]
2023-05-04 15:47:58.3484|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ObjectResultExecutor|Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Nite.API.Data.Models.TVShowDTO, Nite.API, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2023-05-04 15:47:58.3484|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Executed action Nite.API.Controllers.TVShowsController.GetTVShows (Nite.API) in 35.0871ms
2023-05-04 15:47:58.3484|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executed endpoint 'Nite.API.Controllers.TVShowsController.GetTVShows (Nite.API)'
2023-05-04 15:47:58.3484|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7053/api/shows - - - 200 1910 application/json;+charset=utf-8 36.7547ms
2023-05-04 15:48:08.1886|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7053/api/shows - -
2023-05-04 15:48:08.1886|INFO|Microsoft.AspNetCore.Cors.Infrastructure.CorsService|CORS policy execution successful.
2023-05-04 15:48:08.1886|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executing endpoint 'Nite.API.Controllers.TVShowsController.GetTVShows (Nite.API)'
2023-05-04 15:48:08.1886|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Route matched with {action = "GetTVShows", controller = "TVShows"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetTVShows() on controller Nite.API.Controllers.TVShowsController (Nite.API).
2023-05-04 15:48:08.1994|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (4ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
2023-05-04 15:48:08.1994|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (6ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
2023-05-04 15:48:08.2163|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (4ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [t].[Id], [t].[Audience], [t].[Banner], [t].[Description], [t].[Genre], [t].[Likes], [t].[Logo], [t].[Name], [t].[NewSeason], [t].[Poster], [t].[Seasons], [t].[Status], [t].[Streaming], [t].[Year]
FROM [TVShows] AS [t]
2023-05-04 15:48:08.2163|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ObjectResultExecutor|Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Nite.API.Data.Models.TVShowDTO, Nite.API, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2023-05-04 15:48:08.2163|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Executed action Nite.API.Controllers.TVShowsController.GetTVShows (Nite.API) in 27.7704ms
2023-05-04 15:48:08.2163|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executed endpoint 'Nite.API.Controllers.TVShowsController.GetTVShows (Nite.API)'
2023-05-04 15:48:08.2163|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7053/api/shows - - - 200 1910 application/json;+charset=utf-8 28.8967ms
2023-05-04 15:48:15.2116|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7053/api/shows - -
2023-05-04 15:48:15.2116|INFO|Microsoft.AspNetCore.Cors.Infrastructure.CorsService|CORS policy execution successful.
2023-05-04 15:48:15.2116|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executing endpoint 'Nite.API.Controllers.TVShowsController.GetTVShows (Nite.API)'
2023-05-04 15:48:15.2116|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Route matched with {action = "GetTVShows", controller = "TVShows"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetTVShows() on controller Nite.API.Controllers.TVShowsController (Nite.API).
2023-05-04 15:48:15.2232|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (5ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
2023-05-04 15:48:15.2341|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (6ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
2023-05-04 15:48:15.2341|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (5ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [t].[Id], [t].[Audience], [t].[Banner], [t].[Description], [t].[Genre], [t].[Likes], [t].[Logo], [t].[Name], [t].[NewSeason], [t].[Poster], [t].[Seasons], [t].[Status], [t].[Streaming], [t].[Year]
FROM [TVShows] AS [t]
2023-05-04 15:48:15.2341|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ObjectResultExecutor|Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Nite.API.Data.Models.TVShowDTO, Nite.API, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2023-05-04 15:48:15.2341|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Executed action Nite.API.Controllers.TVShowsController.GetTVShows (Nite.API) in 31.4509ms
2023-05-04 15:48:15.2341|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executed endpoint 'Nite.API.Controllers.TVShowsController.GetTVShows (Nite.API)'
2023-05-04 15:48:15.2341|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7053/api/shows - - - 200 1910 application/json;+charset=utf-8 32.7781ms
2023-05-04 15:48:23.1217|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7053/api/shows - -
2023-05-04 15:48:23.1217|INFO|Microsoft.AspNetCore.Cors.Infrastructure.CorsService|CORS policy execution successful.
2023-05-04 15:48:23.1217|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executing endpoint 'Nite.API.Controllers.TVShowsController.GetTVShows (Nite.API)'
2023-05-04 15:48:23.1217|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Route matched with {action = "GetTVShows", controller = "TVShows"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetTVShows() on controller Nite.API.Controllers.TVShowsController (Nite.API).
2023-05-04 15:48:23.1217|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (5ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
2023-05-04 15:48:23.1417|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (5ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
2023-05-04 15:48:23.1518|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (4ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [t].[Id], [t].[Audience], [t].[Banner], [t].[Description], [t].[Genre], [t].[Likes], [t].[Logo], [t].[Name], [t].[NewSeason], [t].[Poster], [t].[Seasons], [t].[Status], [t].[Streaming], [t].[Year]
FROM [TVShows] AS [t]
2023-05-04 15:48:23.1518|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ObjectResultExecutor|Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Nite.API.Data.Models.TVShowDTO, Nite.API, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2023-05-04 15:48:23.1518|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Executed action Nite.API.Controllers.TVShowsController.GetTVShows (Nite.API) in 30.1793ms
2023-05-04 15:48:23.1518|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executed endpoint 'Nite.API.Controllers.TVShowsController.GetTVShows (Nite.API)'
2023-05-04 15:48:23.1518|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7053/api/shows - - - 200 1910 application/json;+charset=utf-8 31.6299ms
2023-05-04 15:48:41.5626|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7053/api/shows - -
2023-05-04 15:48:41.5626|INFO|Microsoft.AspNetCore.Cors.Infrastructure.CorsService|CORS policy execution successful.
2023-05-04 15:48:41.5626|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executing endpoint 'Nite.API.Controllers.TVShowsController.GetTVShows (Nite.API)'
2023-05-04 15:48:41.5626|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Route matched with {action = "GetTVShows", controller = "TVShows"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetTVShows() on controller Nite.API.Controllers.TVShowsController (Nite.API).
2023-05-04 15:48:41.5765|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (6ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
2023-05-04 15:48:41.5765|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (6ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
2023-05-04 15:48:41.5962|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (5ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [t].[Id], [t].[Audience], [t].[Banner], [t].[Description], [t].[Genre], [t].[Likes], [t].[Logo], [t].[Name], [t].[NewSeason], [t].[Poster], [t].[Seasons], [t].[Status], [t].[Streaming], [t].[Year]
FROM [TVShows] AS [t]
2023-05-04 15:48:41.5962|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ObjectResultExecutor|Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Nite.API.Data.Models.TVShowDTO, Nite.API, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2023-05-04 15:48:41.5962|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Executed action Nite.API.Controllers.TVShowsController.GetTVShows (Nite.API) in 33.3866ms
2023-05-04 15:48:41.5962|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executed endpoint 'Nite.API.Controllers.TVShowsController.GetTVShows (Nite.API)'
2023-05-04 15:48:41.5962|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7053/api/shows - - - 200 1910 application/json;+charset=utf-8 34.8222ms
2023-05-04 15:48:47.3970|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7053/api/shows - -
2023-05-04 15:48:47.3970|INFO|Microsoft.AspNetCore.Cors.Infrastructure.CorsService|CORS policy execution successful.
2023-05-04 15:48:47.3970|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executing endpoint 'Nite.API.Controllers.TVShowsController.GetTVShows (Nite.API)'
2023-05-04 15:48:47.3970|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Route matched with {action = "GetTVShows", controller = "TVShows"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetTVShows() on controller Nite.API.Controllers.TVShowsController (Nite.API).
2023-05-04 15:48:47.4108|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (7ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
2023-05-04 15:48:47.4232|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (7ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
2023-05-04 15:48:47.4232|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (5ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [t].[Id], [t].[Audience], [t].[Banner], [t].[Description], [t].[Genre], [t].[Likes], [t].[Logo], [t].[Name], [t].[NewSeason], [t].[Poster], [t].[Seasons], [t].[Status], [t].[Streaming], [t].[Year]
FROM [TVShows] AS [t]
2023-05-04 15:48:47.4322|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ObjectResultExecutor|Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Nite.API.Data.Models.TVShowDTO, Nite.API, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2023-05-04 15:48:47.4322|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Executed action Nite.API.Controllers.TVShowsController.GetTVShows (Nite.API) in 34.984ms
2023-05-04 15:48:47.4322|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executed endpoint 'Nite.API.Controllers.TVShowsController.GetTVShows (Nite.API)'
2023-05-04 15:48:47.4322|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7053/api/shows - - - 200 1910 application/json;+charset=utf-8 35.8889ms
2023-05-04 15:48:53.8602|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7053/api/shows - -
2023-05-04 15:48:53.8602|INFO|Microsoft.AspNetCore.Cors.Infrastructure.CorsService|CORS policy execution successful.
2023-05-04 15:48:53.8602|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executing endpoint 'Nite.API.Controllers.TVShowsController.GetTVShows (Nite.API)'
2023-05-04 15:48:53.8602|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Route matched with {action = "GetTVShows", controller = "TVShows"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetTVShows() on controller Nite.API.Controllers.TVShowsController (Nite.API).
2023-05-04 15:48:53.8723|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (5ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
2023-05-04 15:48:53.8723|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (6ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
2023-05-04 15:48:53.8950|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (6ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [t].[Id], [t].[Audience], [t].[Banner], [t].[Description], [t].[Genre], [t].[Likes], [t].[Logo], [t].[Name], [t].[NewSeason], [t].[Poster], [t].[Seasons], [t].[Status], [t].[Streaming], [t].[Year]
FROM [TVShows] AS [t]
2023-05-04 15:48:53.8950|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ObjectResultExecutor|Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Nite.API.Data.Models.TVShowDTO, Nite.API, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2023-05-04 15:48:53.8950|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Executed action Nite.API.Controllers.TVShowsController.GetTVShows (Nite.API) in 34.6341ms
2023-05-04 15:48:53.8950|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executed endpoint 'Nite.API.Controllers.TVShowsController.GetTVShows (Nite.API)'
2023-05-04 15:48:53.8950|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7053/api/shows - - - 200 1910 application/json;+charset=utf-8 36.2015ms
2023-05-04 15:49:20.5188|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7053/api/shows - -
2023-05-04 15:49:20.5188|INFO|Microsoft.AspNetCore.Cors.Infrastructure.CorsService|CORS policy execution successful.
2023-05-04 15:49:20.5188|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executing endpoint 'Nite.API.Controllers.TVShowsController.GetTVShows (Nite.API)'
2023-05-04 15:49:20.5188|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Route matched with {action = "GetTVShows", controller = "TVShows"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetTVShows() on controller Nite.API.Controllers.TVShowsController (Nite.API).
2023-05-04 15:49:20.5423|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (6ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
2023-05-04 15:49:20.5423|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (7ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
2023-05-04 15:49:20.5660|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (6ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [t].[Id], [t].[Audience], [t].[Banner], [t].[Description], [t].[Genre], [t].[Likes], [t].[Logo], [t].[Name], [t].[NewSeason], [t].[Poster], [t].[Seasons], [t].[Status], [t].[Streaming], [t].[Year]
FROM [TVShows] AS [t]
2023-05-04 15:49:20.5660|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ObjectResultExecutor|Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Nite.API.Data.Models.TVShowDTO, Nite.API, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2023-05-04 15:49:20.5660|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Executed action Nite.API.Controllers.TVShowsController.GetTVShows (Nite.API) in 47.9624ms
2023-05-04 15:49:20.5660|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executed endpoint 'Nite.API.Controllers.TVShowsController.GetTVShows (Nite.API)'
2023-05-04 15:49:20.5660|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7053/api/shows - - - 200 1910 application/json;+charset=utf-8 49.0769ms
2023-05-04 15:53:19.5631|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7053/api/shows - -
2023-05-04 15:53:19.5631|INFO|Microsoft.AspNetCore.Cors.Infrastructure.CorsService|CORS policy execution successful.
2023-05-04 15:53:19.5631|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executing endpoint 'Nite.API.Controllers.TVShowsController.GetTVShows (Nite.API)'
2023-05-04 15:53:19.5631|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Route matched with {action = "GetTVShows", controller = "TVShows"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetTVShows() on controller Nite.API.Controllers.TVShowsController (Nite.API).
2023-05-04 15:53:19.5761|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (6ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
2023-05-04 15:53:19.5761|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (7ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
2023-05-04 15:53:19.6010|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (7ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [t].[Id], [t].[Audience], [t].[Banner], [t].[Description], [t].[Genre], [t].[Likes], [t].[Logo], [t].[Name], [t].[NewSeason], [t].[Poster], [t].[Seasons], [t].[Status], [t].[Streaming], [t].[Year]
FROM [TVShows] AS [t]
2023-05-04 15:53:19.6010|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ObjectResultExecutor|Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Nite.API.Data.Models.TVShowDTO, Nite.API, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2023-05-04 15:53:19.6010|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Executed action Nite.API.Controllers.TVShowsController.GetTVShows (Nite.API) in 38.4134ms
2023-05-04 15:53:19.6010|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executed endpoint 'Nite.API.Controllers.TVShowsController.GetTVShows (Nite.API)'
2023-05-04 15:53:19.6010|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7053/api/shows - - - 200 1910 application/json;+charset=utf-8 39.4400ms
2023-05-04 15:53:53.9412|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7053/api/shows - -
2023-05-04 15:53:53.9412|INFO|Microsoft.AspNetCore.Cors.Infrastructure.CorsService|CORS policy execution successful.
2023-05-04 15:53:53.9412|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executing endpoint 'Nite.API.Controllers.TVShowsController.GetTVShows (Nite.API)'
2023-05-04 15:53:53.9412|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Route matched with {action = "GetTVShows", controller = "TVShows"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetTVShows() on controller Nite.API.Controllers.TVShowsController (Nite.API).
2023-05-04 15:53:53.9659|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (9ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
2023-05-04 15:53:53.9659|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (6ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
2023-05-04 15:53:53.9873|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (6ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [t].[Id], [t].[Audience], [t].[Banner], [t].[Description], [t].[Genre], [t].[Likes], [t].[Logo], [t].[Name], [t].[NewSeason], [t].[Poster], [t].[Seasons], [t].[Status], [t].[Streaming], [t].[Year]
FROM [TVShows] AS [t]
2023-05-04 15:53:53.9873|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ObjectResultExecutor|Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Nite.API.Data.Models.TVShowDTO, Nite.API, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2023-05-04 15:53:53.9873|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Executed action Nite.API.Controllers.TVShowsController.GetTVShows (Nite.API) in 46.257ms
2023-05-04 15:53:53.9873|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executed endpoint 'Nite.API.Controllers.TVShowsController.GetTVShows (Nite.API)'
2023-05-04 15:53:53.9873|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7053/api/shows - - - 200 1910 application/json;+charset=utf-8 47.4490ms
2023-05-04 15:53:56.3043|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7053/api/shows - -
2023-05-04 15:53:56.3043|INFO|Microsoft.AspNetCore.Cors.Infrastructure.CorsService|CORS policy execution successful.
2023-05-04 15:53:56.3043|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executing endpoint 'Nite.API.Controllers.TVShowsController.GetTVShows (Nite.API)'
2023-05-04 15:53:56.3043|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Route matched with {action = "GetTVShows", controller = "TVShows"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetTVShows() on controller Nite.API.Controllers.TVShowsController (Nite.API).
2023-05-04 15:53:56.3151|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (5ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
2023-05-04 15:53:56.3258|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (6ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
2023-05-04 15:53:56.3258|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (5ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [t].[Id], [t].[Audience], [t].[Banner], [t].[Description], [t].[Genre], [t].[Likes], [t].[Logo], [t].[Name], [t].[NewSeason], [t].[Poster], [t].[Seasons], [t].[Status], [t].[Streaming], [t].[Year]
FROM [TVShows] AS [t]
2023-05-04 15:53:56.3258|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ObjectResultExecutor|Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Nite.API.Data.Models.TVShowDTO, Nite.API, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2023-05-04 15:53:56.3258|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Executed action Nite.API.Controllers.TVShowsController.GetTVShows (Nite.API) in 30.702ms
2023-05-04 15:53:56.3258|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executed endpoint 'Nite.API.Controllers.TVShowsController.GetTVShows (Nite.API)'
2023-05-04 15:53:56.3258|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7053/api/shows - - - 200 1910 application/json;+charset=utf-8 31.6615ms
2023-05-04 15:54:04.7537|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7053/api/shows - -
2023-05-04 15:54:04.7537|INFO|Microsoft.AspNetCore.Cors.Infrastructure.CorsService|CORS policy execution successful.
2023-05-04 15:54:04.7537|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executing endpoint 'Nite.API.Controllers.TVShowsController.GetTVShows (Nite.API)'
2023-05-04 15:54:04.7537|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Route matched with {action = "GetTVShows", controller = "TVShows"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetTVShows() on controller Nite.API.Controllers.TVShowsController (Nite.API).
2023-05-04 15:54:04.7658|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (5ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
2023-05-04 15:54:04.7776|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (7ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
2023-05-04 15:54:04.7776|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (6ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [t].[Id], [t].[Audience], [t].[Banner], [t].[Description], [t].[Genre], [t].[Likes], [t].[Logo], [t].[Name], [t].[NewSeason], [t].[Poster], [t].[Seasons], [t].[Status], [t].[Streaming], [t].[Year]
FROM [TVShows] AS [t]
2023-05-04 15:54:04.7776|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ObjectResultExecutor|Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Nite.API.Data.Models.TVShowDTO, Nite.API, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2023-05-04 15:54:04.7776|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Executed action Nite.API.Controllers.TVShowsController.GetTVShows (Nite.API) in 35.5453ms
2023-05-04 15:54:04.7776|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executed endpoint 'Nite.API.Controllers.TVShowsController.GetTVShows (Nite.API)'
2023-05-04 15:54:04.7776|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7053/api/shows - - - 200 1910 application/json;+charset=utf-8 37.0621ms
2023-05-04 15:54:42.7546|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7053/api/shows - -
2023-05-04 15:54:42.7546|INFO|Microsoft.AspNetCore.Cors.Infrastructure.CorsService|CORS policy execution successful.
2023-05-04 15:54:42.7546|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executing endpoint 'Nite.API.Controllers.TVShowsController.GetTVShows (Nite.API)'
2023-05-04 15:54:42.7546|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Route matched with {action = "GetTVShows", controller = "TVShows"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetTVShows() on controller Nite.API.Controllers.TVShowsController (Nite.API).
2023-05-04 15:54:42.7800|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (5ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
2023-05-04 15:54:42.7922|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (7ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
2023-05-04 15:54:42.7922|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (6ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [t].[Id], [t].[Audience], [t].[Banner], [t].[Description], [t].[Genre], [t].[Likes], [t].[Logo], [t].[Name], [t].[NewSeason], [t].[Poster], [t].[Seasons], [t].[Status], [t].[Streaming], [t].[Year]
FROM [TVShows] AS [t]
2023-05-04 15:54:42.7922|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ObjectResultExecutor|Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Nite.API.Data.Models.TVShowDTO, Nite.API, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2023-05-04 15:54:42.7922|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Executed action Nite.API.Controllers.TVShowsController.GetTVShows (Nite.API) in 46.7879ms
2023-05-04 15:54:42.7922|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executed endpoint 'Nite.API.Controllers.TVShowsController.GetTVShows (Nite.API)'
2023-05-04 15:54:42.7922|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7053/api/shows - - - 200 1910 application/json;+charset=utf-8 50.1878ms
2023-05-04 15:55:08.7094|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7053/api/shows - -
2023-05-04 15:55:08.7094|INFO|Microsoft.AspNetCore.Cors.Infrastructure.CorsService|CORS policy execution successful.
2023-05-04 15:55:08.7094|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executing endpoint 'Nite.API.Controllers.TVShowsController.GetTVShows (Nite.API)'
2023-05-04 15:55:08.7094|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Route matched with {action = "GetTVShows", controller = "TVShows"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetTVShows() on controller Nite.API.Controllers.TVShowsController (Nite.API).
2023-05-04 15:55:08.7206|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (5ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
2023-05-04 15:55:08.7328|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (7ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
2023-05-04 15:55:08.7328|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (6ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [t].[Id], [t].[Audience], [t].[Banner], [t].[Description], [t].[Genre], [t].[Likes], [t].[Logo], [t].[Name], [t].[NewSeason], [t].[Poster], [t].[Seasons], [t].[Status], [t].[Streaming], [t].[Year]
FROM [TVShows] AS [t]
2023-05-04 15:55:08.7328|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ObjectResultExecutor|Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Nite.API.Data.Models.TVShowDTO, Nite.API, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2023-05-04 15:55:08.7451|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Executed action Nite.API.Controllers.TVShowsController.GetTVShows (Nite.API) in 34.7119ms
2023-05-04 15:55:08.7451|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executed endpoint 'Nite.API.Controllers.TVShowsController.GetTVShows (Nite.API)'
2023-05-04 15:55:08.7451|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7053/api/shows - - - 200 1910 application/json;+charset=utf-8 35.9713ms
2023-05-04 15:55:16.6007|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7053/api/shows - -
2023-05-04 15:55:16.6007|INFO|Microsoft.AspNetCore.Cors.Infrastructure.CorsService|CORS policy execution successful.
2023-05-04 15:55:16.6007|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executing endpoint 'Nite.API.Controllers.TVShowsController.GetTVShows (Nite.API)'
2023-05-04 15:55:16.6007|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Route matched with {action = "GetTVShows", controller = "TVShows"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetTVShows() on controller Nite.API.Controllers.TVShowsController (Nite.API).
2023-05-04 15:55:16.6128|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (5ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
2023-05-04 15:55:16.6243|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (7ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
2023-05-04 15:55:16.6243|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (4ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [t].[Id], [t].[Audience], [t].[Banner], [t].[Description], [t].[Genre], [t].[Likes], [t].[Logo], [t].[Name], [t].[NewSeason], [t].[Poster], [t].[Seasons], [t].[Status], [t].[Streaming], [t].[Year]
FROM [TVShows] AS [t]
2023-05-04 15:55:16.6243|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ObjectResultExecutor|Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Nite.API.Data.Models.TVShowDTO, Nite.API, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2023-05-04 15:55:16.6243|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Executed action Nite.API.Controllers.TVShowsController.GetTVShows (Nite.API) in 32.5475ms
2023-05-04 15:55:16.6243|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executed endpoint 'Nite.API.Controllers.TVShowsController.GetTVShows (Nite.API)'
2023-05-04 15:55:16.6354|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7053/api/shows - - - 200 1910 application/json;+charset=utf-8 34.6394ms
2023-05-04 16:01:56.1540|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7053/api/shows/1/seasons - -
2023-05-04 16:01:56.1540|INFO|Microsoft.AspNetCore.Cors.Infrastructure.CorsService|CORS policy execution successful.
2023-05-04 16:01:56.1540|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executing endpoint 'Nite.API.Controllers.SeasonsController.GetSeasons (Nite.API)'
2023-05-04 16:01:56.1823|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Route matched with {action = "GetSeasons", controller = "Seasons"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetSeasons(Int32) on controller Nite.API.Controllers.SeasonsController (Nite.API).
2023-05-04 16:01:56.3565|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (4ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
2023-05-04 16:01:56.3565|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (7ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
2023-05-04 16:01:56.5395|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (111ms) [Parameters=[@__showId_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [TVShows] AS [t]
        WHERE [t].[Id] = @__showId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-05-04 16:01:56.6016|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (19ms) [Parameters=[@__showId_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [t].[Id], [t].[DurationEpisode], [t].[Name], [t].[NumberOfEpisodes], [t].[TVShowId]
FROM [TVShowSeasons] AS [t]
WHERE [t].[TVShowId] = @__showId_0
2023-05-04 16:01:56.6707|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ObjectResultExecutor|Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Nite.API.Data.Models.SeasonDTO, Nite.API, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2023-05-04 16:01:56.6707|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Executed action Nite.API.Controllers.SeasonsController.GetSeasons (Nite.API) in 492.2129ms
2023-05-04 16:01:56.6707|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executed endpoint 'Nite.API.Controllers.SeasonsController.GetSeasons (Nite.API)'
2023-05-04 16:01:56.6707|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7053/api/shows/1/seasons - - - 200 141 application/json;+charset=utf-8 521.2603ms
2023-05-04 16:02:30.4264|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7053/api/shows - -
2023-05-04 16:02:30.4264|INFO|Microsoft.AspNetCore.Cors.Infrastructure.CorsService|CORS policy execution successful.
2023-05-04 16:02:30.4264|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executing endpoint 'Nite.API.Controllers.TVShowsController.GetTVShows (Nite.API)'
2023-05-04 16:02:30.4264|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Route matched with {action = "GetTVShows", controller = "TVShows"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetTVShows() on controller Nite.API.Controllers.TVShowsController (Nite.API).
2023-05-04 16:02:30.4422|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (4ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
2023-05-04 16:02:30.4495|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (5ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
2023-05-04 16:02:30.4495|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (4ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [t].[Id], [t].[Audience], [t].[Banner], [t].[Description], [t].[Genre], [t].[Likes], [t].[Logo], [t].[Name], [t].[NewSeason], [t].[Poster], [t].[Seasons], [t].[Status], [t].[Streaming], [t].[Year]
FROM [TVShows] AS [t]
2023-05-04 16:02:30.4495|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ObjectResultExecutor|Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Nite.API.Data.Models.TVShowDTO, Nite.API, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2023-05-04 16:02:30.4495|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Executed action Nite.API.Controllers.TVShowsController.GetTVShows (Nite.API) in 28.8899ms
2023-05-04 16:02:30.4495|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executed endpoint 'Nite.API.Controllers.TVShowsController.GetTVShows (Nite.API)'
2023-05-04 16:02:30.4495|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7053/api/shows - - - 200 1910 application/json;+charset=utf-8 30.9872ms
2023-05-04 16:02:35.5564|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7053/api/shows/2/seasons - -
2023-05-04 16:02:35.5564|INFO|Microsoft.AspNetCore.Cors.Infrastructure.CorsService|CORS policy execution successful.
2023-05-04 16:02:35.5574|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executing endpoint 'Nite.API.Controllers.SeasonsController.GetSeasons (Nite.API)'
2023-05-04 16:02:35.5574|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Route matched with {action = "GetSeasons", controller = "Seasons"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetSeasons(Int32) on controller Nite.API.Controllers.SeasonsController (Nite.API).
2023-05-04 16:02:35.5574|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (6ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
2023-05-04 16:02:35.5809|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (8ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
2023-05-04 16:02:35.5911|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (5ms) [Parameters=[@__showId_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [TVShows] AS [t]
        WHERE [t].[Id] = @__showId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-05-04 16:02:35.5911|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (6ms) [Parameters=[@__showId_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [t].[Id], [t].[DurationEpisode], [t].[Name], [t].[NumberOfEpisodes], [t].[TVShowId]
FROM [TVShowSeasons] AS [t]
WHERE [t].[TVShowId] = @__showId_0
2023-05-04 16:02:35.5911|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ObjectResultExecutor|Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Nite.API.Data.Models.SeasonDTO, Nite.API, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2023-05-04 16:02:35.5911|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Executed action Nite.API.Controllers.SeasonsController.GetSeasons (Nite.API) in 45.3425ms
2023-05-04 16:02:35.5911|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executed endpoint 'Nite.API.Controllers.SeasonsController.GetSeasons (Nite.API)'
2023-05-04 16:02:35.5911|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7053/api/shows/2/seasons - - - 200 2 application/json;+charset=utf-8 47.0502ms
2023-05-04 16:04:40.7871|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7053/api/shows/2/seasons - -
2023-05-04 16:04:40.7871|INFO|Microsoft.AspNetCore.Cors.Infrastructure.CorsService|CORS policy execution successful.
2023-05-04 16:04:40.7871|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executing endpoint 'Nite.API.Controllers.SeasonsController.GetSeasons (Nite.API)'
2023-05-04 16:04:40.7871|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Route matched with {action = "GetSeasons", controller = "Seasons"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetSeasons(Int32) on controller Nite.API.Controllers.SeasonsController (Nite.API).
2023-05-04 16:04:40.8073|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (7ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
2023-05-04 16:04:40.8073|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (7ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
2023-05-04 16:04:40.8304|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (5ms) [Parameters=[@__showId_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [TVShows] AS [t]
        WHERE [t].[Id] = @__showId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-05-04 16:04:40.8415|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (6ms) [Parameters=[@__showId_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [t].[Id], [t].[DurationEpisode], [t].[Name], [t].[NumberOfEpisodes], [t].[TVShowId]
FROM [TVShowSeasons] AS [t]
WHERE [t].[TVShowId] = @__showId_0
2023-05-04 16:04:40.8415|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ObjectResultExecutor|Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Nite.API.Data.Models.SeasonDTO, Nite.API, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2023-05-04 16:04:40.8415|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Executed action Nite.API.Controllers.SeasonsController.GetSeasons (Nite.API) in 54.355ms
2023-05-04 16:04:40.8415|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executed endpoint 'Nite.API.Controllers.SeasonsController.GetSeasons (Nite.API)'
2023-05-04 16:04:40.8415|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7053/api/shows/2/seasons - - - 200 2 application/json;+charset=utf-8 55.9134ms
2023-05-04 16:04:56.1854|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7053/api/shows/2/seasons - -
2023-05-04 16:04:56.1854|INFO|Microsoft.AspNetCore.Cors.Infrastructure.CorsService|CORS policy execution successful.
2023-05-04 16:04:56.1854|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executing endpoint 'Nite.API.Controllers.SeasonsController.GetSeasons (Nite.API)'
2023-05-04 16:04:56.1854|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Route matched with {action = "GetSeasons", controller = "Seasons"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetSeasons(Int32) on controller Nite.API.Controllers.SeasonsController (Nite.API).
2023-05-04 16:04:56.1981|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (6ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
2023-05-04 16:04:56.1981|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (7ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
2023-05-04 16:04:56.2220|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (6ms) [Parameters=[@__showId_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [TVShows] AS [t]
        WHERE [t].[Id] = @__showId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-05-04 16:04:56.2331|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (6ms) [Parameters=[@__showId_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [t].[Id], [t].[DurationEpisode], [t].[Name], [t].[NumberOfEpisodes], [t].[TVShowId]
FROM [TVShowSeasons] AS [t]
WHERE [t].[TVShowId] = @__showId_0
2023-05-04 16:04:56.2331|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ObjectResultExecutor|Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Nite.API.Data.Models.SeasonDTO, Nite.API, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2023-05-04 16:04:56.2331|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Executed action Nite.API.Controllers.SeasonsController.GetSeasons (Nite.API) in 46.8082ms
2023-05-04 16:04:56.2331|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executed endpoint 'Nite.API.Controllers.SeasonsController.GetSeasons (Nite.API)'
2023-05-04 16:04:56.2331|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7053/api/shows/2/seasons - - - 200 2 application/json;+charset=utf-8 48.5497ms
2023-05-04 16:05:53.1825|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7053/api/shows - -
2023-05-04 16:05:53.1825|INFO|Microsoft.AspNetCore.Cors.Infrastructure.CorsService|CORS policy execution successful.
2023-05-04 16:05:53.1825|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executing endpoint 'Nite.API.Controllers.TVShowsController.GetTVShows (Nite.API)'
2023-05-04 16:05:53.1825|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Route matched with {action = "GetTVShows", controller = "TVShows"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetTVShows() on controller Nite.API.Controllers.TVShowsController (Nite.API).
2023-05-04 16:05:53.2098|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (9ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
2023-05-04 16:05:53.2233|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (7ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
2023-05-04 16:05:53.2339|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (5ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [t].[Id], [t].[Audience], [t].[Banner], [t].[Description], [t].[Genre], [t].[Likes], [t].[Logo], [t].[Name], [t].[NewSeason], [t].[Poster], [t].[Seasons], [t].[Status], [t].[Streaming], [t].[Year]
FROM [TVShows] AS [t]
2023-05-04 16:05:53.2339|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ObjectResultExecutor|Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Nite.API.Data.Models.TVShowDTO, Nite.API, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2023-05-04 16:05:53.2339|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Executed action Nite.API.Controllers.TVShowsController.GetTVShows (Nite.API) in 49.9555ms
2023-05-04 16:05:53.2339|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executed endpoint 'Nite.API.Controllers.TVShowsController.GetTVShows (Nite.API)'
2023-05-04 16:05:53.2339|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7053/api/shows - - - 200 1910 application/json;+charset=utf-8 53.2591ms
2023-05-04 16:05:58.0904|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7053/api/shows/1/seasons - -
2023-05-04 16:05:58.0904|INFO|Microsoft.AspNetCore.Cors.Infrastructure.CorsService|CORS policy execution successful.
2023-05-04 16:05:58.0904|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executing endpoint 'Nite.API.Controllers.SeasonsController.GetSeasons (Nite.API)'
2023-05-04 16:05:58.0904|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Route matched with {action = "GetSeasons", controller = "Seasons"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetSeasons(Int32) on controller Nite.API.Controllers.SeasonsController (Nite.API).
2023-05-04 16:05:58.0904|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (5ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
2023-05-04 16:05:58.1081|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (5ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
2023-05-04 16:05:58.1081|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (3ms) [Parameters=[@__showId_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [TVShows] AS [t]
        WHERE [t].[Id] = @__showId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-05-04 16:05:58.1224|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (3ms) [Parameters=[@__showId_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [t].[Id], [t].[DurationEpisode], [t].[Name], [t].[NumberOfEpisodes], [t].[TVShowId]
FROM [TVShowSeasons] AS [t]
WHERE [t].[TVShowId] = @__showId_0
2023-05-04 16:05:58.1224|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ObjectResultExecutor|Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Nite.API.Data.Models.SeasonDTO, Nite.API, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2023-05-04 16:05:58.1224|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Executed action Nite.API.Controllers.SeasonsController.GetSeasons (Nite.API) in 32.0593ms
2023-05-04 16:05:58.1224|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executed endpoint 'Nite.API.Controllers.SeasonsController.GetSeasons (Nite.API)'
2023-05-04 16:05:58.1224|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7053/api/shows/1/seasons - - - 200 141 application/json;+charset=utf-8 32.7524ms
2023-05-04 16:06:00.1413|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7053/api/shows - -
2023-05-04 16:06:00.1413|INFO|Microsoft.AspNetCore.Cors.Infrastructure.CorsService|CORS policy execution successful.
2023-05-04 16:06:00.1413|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executing endpoint 'Nite.API.Controllers.TVShowsController.GetTVShows (Nite.API)'
2023-05-04 16:06:00.1413|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Route matched with {action = "GetTVShows", controller = "TVShows"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetTVShows() on controller Nite.API.Controllers.TVShowsController (Nite.API).
2023-05-04 16:06:00.1535|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (6ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
2023-05-04 16:06:00.1535|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (5ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
2023-05-04 16:06:00.1702|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (4ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [t].[Id], [t].[Audience], [t].[Banner], [t].[Description], [t].[Genre], [t].[Likes], [t].[Logo], [t].[Name], [t].[NewSeason], [t].[Poster], [t].[Seasons], [t].[Status], [t].[Streaming], [t].[Year]
FROM [TVShows] AS [t]
2023-05-04 16:06:00.1702|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ObjectResultExecutor|Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Nite.API.Data.Models.TVShowDTO, Nite.API, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2023-05-04 16:06:00.1702|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Executed action Nite.API.Controllers.TVShowsController.GetTVShows (Nite.API) in 28.9496ms
2023-05-04 16:06:00.1702|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executed endpoint 'Nite.API.Controllers.TVShowsController.GetTVShows (Nite.API)'
2023-05-04 16:06:00.1702|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7053/api/shows - - - 200 1910 application/json;+charset=utf-8 29.8260ms
2023-05-04 16:06:01.7082|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7053/api/shows/2/seasons - -
2023-05-04 16:06:01.7082|INFO|Microsoft.AspNetCore.Cors.Infrastructure.CorsService|CORS policy execution successful.
2023-05-04 16:06:01.7082|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executing endpoint 'Nite.API.Controllers.SeasonsController.GetSeasons (Nite.API)'
2023-05-04 16:06:01.7082|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Route matched with {action = "GetSeasons", controller = "Seasons"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetSeasons(Int32) on controller Nite.API.Controllers.SeasonsController (Nite.API).
2023-05-04 16:06:01.7201|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (6ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
2023-05-04 16:06:01.7312|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (6ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
2023-05-04 16:06:01.7312|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (5ms) [Parameters=[@__showId_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [TVShows] AS [t]
        WHERE [t].[Id] = @__showId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-05-04 16:06:01.7516|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (6ms) [Parameters=[@__showId_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [t].[Id], [t].[DurationEpisode], [t].[Name], [t].[NumberOfEpisodes], [t].[TVShowId]
FROM [TVShowSeasons] AS [t]
WHERE [t].[TVShowId] = @__showId_0
2023-05-04 16:06:01.7516|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ObjectResultExecutor|Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Nite.API.Data.Models.SeasonDTO, Nite.API, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2023-05-04 16:06:01.7516|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Executed action Nite.API.Controllers.SeasonsController.GetSeasons (Nite.API) in 43.2128ms
2023-05-04 16:06:01.7516|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executed endpoint 'Nite.API.Controllers.SeasonsController.GetSeasons (Nite.API)'
2023-05-04 16:06:01.7516|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7053/api/shows/2/seasons - - - 200 2 application/json;+charset=utf-8 44.4777ms
2023-05-04 16:06:49.0149|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7053/api/shows/2/seasons - -
2023-05-04 16:06:49.0494|INFO|Microsoft.AspNetCore.Cors.Infrastructure.CorsService|CORS policy execution successful.
2023-05-04 16:06:49.0494|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executing endpoint 'Nite.API.Controllers.SeasonsController.GetSeasons (Nite.API)'
2023-05-04 16:06:49.0494|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Route matched with {action = "GetSeasons", controller = "Seasons"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetSeasons(Int32) on controller Nite.API.Controllers.SeasonsController (Nite.API).
2023-05-04 16:06:49.0632|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (5ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
2023-05-04 16:06:49.0632|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (5ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
2023-05-04 16:06:49.1381|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (60ms) [Parameters=[@__showId_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [TVShows] AS [t]
        WHERE [t].[Id] = @__showId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-05-04 16:06:49.1381|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (5ms) [Parameters=[@__showId_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [t].[Id], [t].[DurationEpisode], [t].[Name], [t].[NumberOfEpisodes], [t].[TVShowId]
FROM [TVShowSeasons] AS [t]
WHERE [t].[TVShowId] = @__showId_0
2023-05-04 16:06:49.1381|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ObjectResultExecutor|Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Nite.API.Data.Models.SeasonDTO, Nite.API, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2023-05-04 16:06:49.1381|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Executed action Nite.API.Controllers.SeasonsController.GetSeasons (Nite.API) in 97.9476ms
2023-05-04 16:06:49.1381|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executed endpoint 'Nite.API.Controllers.SeasonsController.GetSeasons (Nite.API)'
2023-05-04 16:06:49.1381|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7053/api/shows/2/seasons - - - 200 2 application/json;+charset=utf-8 135.0320ms
2023-05-04 16:07:38.7075|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7053/api/shows/2/seasons - -
2023-05-04 16:07:38.7075|INFO|Microsoft.AspNetCore.Cors.Infrastructure.CorsService|CORS policy execution successful.
2023-05-04 16:07:38.7075|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executing endpoint 'Nite.API.Controllers.SeasonsController.GetSeasons (Nite.API)'
2023-05-04 16:07:38.7075|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Route matched with {action = "GetSeasons", controller = "Seasons"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetSeasons(Int32) on controller Nite.API.Controllers.SeasonsController (Nite.API).
2023-05-04 16:07:38.7303|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (5ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
2023-05-04 16:07:38.7303|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (8ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
2023-05-04 16:07:38.7531|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (5ms) [Parameters=[@__showId_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [TVShows] AS [t]
        WHERE [t].[Id] = @__showId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-05-04 16:07:38.7635|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (5ms) [Parameters=[@__showId_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [t].[Id], [t].[DurationEpisode], [t].[Name], [t].[NumberOfEpisodes], [t].[TVShowId]
FROM [TVShowSeasons] AS [t]
WHERE [t].[TVShowId] = @__showId_0
2023-05-04 16:07:38.7635|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ObjectResultExecutor|Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Nite.API.Data.Models.SeasonDTO, Nite.API, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2023-05-04 16:07:38.7635|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Executed action Nite.API.Controllers.SeasonsController.GetSeasons (Nite.API) in 54.6388ms
2023-05-04 16:07:38.7635|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executed endpoint 'Nite.API.Controllers.SeasonsController.GetSeasons (Nite.API)'
2023-05-04 16:07:38.7635|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7053/api/shows/2/seasons - - - 200 2 application/json;+charset=utf-8 57.5060ms
2023-05-04 16:07:42.7771|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7053/api/shows/2/seasons - -
2023-05-04 16:07:42.7771|INFO|Microsoft.AspNetCore.Cors.Infrastructure.CorsService|CORS policy execution successful.
2023-05-04 16:07:42.7771|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executing endpoint 'Nite.API.Controllers.SeasonsController.GetSeasons (Nite.API)'
2023-05-04 16:07:42.7771|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Route matched with {action = "GetSeasons", controller = "Seasons"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetSeasons(Int32) on controller Nite.API.Controllers.SeasonsController (Nite.API).
2023-05-04 16:07:42.7771|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (5ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
2023-05-04 16:07:42.8008|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (7ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
2023-05-04 16:07:42.8110|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (5ms) [Parameters=[@__showId_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [TVShows] AS [t]
        WHERE [t].[Id] = @__showId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-05-04 16:07:42.8110|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (6ms) [Parameters=[@__showId_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [t].[Id], [t].[DurationEpisode], [t].[Name], [t].[NumberOfEpisodes], [t].[TVShowId]
FROM [TVShowSeasons] AS [t]
WHERE [t].[TVShowId] = @__showId_0
2023-05-04 16:07:42.8110|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ObjectResultExecutor|Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Nite.API.Data.Models.SeasonDTO, Nite.API, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2023-05-04 16:07:42.8230|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Executed action Nite.API.Controllers.SeasonsController.GetSeasons (Nite.API) in 44.7478ms
2023-05-04 16:07:42.8230|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executed endpoint 'Nite.API.Controllers.SeasonsController.GetSeasons (Nite.API)'
2023-05-04 16:07:42.8230|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7053/api/shows/2/seasons - - - 200 2 application/json;+charset=utf-8 46.3161ms
2023-05-04 16:10:14.2234|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7053/api/shows/2/seasons - -
2023-05-04 16:10:14.2234|INFO|Microsoft.AspNetCore.Cors.Infrastructure.CorsService|CORS policy execution successful.
2023-05-04 16:10:14.2234|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executing endpoint 'Nite.API.Controllers.SeasonsController.GetSeasons (Nite.API)'
2023-05-04 16:10:14.2234|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Route matched with {action = "GetSeasons", controller = "Seasons"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetSeasons(Int32) on controller Nite.API.Controllers.SeasonsController (Nite.API).
2023-05-04 16:10:14.2349|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (4ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
2023-05-04 16:10:14.2349|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (4ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
2023-05-04 16:10:14.2492|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (3ms) [Parameters=[@__showId_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [TVShows] AS [t]
        WHERE [t].[Id] = @__showId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-05-04 16:10:14.2492|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (3ms) [Parameters=[@__showId_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [t].[Id], [t].[DurationEpisode], [t].[Name], [t].[NumberOfEpisodes], [t].[TVShowId]
FROM [TVShowSeasons] AS [t]
WHERE [t].[TVShowId] = @__showId_0
2023-05-04 16:10:14.2492|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ObjectResultExecutor|Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Nite.API.Data.Models.SeasonDTO, Nite.API, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2023-05-04 16:10:14.2492|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Executed action Nite.API.Controllers.SeasonsController.GetSeasons (Nite.API) in 30.4858ms
2023-05-04 16:10:14.2492|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executed endpoint 'Nite.API.Controllers.SeasonsController.GetSeasons (Nite.API)'
2023-05-04 16:10:14.2492|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7053/api/shows/2/seasons - - - 200 2 application/json;+charset=utf-8 33.4023ms
2023-05-04 16:10:19.6395|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7053/api/shows/2/seasons - -
2023-05-04 16:10:19.6395|INFO|Microsoft.AspNetCore.Cors.Infrastructure.CorsService|CORS policy execution successful.
2023-05-04 16:10:19.6395|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executing endpoint 'Nite.API.Controllers.SeasonsController.GetSeasons (Nite.API)'
2023-05-04 16:10:19.6395|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Route matched with {action = "GetSeasons", controller = "Seasons"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetSeasons(Int32) on controller Nite.API.Controllers.SeasonsController (Nite.API).
2023-05-04 16:10:19.6521|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (5ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
2023-05-04 16:10:19.6521|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (7ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
2023-05-04 16:10:19.6751|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (5ms) [Parameters=[@__showId_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [TVShows] AS [t]
        WHERE [t].[Id] = @__showId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-05-04 16:10:19.6860|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (6ms) [Parameters=[@__showId_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [t].[Id], [t].[DurationEpisode], [t].[Name], [t].[NumberOfEpisodes], [t].[TVShowId]
FROM [TVShowSeasons] AS [t]
WHERE [t].[TVShowId] = @__showId_0
2023-05-04 16:10:19.6860|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ObjectResultExecutor|Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Nite.API.Data.Models.SeasonDTO, Nite.API, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2023-05-04 16:10:19.6860|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Executed action Nite.API.Controllers.SeasonsController.GetSeasons (Nite.API) in 46.3853ms
2023-05-04 16:10:19.6860|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executed endpoint 'Nite.API.Controllers.SeasonsController.GetSeasons (Nite.API)'
2023-05-04 16:10:19.6860|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7053/api/shows/2/seasons - - - 200 2 application/json;+charset=utf-8 47.3800ms
2023-05-04 16:10:39.4394|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7053/api/shows/2/seasons - -
2023-05-04 16:10:39.4394|INFO|Microsoft.AspNetCore.Cors.Infrastructure.CorsService|CORS policy execution successful.
2023-05-04 16:10:39.4394|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executing endpoint 'Nite.API.Controllers.SeasonsController.GetSeasons (Nite.API)'
2023-05-04 16:10:39.4394|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Route matched with {action = "GetSeasons", controller = "Seasons"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetSeasons(Int32) on controller Nite.API.Controllers.SeasonsController (Nite.API).
2023-05-04 16:10:39.4583|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (5ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
2023-05-04 16:10:39.4690|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (6ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
2023-05-04 16:10:39.4690|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (5ms) [Parameters=[@__showId_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [TVShows] AS [t]
        WHERE [t].[Id] = @__showId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-05-04 16:10:39.4890|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (5ms) [Parameters=[@__showId_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [t].[Id], [t].[DurationEpisode], [t].[Name], [t].[NumberOfEpisodes], [t].[TVShowId]
FROM [TVShowSeasons] AS [t]
WHERE [t].[TVShowId] = @__showId_0
2023-05-04 16:10:39.4890|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ObjectResultExecutor|Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Nite.API.Data.Models.SeasonDTO, Nite.API, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2023-05-04 16:10:39.4890|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Executed action Nite.API.Controllers.SeasonsController.GetSeasons (Nite.API) in 48.9292ms
2023-05-04 16:10:39.4890|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executed endpoint 'Nite.API.Controllers.SeasonsController.GetSeasons (Nite.API)'
2023-05-04 16:10:39.4890|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7053/api/shows/2/seasons - - - 200 2 application/json;+charset=utf-8 51.3797ms
2023-05-04 16:10:48.4356|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7053/api/shows/2/seasons - -
2023-05-04 16:10:48.4356|INFO|Microsoft.AspNetCore.Cors.Infrastructure.CorsService|CORS policy execution successful.
2023-05-04 16:10:48.4356|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executing endpoint 'Nite.API.Controllers.SeasonsController.GetSeasons (Nite.API)'
2023-05-04 16:10:48.4356|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Route matched with {action = "GetSeasons", controller = "Seasons"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetSeasons(Int32) on controller Nite.API.Controllers.SeasonsController (Nite.API).
2023-05-04 16:10:48.5022|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (60ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
2023-05-04 16:10:48.5129|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (6ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
2023-05-04 16:10:48.5129|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (5ms) [Parameters=[@__showId_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [TVShows] AS [t]
        WHERE [t].[Id] = @__showId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-05-04 16:10:48.5333|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (5ms) [Parameters=[@__showId_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [t].[Id], [t].[DurationEpisode], [t].[Name], [t].[NumberOfEpisodes], [t].[TVShowId]
FROM [TVShowSeasons] AS [t]
WHERE [t].[TVShowId] = @__showId_0
2023-05-04 16:10:48.5333|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ObjectResultExecutor|Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Nite.API.Data.Models.SeasonDTO, Nite.API, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2023-05-04 16:10:48.5333|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Executed action Nite.API.Controllers.SeasonsController.GetSeasons (Nite.API) in 97.9295ms
2023-05-04 16:10:48.5333|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executed endpoint 'Nite.API.Controllers.SeasonsController.GetSeasons (Nite.API)'
2023-05-04 16:10:48.5333|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7053/api/shows/2/seasons - - - 200 2 application/json;+charset=utf-8 99.5990ms
2023-05-04 16:11:00.8101|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7053/api/shows/2/seasons - -
2023-05-04 16:11:00.8101|INFO|Microsoft.AspNetCore.Cors.Infrastructure.CorsService|CORS policy execution successful.
2023-05-04 16:11:00.8101|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executing endpoint 'Nite.API.Controllers.SeasonsController.GetSeasons (Nite.API)'
2023-05-04 16:11:00.8101|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Route matched with {action = "GetSeasons", controller = "Seasons"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetSeasons(Int32) on controller Nite.API.Controllers.SeasonsController (Nite.API).
2023-05-04 16:11:00.8101|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (5ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
2023-05-04 16:11:00.8326|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (7ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
2023-05-04 16:11:00.8419|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (5ms) [Parameters=[@__showId_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [TVShows] AS [t]
        WHERE [t].[Id] = @__showId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-05-04 16:11:00.8419|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (5ms) [Parameters=[@__showId_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [t].[Id], [t].[DurationEpisode], [t].[Name], [t].[NumberOfEpisodes], [t].[TVShowId]
FROM [TVShowSeasons] AS [t]
WHERE [t].[TVShowId] = @__showId_0
2023-05-04 16:11:00.8419|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ObjectResultExecutor|Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Nite.API.Data.Models.SeasonDTO, Nite.API, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2023-05-04 16:11:00.8419|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Executed action Nite.API.Controllers.SeasonsController.GetSeasons (Nite.API) in 40.8481ms
2023-05-04 16:11:00.8419|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executed endpoint 'Nite.API.Controllers.SeasonsController.GetSeasons (Nite.API)'
2023-05-04 16:11:00.8419|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7053/api/shows/2/seasons - - - 200 2 application/json;+charset=utf-8 42.7439ms
2023-05-04 16:14:41.9752|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7053/api/shows - -
2023-05-04 16:14:41.9752|INFO|Microsoft.AspNetCore.Cors.Infrastructure.CorsService|CORS policy execution successful.
2023-05-04 16:14:41.9752|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executing endpoint 'Nite.API.Controllers.TVShowsController.GetTVShows (Nite.API)'
2023-05-04 16:14:41.9752|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Route matched with {action = "GetTVShows", controller = "TVShows"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetTVShows() on controller Nite.API.Controllers.TVShowsController (Nite.API).
2023-05-04 16:14:41.9986|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (6ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
2023-05-04 16:14:42.0108|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (7ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
2023-05-04 16:14:42.0108|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (5ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [t].[Id], [t].[Audience], [t].[Banner], [t].[Description], [t].[Genre], [t].[Likes], [t].[Logo], [t].[Name], [t].[NewSeason], [t].[Poster], [t].[Seasons], [t].[Status], [t].[Streaming], [t].[Year]
FROM [TVShows] AS [t]
2023-05-04 16:14:42.0108|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ObjectResultExecutor|Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Nite.API.Data.Models.TVShowDTO, Nite.API, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2023-05-04 16:14:42.0108|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Executed action Nite.API.Controllers.TVShowsController.GetTVShows (Nite.API) in 45.2084ms
2023-05-04 16:14:42.0108|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executed endpoint 'Nite.API.Controllers.TVShowsController.GetTVShows (Nite.API)'
2023-05-04 16:14:42.0108|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7053/api/shows - - - 200 1910 application/json;+charset=utf-8 47.4779ms
2023-05-04 16:14:47.0993|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7053/api/shows/1/seasons - -
2023-05-04 16:14:47.0993|INFO|Microsoft.AspNetCore.Cors.Infrastructure.CorsService|CORS policy execution successful.
2023-05-04 16:14:47.0993|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executing endpoint 'Nite.API.Controllers.SeasonsController.GetSeasons (Nite.API)'
2023-05-04 16:14:47.0993|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Route matched with {action = "GetSeasons", controller = "Seasons"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetSeasons(Int32) on controller Nite.API.Controllers.SeasonsController (Nite.API).
2023-05-04 16:14:47.1114|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (5ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
2023-05-04 16:14:47.1782|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (7ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
2023-05-04 16:14:47.1896|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (5ms) [Parameters=[@__showId_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [TVShows] AS [t]
        WHERE [t].[Id] = @__showId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-05-04 16:14:47.2004|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (5ms) [Parameters=[@__showId_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [t].[Id], [t].[DurationEpisode], [t].[Name], [t].[NumberOfEpisodes], [t].[TVShowId]
FROM [TVShowSeasons] AS [t]
WHERE [t].[TVShowId] = @__showId_0
2023-05-04 16:14:47.2004|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ObjectResultExecutor|Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Nite.API.Data.Models.SeasonDTO, Nite.API, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2023-05-04 16:14:47.2004|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Executed action Nite.API.Controllers.SeasonsController.GetSeasons (Nite.API) in 101.1195ms
2023-05-04 16:14:47.2004|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executed endpoint 'Nite.API.Controllers.SeasonsController.GetSeasons (Nite.API)'
2023-05-04 16:14:47.2004|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7053/api/shows/1/seasons - - - 200 141 application/json;+charset=utf-8 102.3890ms
2023-05-04 16:14:54.1152|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7053/api/shows - -
2023-05-04 16:14:54.1152|INFO|Microsoft.AspNetCore.Cors.Infrastructure.CorsService|CORS policy execution successful.
2023-05-04 16:14:54.1152|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executing endpoint 'Nite.API.Controllers.TVShowsController.GetTVShows (Nite.API)'
2023-05-04 16:14:54.1152|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Route matched with {action = "GetTVShows", controller = "TVShows"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetTVShows() on controller Nite.API.Controllers.TVShowsController (Nite.API).
2023-05-04 16:14:54.1302|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (6ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
2023-05-04 16:14:54.1420|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (7ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
2023-05-04 16:14:54.1516|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (5ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [t].[Id], [t].[Audience], [t].[Banner], [t].[Description], [t].[Genre], [t].[Likes], [t].[Logo], [t].[Name], [t].[NewSeason], [t].[Poster], [t].[Seasons], [t].[Status], [t].[Streaming], [t].[Year]
FROM [TVShows] AS [t]
2023-05-04 16:14:54.1516|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ObjectResultExecutor|Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Nite.API.Data.Models.TVShowDTO, Nite.API, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2023-05-04 16:14:54.1516|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Executed action Nite.API.Controllers.TVShowsController.GetTVShows (Nite.API) in 36.9762ms
2023-05-04 16:14:54.1516|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executed endpoint 'Nite.API.Controllers.TVShowsController.GetTVShows (Nite.API)'
2023-05-04 16:14:54.1516|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7053/api/shows - - - 200 1910 application/json;+charset=utf-8 38.5914ms
2023-05-04 16:14:56.1615|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7053/api/shows/2/seasons - -
2023-05-04 16:14:56.1615|INFO|Microsoft.AspNetCore.Cors.Infrastructure.CorsService|CORS policy execution successful.
2023-05-04 16:14:56.1615|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executing endpoint 'Nite.API.Controllers.SeasonsController.GetSeasons (Nite.API)'
2023-05-04 16:14:56.1615|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Route matched with {action = "GetSeasons", controller = "Seasons"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetSeasons(Int32) on controller Nite.API.Controllers.SeasonsController (Nite.API).
2023-05-04 16:14:56.1752|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (7ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
2023-05-04 16:14:56.1857|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (6ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
2023-05-04 16:14:56.1857|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (5ms) [Parameters=[@__showId_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [TVShows] AS [t]
        WHERE [t].[Id] = @__showId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-05-04 16:14:56.2055|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (4ms) [Parameters=[@__showId_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [t].[Id], [t].[DurationEpisode], [t].[Name], [t].[NumberOfEpisodes], [t].[TVShowId]
FROM [TVShowSeasons] AS [t]
WHERE [t].[TVShowId] = @__showId_0
2023-05-04 16:14:56.2055|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ObjectResultExecutor|Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Nite.API.Data.Models.SeasonDTO, Nite.API, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2023-05-04 16:14:56.2055|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Executed action Nite.API.Controllers.SeasonsController.GetSeasons (Nite.API) in 44.2442ms
2023-05-04 16:14:56.2055|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executed endpoint 'Nite.API.Controllers.SeasonsController.GetSeasons (Nite.API)'
2023-05-04 16:14:56.2055|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7053/api/shows/2/seasons - - - 200 2 application/json;+charset=utf-8 45.2272ms
2023-05-04 16:15:05.0504|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7053/api/shows - -
2023-05-04 16:15:05.0504|INFO|Microsoft.AspNetCore.Cors.Infrastructure.CorsService|CORS policy execution successful.
2023-05-04 16:15:05.0504|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executing endpoint 'Nite.API.Controllers.TVShowsController.GetTVShows (Nite.API)'
2023-05-04 16:15:05.0504|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Route matched with {action = "GetTVShows", controller = "TVShows"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetTVShows() on controller Nite.API.Controllers.TVShowsController (Nite.API).
2023-05-04 16:15:05.0628|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (5ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
2023-05-04 16:15:05.0734|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (6ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
2023-05-04 16:15:05.0734|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (5ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [t].[Id], [t].[Audience], [t].[Banner], [t].[Description], [t].[Genre], [t].[Likes], [t].[Logo], [t].[Name], [t].[NewSeason], [t].[Poster], [t].[Seasons], [t].[Status], [t].[Streaming], [t].[Year]
FROM [TVShows] AS [t]
2023-05-04 16:15:05.0734|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ObjectResultExecutor|Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Nite.API.Data.Models.TVShowDTO, Nite.API, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2023-05-04 16:15:05.0734|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Executed action Nite.API.Controllers.TVShowsController.GetTVShows (Nite.API) in 33.3166ms
2023-05-04 16:15:05.0734|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executed endpoint 'Nite.API.Controllers.TVShowsController.GetTVShows (Nite.API)'
2023-05-04 16:15:05.0734|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7053/api/shows - - - 200 1910 application/json;+charset=utf-8 34.6504ms
2023-05-04 16:15:06.5536|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7053/api/shows/1/seasons - -
2023-05-04 16:15:06.5536|INFO|Microsoft.AspNetCore.Cors.Infrastructure.CorsService|CORS policy execution successful.
2023-05-04 16:15:06.5536|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executing endpoint 'Nite.API.Controllers.SeasonsController.GetSeasons (Nite.API)'
2023-05-04 16:15:06.5536|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Route matched with {action = "GetSeasons", controller = "Seasons"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetSeasons(Int32) on controller Nite.API.Controllers.SeasonsController (Nite.API).
2023-05-04 16:15:06.5654|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (6ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
2023-05-04 16:15:06.5780|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (7ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
2023-05-04 16:15:06.5888|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (6ms) [Parameters=[@__showId_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [TVShows] AS [t]
        WHERE [t].[Id] = @__showId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-05-04 16:15:06.6541|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (61ms) [Parameters=[@__showId_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [t].[Id], [t].[DurationEpisode], [t].[Name], [t].[NumberOfEpisodes], [t].[TVShowId]
FROM [TVShowSeasons] AS [t]
WHERE [t].[TVShowId] = @__showId_0
2023-05-04 16:15:06.6541|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ObjectResultExecutor|Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Nite.API.Data.Models.SeasonDTO, Nite.API, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2023-05-04 16:15:06.6541|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Executed action Nite.API.Controllers.SeasonsController.GetSeasons (Nite.API) in 100.5739ms
2023-05-04 16:15:06.6541|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executed endpoint 'Nite.API.Controllers.SeasonsController.GetSeasons (Nite.API)'
2023-05-04 16:15:06.6541|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7053/api/shows/1/seasons - - - 200 141 application/json;+charset=utf-8 101.4749ms
2023-05-04 16:15:21.2349|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7053/api/shows - -
2023-05-04 16:15:21.2349|INFO|Microsoft.AspNetCore.Cors.Infrastructure.CorsService|CORS policy execution successful.
2023-05-04 16:15:21.2349|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executing endpoint 'Nite.API.Controllers.TVShowsController.GetTVShows (Nite.API)'
2023-05-04 16:15:21.2349|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Route matched with {action = "GetTVShows", controller = "TVShows"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetTVShows() on controller Nite.API.Controllers.TVShowsController (Nite.API).
2023-05-04 16:15:21.2467|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (5ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
2023-05-04 16:15:21.2467|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (6ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
2023-05-04 16:15:21.2668|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (5ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [t].[Id], [t].[Audience], [t].[Banner], [t].[Description], [t].[Genre], [t].[Likes], [t].[Logo], [t].[Name], [t].[NewSeason], [t].[Poster], [t].[Seasons], [t].[Status], [t].[Streaming], [t].[Year]
FROM [TVShows] AS [t]
2023-05-04 16:15:21.2668|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ObjectResultExecutor|Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Nite.API.Data.Models.TVShowDTO, Nite.API, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2023-05-04 16:15:21.2668|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Executed action Nite.API.Controllers.TVShowsController.GetTVShows (Nite.API) in 31.9188ms
2023-05-04 16:15:21.2668|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executed endpoint 'Nite.API.Controllers.TVShowsController.GetTVShows (Nite.API)'
2023-05-04 16:15:21.2668|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7053/api/shows - - - 200 1910 application/json;+charset=utf-8 33.3594ms
2023-05-04 16:15:26.6531|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7053/api/shows - -
2023-05-04 16:15:26.6531|INFO|Microsoft.AspNetCore.Cors.Infrastructure.CorsService|CORS policy execution successful.
2023-05-04 16:15:26.6531|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executing endpoint 'Nite.API.Controllers.TVShowsController.GetTVShows (Nite.API)'
2023-05-04 16:15:26.6531|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Route matched with {action = "GetTVShows", controller = "TVShows"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetTVShows() on controller Nite.API.Controllers.TVShowsController (Nite.API).
2023-05-04 16:15:26.6531|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (5ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
2023-05-04 16:15:26.6849|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (16ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
2023-05-04 16:15:26.6849|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (5ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [t].[Id], [t].[Audience], [t].[Banner], [t].[Description], [t].[Genre], [t].[Likes], [t].[Logo], [t].[Name], [t].[NewSeason], [t].[Poster], [t].[Seasons], [t].[Status], [t].[Streaming], [t].[Year]
FROM [TVShows] AS [t]
2023-05-04 16:15:26.6849|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ObjectResultExecutor|Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Nite.API.Data.Models.TVShowDTO, Nite.API, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2023-05-04 16:15:26.6849|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Executed action Nite.API.Controllers.TVShowsController.GetTVShows (Nite.API) in 42.4584ms
2023-05-04 16:15:26.6849|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executed endpoint 'Nite.API.Controllers.TVShowsController.GetTVShows (Nite.API)'
2023-05-04 16:15:26.6849|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7053/api/shows - - - 200 1910 application/json;+charset=utf-8 44.2017ms
2023-05-04 16:15:28.1568|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7053/api/shows/1/seasons - -
2023-05-04 16:15:28.1568|INFO|Microsoft.AspNetCore.Cors.Infrastructure.CorsService|CORS policy execution successful.
2023-05-04 16:15:28.1568|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executing endpoint 'Nite.API.Controllers.SeasonsController.GetSeasons (Nite.API)'
2023-05-04 16:15:28.1568|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Route matched with {action = "GetSeasons", controller = "Seasons"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetSeasons(Int32) on controller Nite.API.Controllers.SeasonsController (Nite.API).
2023-05-04 16:15:28.1568|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (4ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
2023-05-04 16:15:28.1727|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (4ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
2023-05-04 16:15:28.1727|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (3ms) [Parameters=[@__showId_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [TVShows] AS [t]
        WHERE [t].[Id] = @__showId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-05-04 16:15:28.2002|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (16ms) [Parameters=[@__showId_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [t].[Id], [t].[DurationEpisode], [t].[Name], [t].[NumberOfEpisodes], [t].[TVShowId]
FROM [TVShowSeasons] AS [t]
WHERE [t].[TVShowId] = @__showId_0
2023-05-04 16:15:28.2002|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ObjectResultExecutor|Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Nite.API.Data.Models.SeasonDTO, Nite.API, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2023-05-04 16:15:28.2002|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Executed action Nite.API.Controllers.SeasonsController.GetSeasons (Nite.API) in 43.6112ms
2023-05-04 16:15:28.2002|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executed endpoint 'Nite.API.Controllers.SeasonsController.GetSeasons (Nite.API)'
2023-05-04 16:15:28.2002|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7053/api/shows/1/seasons - - - 200 141 application/json;+charset=utf-8 44.3516ms
2023-05-04 16:15:32.7886|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7053/api/shows - -
2023-05-04 16:15:32.7886|INFO|Microsoft.AspNetCore.Cors.Infrastructure.CorsService|CORS policy execution successful.
2023-05-04 16:15:32.7886|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executing endpoint 'Nite.API.Controllers.TVShowsController.GetTVShows (Nite.API)'
2023-05-04 16:15:32.7886|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Route matched with {action = "GetTVShows", controller = "TVShows"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetTVShows() on controller Nite.API.Controllers.TVShowsController (Nite.API).
2023-05-04 16:15:32.8013|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (6ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
2023-05-04 16:15:32.8122|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (6ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
2023-05-04 16:15:32.8236|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (6ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [t].[Id], [t].[Audience], [t].[Banner], [t].[Description], [t].[Genre], [t].[Likes], [t].[Logo], [t].[Name], [t].[NewSeason], [t].[Poster], [t].[Seasons], [t].[Status], [t].[Streaming], [t].[Year]
FROM [TVShows] AS [t]
2023-05-04 16:15:32.8236|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ObjectResultExecutor|Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Nite.API.Data.Models.TVShowDTO, Nite.API, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2023-05-04 16:15:32.8236|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Executed action Nite.API.Controllers.TVShowsController.GetTVShows (Nite.API) in 35.1059ms
2023-05-04 16:15:32.8236|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executed endpoint 'Nite.API.Controllers.TVShowsController.GetTVShows (Nite.API)'
2023-05-04 16:15:32.8236|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7053/api/shows - - - 200 1910 application/json;+charset=utf-8 36.3479ms
